Classfile /Users/rida/src/accessors/build/classes/java/main/foo/rida/SimpleBenchmark.class
  Last modified Sep 9, 2023; size 3975 bytes
  SHA-256 checksum 7c849c6bd2f0e0cd955fd38016395a0814eb0d1050d5c437ee857e65196f5f8d
  Compiled from "SimpleBenchmark.java"
public class foo.rida.SimpleBenchmark
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #9                          // foo/rida/SimpleBenchmark
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 8, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Integer            1000000
    #8 = Methodref          #9.#10        // foo/rida/SimpleBenchmark.generateRawWrappers:(I)[Lfoo/rida/RawWrapper;
    #9 = Class              #11           // foo/rida/SimpleBenchmark
   #10 = NameAndType        #12:#13       // generateRawWrappers:(I)[Lfoo/rida/RawWrapper;
   #11 = Utf8               foo/rida/SimpleBenchmark
   #12 = Utf8               generateRawWrappers
   #13 = Utf8               (I)[Lfoo/rida/RawWrapper;
   #14 = Methodref          #9.#15        // foo/rida/SimpleBenchmark.generateGetterWrappers:(I)[Lfoo/rida/GetterWrapper;
   #15 = NameAndType        #16:#17       // generateGetterWrappers:(I)[Lfoo/rida/GetterWrapper;
   #16 = Utf8               generateGetterWrappers
   #17 = Utf8               (I)[Lfoo/rida/GetterWrapper;
   #18 = Methodref          #9.#19        // foo/rida/SimpleBenchmark.generateVirtualGetterWrappers:(I)[Lfoo/rida/ParentGetterWrapper;
   #19 = NameAndType        #20:#21       // generateVirtualGetterWrappers:(I)[Lfoo/rida/ParentGetterWrapper;
   #20 = Utf8               generateVirtualGetterWrappers
   #21 = Utf8               (I)[Lfoo/rida/ParentGetterWrapper;
   #22 = Methodref          #23.#24       // java/lang/System.currentTimeMillis:()J
   #23 = Class              #25           // java/lang/System
   #24 = NameAndType        #26:#27       // currentTimeMillis:()J
   #25 = Utf8               java/lang/System
   #26 = Utf8               currentTimeMillis
   #27 = Utf8               ()J
   #28 = Methodref          #9.#29        // foo/rida/SimpleBenchmark.benchmarkRawWrappers:([Lfoo/rida/RawWrapper;)I
   #29 = NameAndType        #30:#31       // benchmarkRawWrappers:([Lfoo/rida/RawWrapper;)I
   #30 = Utf8               benchmarkRawWrappers
   #31 = Utf8               ([Lfoo/rida/RawWrapper;)I
   #32 = Fieldref           #23.#33       // java/lang/System.out:Ljava/io/PrintStream;
   #33 = NameAndType        #34:#35       // out:Ljava/io/PrintStream;
   #34 = Utf8               out
   #35 = Utf8               Ljava/io/PrintStream;
   #36 = InvokeDynamic      #0:#37        // #0:makeConcatWithConstants:(JI)Ljava/lang/String;
   #37 = NameAndType        #38:#39       // makeConcatWithConstants:(JI)Ljava/lang/String;
   #38 = Utf8               makeConcatWithConstants
   #39 = Utf8               (JI)Ljava/lang/String;
   #40 = Methodref          #41.#42       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #41 = Class              #43           // java/io/PrintStream
   #42 = NameAndType        #44:#45       // println:(Ljava/lang/String;)V
   #43 = Utf8               java/io/PrintStream
   #44 = Utf8               println
   #45 = Utf8               (Ljava/lang/String;)V
   #46 = Methodref          #9.#47        // foo/rida/SimpleBenchmark.benchmarkGetterWrappers:([Lfoo/rida/GetterWrapper;)I
   #47 = NameAndType        #48:#49       // benchmarkGetterWrappers:([Lfoo/rida/GetterWrapper;)I
   #48 = Utf8               benchmarkGetterWrappers
   #49 = Utf8               ([Lfoo/rida/GetterWrapper;)I
   #50 = InvokeDynamic      #1:#37        // #1:makeConcatWithConstants:(JI)Ljava/lang/String;
   #51 = Methodref          #9.#52        // foo/rida/SimpleBenchmark.benchmarkVirtualGetterWrappers:([Lfoo/rida/ParentGetterWrapper;)I
   #52 = NameAndType        #53:#54       // benchmarkVirtualGetterWrappers:([Lfoo/rida/ParentGetterWrapper;)I
   #53 = Utf8               benchmarkVirtualGetterWrappers
   #54 = Utf8               ([Lfoo/rida/ParentGetterWrapper;)I
   #55 = InvokeDynamic      #2:#37        // #2:makeConcatWithConstants:(JI)Ljava/lang/String;
   #56 = Class              #57           // foo/rida/RawWrapper
   #57 = Utf8               foo/rida/RawWrapper
   #58 = Class              #59           // java/util/Random
   #59 = Utf8               java/util/Random
   #60 = Methodref          #58.#3        // java/util/Random."<init>":()V
   #61 = Methodref          #58.#62       // java/util/Random.nextInt:()I
   #62 = NameAndType        #63:#64       // nextInt:()I
   #63 = Utf8               nextInt
   #64 = Utf8               ()I
   #65 = Methodref          #56.#66       // foo/rida/RawWrapper."<init>":(I)V
   #66 = NameAndType        #5:#67        // "<init>":(I)V
   #67 = Utf8               (I)V
   #68 = Class              #69           // foo/rida/GetterWrapper
   #69 = Utf8               foo/rida/GetterWrapper
   #70 = Methodref          #68.#66       // foo/rida/GetterWrapper."<init>":(I)V
   #71 = Class              #72           // foo/rida/ParentGetterWrapper
   #72 = Utf8               foo/rida/ParentGetterWrapper
   #73 = Methodref          #58.#74       // java/util/Random.nextInt:(I)I
   #74 = NameAndType        #63:#75       // nextInt:(I)I
   #75 = Utf8               (I)I
   #76 = Methodref          #71.#66       // foo/rida/ParentGetterWrapper."<init>":(I)V
   #77 = Class              #78           // foo/rida/ChildGetterWrapper
   #78 = Utf8               foo/rida/ChildGetterWrapper
   #79 = Methodref          #77.#66       // foo/rida/ChildGetterWrapper."<init>":(I)V
   #80 = Fieldref           #56.#81       // foo/rida/RawWrapper.number:I
   #81 = NameAndType        #82:#83       // number:I
   #82 = Utf8               number
   #83 = Utf8               I
   #84 = Methodref          #68.#85       // foo/rida/GetterWrapper.getNumber:()I
   #85 = NameAndType        #86:#64       // getNumber:()I
   #86 = Utf8               getNumber
   #87 = Methodref          #71.#85       // foo/rida/ParentGetterWrapper.getNumber:()I
   #88 = Utf8               Code
   #89 = Utf8               LineNumberTable
   #90 = Utf8               LocalVariableTable
   #91 = Utf8               this
   #92 = Utf8               Lfoo/rida/SimpleBenchmark;
   #93 = Utf8               main
   #94 = Utf8               ([Ljava/lang/String;)V
   #95 = Utf8               args
   #96 = Utf8               [Ljava/lang/String;
   #97 = Utf8               benchmarkSize
   #98 = Utf8               rawWrappers
   #99 = Utf8               [Lfoo/rida/RawWrapper;
  #100 = Utf8               getterWrappers
  #101 = Utf8               [Lfoo/rida/GetterWrapper;
  #102 = Utf8               virtualGetterWrappers
  #103 = Utf8               [Lfoo/rida/ParentGetterWrapper;
  #104 = Utf8               rawWrappersStart
  #105 = Utf8               J
  #106 = Utf8               rawWrappersSum
  #107 = Utf8               rawWrappersEnd
  #108 = Utf8               rawWrappersTime
  #109 = Utf8               getterWrappersStart
  #110 = Utf8               getterWrappersSum
  #111 = Utf8               getterWrappersEnd
  #112 = Utf8               getterWrappersTime
  #113 = Utf8               virtualGetterWrappersStart
  #114 = Utf8               virtualGetterWrappersSum
  #115 = Utf8               virtualGetterWrappersEnd
  #116 = Utf8               virtualGetterWrappersTime
  #117 = Utf8               wrapper
  #118 = Utf8               Lfoo/rida/RawWrapper;
  #119 = Utf8               i
  #120 = Utf8               wrappers
  #121 = Utf8               randomGenerator
  #122 = Utf8               Ljava/util/Random;
  #123 = Utf8               StackMapTable
  #124 = Class              #99           // "[Lfoo/rida/RawWrapper;"
  #125 = Utf8               Lfoo/rida/GetterWrapper;
  #126 = Class              #101          // "[Lfoo/rida/GetterWrapper;"
  #127 = Utf8               Lfoo/rida/ParentGetterWrapper;
  #128 = Utf8               coinToss
  #129 = Class              #103          // "[Lfoo/rida/ParentGetterWrapper;"
  #130 = Utf8               sum
  #131 = Utf8               SourceFile
  #132 = Utf8               SimpleBenchmark.java
  #133 = Utf8               BootstrapMethods
  #134 = MethodHandle       6:#135        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = Methodref          #136.#137     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = Class              #138          // java/lang/invoke/StringConcatFactory
  #137 = NameAndType        #38:#139      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = Utf8               java/lang/invoke/StringConcatFactory
  #139 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #140 = String             #141          // raw wrappers: \u0001ms., sum: \u0001
  #141 = Utf8               raw wrappers: \u0001ms., sum: \u0001
  #142 = String             #143          // getter wrappers: \u0001ms., sum: \u0001
  #143 = Utf8               getter wrappers: \u0001ms., sum: \u0001
  #144 = String             #145          // virtual getter wrappers: \u0001ms., sum: \u0001
  #145 = Utf8               virtual getter wrappers: \u0001ms., sum: \u0001
  #146 = Utf8               InnerClasses
  #147 = Class              #148          // java/lang/invoke/MethodHandles$Lookup
  #148 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #149 = Class              #150          // java/lang/invoke/MethodHandles
  #150 = Utf8               java/lang/invoke/MethodHandles
  #151 = Utf8               Lookup
{
  public foo.rida.SimpleBenchmark();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lfoo/rida/SimpleBenchmark;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=26, args_size=1
         0: ldc           #7                  // int 1000000
         2: istore_1
         3: ldc           #7                  // int 1000000
         5: invokestatic  #8                  // Method generateRawWrappers:(I)[Lfoo/rida/RawWrapper;
         8: astore_2
         9: ldc           #7                  // int 1000000
        11: invokestatic  #14                 // Method generateGetterWrappers:(I)[Lfoo/rida/GetterWrapper;
        14: astore_3
        15: ldc           #7                  // int 1000000
        17: invokestatic  #18                 // Method generateVirtualGetterWrappers:(I)[Lfoo/rida/ParentGetterWrapper;
        20: astore        4
        22: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
        25: lstore        5
        27: aload_2
        28: invokestatic  #28                 // Method benchmarkRawWrappers:([Lfoo/rida/RawWrapper;)I
        31: istore        7
        33: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
        36: lstore        8
        38: lload         8
        40: lload         5
        42: lsub
        43: lstore        10
        45: getstatic     #32                 // Field java/lang/System.out:Ljava/io/PrintStream;
        48: lload         10
        50: iload         7
        52: invokedynamic #36,  0             // InvokeDynamic #0:makeConcatWithConstants:(JI)Ljava/lang/String;
        57: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        60: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
        63: lstore        12
        65: aload_3
        66: invokestatic  #46                 // Method benchmarkGetterWrappers:([Lfoo/rida/GetterWrapper;)I
        69: istore        14
        71: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
        74: lstore        15
        76: lload         15
        78: lload         12
        80: lsub
        81: lstore        17
        83: getstatic     #32                 // Field java/lang/System.out:Ljava/io/PrintStream;
        86: lload         17
        88: iload         14
        90: invokedynamic #50,  0             // InvokeDynamic #1:makeConcatWithConstants:(JI)Ljava/lang/String;
        95: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        98: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
       101: lstore        19
       103: aload         4
       105: invokestatic  #51                 // Method benchmarkVirtualGetterWrappers:([Lfoo/rida/ParentGetterWrapper;)I
       108: istore        21
       110: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
       113: lstore        22
       115: lload         22
       117: lload         19
       119: lsub
       120: lstore        24
       122: getstatic     #32                 // Field java/lang/System.out:Ljava/io/PrintStream;
       125: lload         24
       127: iload         21
       129: invokedynamic #55,  0             // InvokeDynamic #2:makeConcatWithConstants:(JI)Ljava/lang/String;
       134: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       137: return
      LineNumberTable:
        line 8: 0
        line 10: 3
        line 11: 9
        line 12: 15
        line 14: 22
        line 15: 27
        line 16: 33
        line 17: 38
        line 18: 45
        line 20: 60
        line 21: 65
        line 22: 71
        line 23: 76
        line 24: 83
        line 26: 98
        line 27: 103
        line 28: 110
        line 29: 115
        line 30: 122
        line 31: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  args   [Ljava/lang/String;
            3     135     1 benchmarkSize   I
            9     129     2 rawWrappers   [Lfoo/rida/RawWrapper;
           15     123     3 getterWrappers   [Lfoo/rida/GetterWrapper;
           22     116     4 virtualGetterWrappers   [Lfoo/rida/ParentGetterWrapper;
           27     111     5 rawWrappersStart   J
           33     105     7 rawWrappersSum   I
           38     100     8 rawWrappersEnd   J
           45      93    10 rawWrappersTime   J
           65      73    12 getterWrappersStart   J
           71      67    14 getterWrappersSum   I
           76      62    15 getterWrappersEnd   J
           83      55    17 getterWrappersTime   J
          103      35    19 virtualGetterWrappersStart   J
          110      28    21 virtualGetterWrappersSum   I
          115      23    22 virtualGetterWrappersEnd   J
          122      16    24 virtualGetterWrappersTime   J

  public static foo.rida.RawWrapper[] generateRawWrappers(int);
    descriptor: (I)[Lfoo/rida/RawWrapper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=6, args_size=1
         0: iload_0
         1: anewarray     #56                 // class foo/rida/RawWrapper
         4: astore_1
         5: new           #58                 // class java/util/Random
         8: dup
         9: invokespecial #60                 // Method java/util/Random."<init>":()V
        12: astore_2
        13: iconst_0
        14: istore_3
        15: iload_3
        16: iload_0
        17: if_icmpge     48
        20: aload_2
        21: invokevirtual #61                 // Method java/util/Random.nextInt:()I
        24: istore        4
        26: new           #56                 // class foo/rida/RawWrapper
        29: dup
        30: iload         4
        32: invokespecial #65                 // Method foo/rida/RawWrapper."<init>":(I)V
        35: astore        5
        37: aload_1
        38: iload_3
        39: aload         5
        41: aastore
        42: iinc          3, 1
        45: goto          15
        48: aload_1
        49: areturn
      LineNumberTable:
        line 34: 0
        line 35: 5
        line 36: 13
        line 37: 20
        line 38: 26
        line 39: 37
        line 36: 42
        line 41: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      16     4 number   I
           37       5     5 wrapper   Lfoo/rida/RawWrapper;
           15      33     3     i   I
            0      50     0 benchmarkSize   I
            5      45     1 wrappers   [Lfoo/rida/RawWrapper;
           13      37     2 randomGenerator   Ljava/util/Random;
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 15
          locals = [ class "[Lfoo/rida/RawWrapper;", class java/util/Random, int ]
        frame_type = 250 /* chop */
          offset_delta = 32

  public static foo.rida.GetterWrapper[] generateGetterWrappers(int);
    descriptor: (I)[Lfoo/rida/GetterWrapper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=6, args_size=1
         0: iload_0
         1: anewarray     #68                 // class foo/rida/GetterWrapper
         4: astore_1
         5: new           #58                 // class java/util/Random
         8: dup
         9: invokespecial #60                 // Method java/util/Random."<init>":()V
        12: astore_2
        13: iconst_0
        14: istore_3
        15: iload_3
        16: iload_0
        17: if_icmpge     48
        20: aload_2
        21: invokevirtual #61                 // Method java/util/Random.nextInt:()I
        24: istore        4
        26: new           #68                 // class foo/rida/GetterWrapper
        29: dup
        30: iload         4
        32: invokespecial #70                 // Method foo/rida/GetterWrapper."<init>":(I)V
        35: astore        5
        37: aload_1
        38: iload_3
        39: aload         5
        41: aastore
        42: iinc          3, 1
        45: goto          15
        48: aload_1
        49: areturn
      LineNumberTable:
        line 45: 0
        line 46: 5
        line 47: 13
        line 48: 20
        line 49: 26
        line 50: 37
        line 47: 42
        line 52: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      16     4 number   I
           37       5     5 wrapper   Lfoo/rida/GetterWrapper;
           15      33     3     i   I
            0      50     0 benchmarkSize   I
            5      45     1 wrappers   [Lfoo/rida/GetterWrapper;
           13      37     2 randomGenerator   Ljava/util/Random;
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 15
          locals = [ class "[Lfoo/rida/GetterWrapper;", class java/util/Random, int ]
        frame_type = 250 /* chop */
          offset_delta = 32

  public static foo.rida.ParentGetterWrapper[] generateVirtualGetterWrappers(int);
    descriptor: (I)[Lfoo/rida/ParentGetterWrapper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=7, args_size=1
         0: iload_0
         1: anewarray     #71                 // class foo/rida/ParentGetterWrapper
         4: astore_1
         5: new           #58                 // class java/util/Random
         8: dup
         9: invokespecial #60                 // Method java/util/Random."<init>":()V
        12: astore_2
        13: iconst_0
        14: istore_3
        15: iload_3
        16: iload_0
        17: if_icmpge     74
        20: aload_2
        21: invokevirtual #61                 // Method java/util/Random.nextInt:()I
        24: istore        4
        26: aload_2
        27: iconst_2
        28: invokevirtual #73                 // Method java/util/Random.nextInt:(I)I
        31: istore        5
        33: iload         5
        35: ifne          52
        38: new           #71                 // class foo/rida/ParentGetterWrapper
        41: dup
        42: iload         4
        44: invokespecial #76                 // Method foo/rida/ParentGetterWrapper."<init>":(I)V
        47: astore        6
        49: goto          63
        52: new           #77                 // class foo/rida/ChildGetterWrapper
        55: dup
        56: iload         4
        58: invokespecial #79                 // Method foo/rida/ChildGetterWrapper."<init>":(I)V
        61: astore        6
        63: aload_1
        64: iload_3
        65: aload         6
        67: aastore
        68: iinc          3, 1
        71: goto          15
        74: aload_1
        75: areturn
      LineNumberTable:
        line 56: 0
        line 57: 5
        line 58: 13
        line 59: 20
        line 60: 26
        line 62: 33
        line 63: 38
        line 65: 52
        line 67: 63
        line 58: 68
        line 69: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49       3     6 wrapper   Lfoo/rida/ParentGetterWrapper;
           26      42     4 number   I
           33      35     5 coinToss   I
           63       5     6 wrapper   Lfoo/rida/ParentGetterWrapper;
           15      59     3     i   I
            0      76     0 benchmarkSize   I
            5      71     1 wrappers   [Lfoo/rida/ParentGetterWrapper;
           13      63     2 randomGenerator   Ljava/util/Random;
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 15
          locals = [ class "[Lfoo/rida/ParentGetterWrapper;", class java/util/Random, int ]
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ class foo/rida/ParentGetterWrapper ]
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ int, class "[Lfoo/rida/ParentGetterWrapper;", class java/util/Random ]
          stack = []

  private static int benchmarkRawWrappers(foo.rida.RawWrapper[]);
    descriptor: ([Lfoo/rida/RawWrapper;)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=6, args_size=1
         0: iconst_0
         1: istore_1
         2: aload_0
         3: astore_2
         4: aload_2
         5: arraylength
         6: istore_3
         7: iconst_0
         8: istore        4
        10: iload         4
        12: iload_3
        13: if_icmpge     36
        16: aload_2
        17: iload         4
        19: aaload
        20: astore        5
        22: iload_1
        23: aload         5
        25: getfield      #80                 // Field foo/rida/RawWrapper.number:I
        28: iadd
        29: istore_1
        30: iinc          4, 1
        33: goto          10
        36: iload_1
        37: ireturn
      LineNumberTable:
        line 73: 0
        line 74: 2
        line 75: 22
        line 74: 30
        line 77: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       8     5 wrapper   Lfoo/rida/RawWrapper;
            0      38     0 wrappers   [Lfoo/rida/RawWrapper;
            2      36     1   sum   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class "[Lfoo/rida/RawWrapper;", int, class "[Lfoo/rida/RawWrapper;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 25

  private static int benchmarkGetterWrappers(foo.rida.GetterWrapper[]);
    descriptor: ([Lfoo/rida/GetterWrapper;)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=6, args_size=1
         0: iconst_0
         1: istore_1
         2: aload_0
         3: astore_2
         4: aload_2
         5: arraylength
         6: istore_3
         7: iconst_0
         8: istore        4
        10: iload         4
        12: iload_3
        13: if_icmpge     36
        16: aload_2
        17: iload         4
        19: aaload
        20: astore        5
        22: iload_1
        23: aload         5
        25: invokevirtual #84                 // Method foo/rida/GetterWrapper.getNumber:()I
        28: iadd
        29: istore_1
        30: iinc          4, 1
        33: goto          10
        36: iload_1
        37: ireturn
      LineNumberTable:
        line 81: 0
        line 82: 2
        line 83: 22
        line 82: 30
        line 85: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       8     5 wrapper   Lfoo/rida/GetterWrapper;
            0      38     0 wrappers   [Lfoo/rida/GetterWrapper;
            2      36     1   sum   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class "[Lfoo/rida/GetterWrapper;", int, class "[Lfoo/rida/GetterWrapper;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 25

  private static int benchmarkVirtualGetterWrappers(foo.rida.ParentGetterWrapper[]);
    descriptor: ([Lfoo/rida/ParentGetterWrapper;)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=6, args_size=1
         0: iconst_0
         1: istore_1
         2: aload_0
         3: astore_2
         4: aload_2
         5: arraylength
         6: istore_3
         7: iconst_0
         8: istore        4
        10: iload         4
        12: iload_3
        13: if_icmpge     36
        16: aload_2
        17: iload         4
        19: aaload
        20: astore        5
        22: iload_1
        23: aload         5
        25: invokevirtual #87                 // Method foo/rida/ParentGetterWrapper.getNumber:()I
        28: iadd
        29: istore_1
        30: iinc          4, 1
        33: goto          10
        36: iload_1
        37: ireturn
      LineNumberTable:
        line 89: 0
        line 90: 2
        line 91: 22
        line 90: 30
        line 93: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       8     5 wrapper   Lfoo/rida/ParentGetterWrapper;
            0      38     0 wrappers   [Lfoo/rida/ParentGetterWrapper;
            2      36     1   sum   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class "[Lfoo/rida/ParentGetterWrapper;", int, class "[Lfoo/rida/ParentGetterWrapper;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 25
}
SourceFile: "SimpleBenchmark.java"
BootstrapMethods:
  0: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #140 raw wrappers: \u0001ms., sum: \u0001
  1: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #142 getter wrappers: \u0001ms., sum: \u0001
  2: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #144 virtual getter wrappers: \u0001ms., sum: \u0001
InnerClasses:
  public static final #151= #147 of #149; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
