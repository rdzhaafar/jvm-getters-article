<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='13980' time_ms='1694408329171'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
20.0.2+9
</release>
<info>
OpenJDK 64-Bit Server VM (20.0.2+9) for bsd-amd64 JRE (20.0.2+9), built on 2023-07-18T00:00:00Z by &quot;admin&quot; with clang 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.46.4)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:LogFile=/Users/rida/Desktop/JitWatch/sandbox/sandbox.log -XX:+PrintAssembly -XX:PrintAssemblyOptions=intel </args>
<command>
foo.rida.SimpleBenchmark
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=20.0.2+9
java.vm.name=OpenJDK 64-Bit Server VM
jdk.debug=release
sun.boot.library.path=/Users/rida/.sdkman/candidates/java/20.0.2-tem/lib
java.library.path=/Users/rida/Desktop/JitWatch:/Users/rida/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Users/rida/.sdkman/candidates/java/20.0.2-tem
java.class.path=/Users/rida/Desktop/JitWatch/sandbox/classes:/Users/rida/Desktop/JitWatch/sandbox:/Users/rida/src/accessors/src/main/java:/Users/rida/src/accessors/build/classes/java/main
java.vm.info=mixed mode, sharing
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=20
java.vm.vendor=Eclipse Adoptium
sun.java.command=foo.rida.SimpleBenchmark
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='8707'/>
<blob name='MethodHandlesAdapterBlob' size='4224'>
<sect index='1' size='4224' free='3842'/>
</blob>
<writer thread='30467'/>
<thread_logfile thread='30467' filename='/var/folders/vt/b5svz9l12z985_kqp5hxzqx40000gn/T//hs_c30467_pid13980.log'/>
<writer thread='23555'/>
<thread_logfile thread='23555' filename='/var/folders/vt/b5svz9l12z985_kqp5hxzqx40000gn/T//hs_c23555_pid13980.log'/>
<writer thread='8707'/>
<task_queued compile_id='1' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='384' iicount='384' level='3' stamp='0.031' comment='tiered' hot_count='384'/>
<task_queued compile_id='2' method='java.lang.String coder ()B' bytes='15' count='256' iicount='256' level='3' stamp='0.031' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java.lang.String isLatin1 ()Z' bytes='19' count='256' iicount='256' level='3' stamp='0.031' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='1' compiler='c1' level='3' entry='0x00000001153661a0' size='776' address='0x0000000115366010' relocation_offset='328' insts_offset='400' stub_offset='616' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' metadata_offset='664' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='401' iicount='401' stamp='0.031'/>
<print_nmethod compile_id='1' compiler='c1' level='3' stamp='0.031'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     490    1       3       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x0000000115366010,0x0000000115366318] = 776
 relocation     [0x0000000115366158,0x0000000115366188] = 48
 main code      [0x00000001153661a0,0x0000000115366278] = 216
 stub code      [0x0000000115366278,0x00000001153662a8] = 48
 metadata       [0x00000001153662a8,0x00000001153662b8] = 16
 scopes data    [0x00000001153662b8,0x00000001153662d0] = 24
 scopes pcs     [0x00000001153662d0,0x0000000115366310] = 64
 dependencies   [0x0000000115366310,0x0000000115366318] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001153661a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153661a4:   movabs r11,0x12ac00000
  0x00000001153661ae:   add    r10,r11
  0x00000001153661b1:   cmp    r10,rax
  0x00000001153661b4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153661ba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x00000001153661c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153661c7:   push   rbp
  0x00000001153661c8:   sub    rsp,0x30
  0x00000001153661cc:   cmp    DWORD PTR [r15+0x20],0x1
  0x00000001153661d4:   je     0x00000001153661db
  0x00000001153661d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153661db:   movabs rdi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000001153661e5:   mov    ebx,DWORD PTR [rdi+0xac]
  0x00000001153661eb:   add    ebx,0x2
  0x00000001153661ee:   mov    DWORD PTR [rdi+0xac],ebx
  0x00000001153661f4:   and    ebx,0x7fe
  0x00000001153661fa:   cmp    ebx,0x0
  0x00000001153661fd:   je     0x0000000115366216           ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Object::&lt;init&gt;@0 (line 45)
  0x0000000115366203:   add    rsp,0x30
  0x0000000115366207:   pop    rbp
  0x0000000115366208:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536620f:   ja     0x0000000115366234
  0x0000000115366215:   ret    
  0x0000000115366216:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115366220:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115366225:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536622d:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115366232:   jmp    0x0000000115366203
  0x0000000115366234:   movabs r10,0x115366208              ;   {internal_word}
  0x000000011536623e:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115366245:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536624a:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115366251:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536625c:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115366267:   add    rsp,0x30
  0x000000011536626b:   pop    rbp
  0x000000011536626c:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115366271:   hlt    
  0x0000000115366272:   hlt    
  0x0000000115366273:   hlt    
  0x0000000115366274:   hlt    
  0x0000000115366275:   hlt    
  0x0000000115366276:   hlt    
  0x0000000115366277:   hlt    
[Exception Handler]
  0x0000000115366278:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536627d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115366287:   and    rsp,0xfffffffffffffff0
  0x000000011536628b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115366290:   hlt    
[Deopt Handler Code]
  0x0000000115366291:   movabs r10,0x115366291              ;   {section_word}
  0x000000011536629b:   push   r10
  0x000000011536629d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153662a2:   hlt    
  0x00000001153662a3:   hlt    
  0x00000001153662a4:   hlt    
  0x00000001153662a5:   hlt    
  0x00000001153662a6:   hlt    
  0x00000001153662a7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='4' method='java.lang.String length ()I' bytes='11' count='384' iicount='384' level='3' stamp='0.497' comment='tiered' hot_count='384'/>
<task_queued compile_id='5' method='jdk.internal.util.Preconditions checkIndex (IILjava/util/function/BiFunction;)I' bytes='18' count='384' iicount='384' level='3' stamp='0.498' comment='tiered' hot_count='384'/>
<task_queued compile_id='6' method='java.lang.String charAt (I)C' bytes='25' count='384' iicount='384' level='3' stamp='0.498' comment='tiered' hot_count='384'/>
<task_queued compile_id='7' method='java.lang.StringLatin1 charAt ([BI)C' bytes='15' count='384' iicount='384' level='3' stamp='0.498' comment='tiered' hot_count='384'/>
<writer thread='23555'/>
<nmethod compile_id='4' compiler='c1' level='3' entry='0x0000000115366520' size='1112' address='0x0000000115366390' relocation_offset='328' insts_offset='400' stub_offset='768' scopes_data_offset='832' scopes_pcs_offset='912' dependencies_offset='1088' nul_chk_table_offset='1096' metadata_offset='816' method='java.lang.String length ()I' bytes='11' count='531' iicount='531' stamp='0.498'/>
<print_nmethod compile_id='4' compiler='c1' level='3' stamp='0.498'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     497    4       3       java.lang.String::length (11 bytes)
 total in heap  [0x0000000115366390,0x00000001153667e8] = 1112
 relocation     [0x00000001153664d8,0x0000000115366518] = 64
 main code      [0x0000000115366520,0x0000000115366690] = 368
 stub code      [0x0000000115366690,0x00000001153666c0] = 48
 metadata       [0x00000001153666c0,0x00000001153666d0] = 16
 scopes data    [0x00000001153666d0,0x0000000115366720] = 80
 scopes pcs     [0x0000000115366720,0x00000001153667d0] = 176
 dependencies   [0x00000001153667d0,0x00000001153667d8] = 8
 nul chk table  [0x00000001153667d8,0x00000001153667e8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115366520:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115366524:   movabs r11,0x12ac00000
  0x000000011536652e:   add    r10,r11
  0x0000000115366531:   cmp    r10,rax
  0x0000000115366534:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536653a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115366540:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115366547:   push   rbp
  0x0000000115366548:   sub    rsp,0x30
  0x000000011536654c:   cmp    DWORD PTR [r15+0x20],0x1
  0x0000000115366554:   je     0x000000011536655b
  0x0000000115366556:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536655b:   movabs rcx,0x16bc0fab0              ;   {metadata(method data for {method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366565:   mov    eax,DWORD PTR [rcx+0xac]
  0x000000011536656b:   add    eax,0x2
  0x000000011536656e:   mov    DWORD PTR [rcx+0xac],eax
  0x0000000115366574:   and    eax,0x7fe
  0x0000000115366579:   cmp    eax,0x0
  0x000000011536657c:   je     0x0000000115366608           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@0 (line 1499)
  0x0000000115366582:   mov    ecx,DWORD PTR [rsi+0x14]
  0x0000000115366585:   shl    rcx,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@1 (line 1499)
  0x0000000115366589:   mov    eax,DWORD PTR [rcx+0xc]      ; implicit exception: dispatches to 0x0000000115366629
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1499)
  0x000000011536658c:   mov    rcx,rsi
  0x000000011536658f:   movabs rdi,0x16bc0fab0              ;   {metadata(method data for {method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366599:   add    QWORD PTR [rdi+0xf0],0x1
  0x00000001153665a1:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153665ab:   mov    edi,DWORD PTR [rcx+0xac]
  0x00000001153665b1:   add    edi,0x2
  0x00000001153665b4:   mov    DWORD PTR [rcx+0xac],edi
  0x00000001153665ba:   and    edi,0x1ffffe
  0x00000001153665c0:   cmp    edi,0x0
  0x00000001153665c3:   je     0x000000011536662e
  0x00000001153665c9:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153665d3:   inc    DWORD PTR [rcx+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
  0x00000001153665d9:   movsx  ecx,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
  0x00000001153665dd:   movabs rsi,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153665e7:   inc    DWORD PTR [rsi+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
  0x00000001153665ed:   shl    ecx,0x18
  0x00000001153665f0:   sar    ecx,0x18
  0x00000001153665f3:   sar    eax,cl
  0x00000001153665f5:   add    rsp,0x30
  0x00000001153665f9:   pop    rbp
  0x00000001153665fa:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115366601:   ja     0x000000011536664f
  0x0000000115366607:   ret    
  0x0000000115366608:   movabs r10,0x12ac0f1a0              ;   {metadata({method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366612:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115366617:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536661f:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::length@-1 (line 1499)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115366624:   jmp    0x0000000115366582
  0x0000000115366629:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1499)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536662e:   movabs r10,0x12b053ed0              ;   {metadata({method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366638:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536663d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115366645:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536664a:   jmp    0x00000001153665c9
  0x000000011536664f:   movabs r10,0x1153665fa              ;   {internal_word}
  0x0000000115366659:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115366660:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115366665:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536666c:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115366677:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115366682:   add    rsp,0x30
  0x0000000115366686:   pop    rbp
  0x0000000115366687:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536668c:   hlt    
  0x000000011536668d:   hlt    
  0x000000011536668e:   hlt    
  0x000000011536668f:   hlt    
[Exception Handler]
  0x0000000115366690:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115366695:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536669f:   and    rsp,0xfffffffffffffff0
  0x00000001153666a3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001153666a8:   hlt    
[Deopt Handler Code]
  0x00000001153666a9:   movabs r10,0x1153666a9              ;   {section_word}
  0x00000001153666b3:   push   r10
  0x00000001153666b5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153666ba:   hlt    
  0x00000001153666bb:   hlt    
  0x00000001153666bc:   hlt    
  0x00000001153666bd:   hlt    
  0x00000001153666be:   hlt    
  0x00000001153666bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='8' method='java.lang.String checkIndex (II)V' bytes='10' count='512' iicount='512' level='3' stamp='0.505' comment='tiered' hot_count='512'/>
<writer thread='23555'/>
<nmethod compile_id='2' compiler='c1' level='3' entry='0x00000001153669a0' size='872' address='0x0000000115366810' relocation_offset='328' insts_offset='400' stub_offset='656' scopes_data_offset='712' scopes_pcs_offset='752' dependencies_offset='864' metadata_offset='704' method='java.lang.String coder ()B' bytes='15' count='1439' iicount='1439' stamp='0.505'/>
<print_nmethod compile_id='2' compiler='c1' level='3' stamp='0.505'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     505    2       3       java.lang.String::coder (15 bytes)
 total in heap  [0x0000000115366810,0x0000000115366b78] = 872
 relocation     [0x0000000115366958,0x0000000115366988] = 48
 main code      [0x00000001153669a0,0x0000000115366aa0] = 256
 stub code      [0x0000000115366aa0,0x0000000115366ad0] = 48
 metadata       [0x0000000115366ad0,0x0000000115366ad8] = 8
 scopes data    [0x0000000115366ad8,0x0000000115366b00] = 40
 scopes pcs     [0x0000000115366b00,0x0000000115366b70] = 112
 dependencies   [0x0000000115366b70,0x0000000115366b78] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001153669a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153669a4:   movabs r11,0x12ac00000
  0x00000001153669ae:   add    r10,r11
  0x00000001153669b1:   cmp    r10,rax
  0x00000001153669b4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153669ba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x00000001153669c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153669c7:   push   rbp
  0x00000001153669c8:   sub    rsp,0x30
  0x00000001153669cc:   cmp    DWORD PTR [r15+0x20],0x1
  0x00000001153669d4:   je     0x00000001153669db
  0x00000001153669d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153669db:   movabs rax,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153669e5:   mov    edi,DWORD PTR [rax+0xac]
  0x00000001153669eb:   add    edi,0x2
  0x00000001153669ee:   mov    DWORD PTR [rax+0xac],edi
  0x00000001153669f4:   and    edi,0x7fe
  0x00000001153669fa:   cmp    edi,0x0
  0x00000001153669fd:   je     0x0000000115366a40           ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@0 (line 4556)
  0x0000000115366a03:   movabs rax,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366a0d:   inc    DWORD PTR [rax+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4556)
  0x0000000115366a13:   movsx  eax,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4556)
  0x0000000115366a17:   movabs rsi,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366a21:   inc    DWORD PTR [rsi+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4556)
  0x0000000115366a27:   shl    eax,0x18
  0x0000000115366a2a:   sar    eax,0x18
  0x0000000115366a2d:   add    rsp,0x30
  0x0000000115366a31:   pop    rbp
  0x0000000115366a32:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115366a39:   ja     0x0000000115366a5e
  0x0000000115366a3f:   ret    
  0x0000000115366a40:   movabs r10,0x12b053ed0              ;   {metadata({method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366a4a:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115366a4f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115366a57:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4556)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115366a5c:   jmp    0x0000000115366a03
  0x0000000115366a5e:   movabs r10,0x115366a32              ;   {internal_word}
  0x0000000115366a68:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115366a6f:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115366a74:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115366a7b:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115366a86:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115366a91:   add    rsp,0x30
  0x0000000115366a95:   pop    rbp
  0x0000000115366a96:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115366a9b:   hlt    
  0x0000000115366a9c:   hlt    
  0x0000000115366a9d:   hlt    
  0x0000000115366a9e:   hlt    
  0x0000000115366a9f:   hlt    
[Exception Handler]
  0x0000000115366aa0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115366aa5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115366aaf:   and    rsp,0xfffffffffffffff0
  0x0000000115366ab3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115366ab8:   hlt    
[Deopt Handler Code]
  0x0000000115366ab9:   movabs r10,0x115366ab9              ;   {section_word}
  0x0000000115366ac3:   push   r10
  0x0000000115366ac5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115366aca:   hlt    
  0x0000000115366acb:   hlt    
  0x0000000115366acc:   hlt    
  0x0000000115366acd:   hlt    
  0x0000000115366ace:   hlt    
  0x0000000115366acf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<nmethod compile_id='3' compiler='c1' level='3' entry='0x0000000115366d20' size='984' address='0x0000000115366b90' relocation_offset='328' insts_offset='400' stub_offset='728' scopes_data_offset='784' scopes_pcs_offset='832' dependencies_offset='976' metadata_offset='776' method='java.lang.String isLatin1 ()Z' bytes='19' count='1298' iicount='1298' stamp='0.510'/>
<print_nmethod compile_id='3' compiler='c1' level='3' stamp='0.510'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     510    3       3       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x0000000115366b90,0x0000000115366f68] = 984
 relocation     [0x0000000115366cd8,0x0000000115366d10] = 56
 main code      [0x0000000115366d20,0x0000000115366e68] = 328
 stub code      [0x0000000115366e68,0x0000000115366e98] = 48
 metadata       [0x0000000115366e98,0x0000000115366ea0] = 8
 scopes data    [0x0000000115366ea0,0x0000000115366ed0] = 48
 scopes pcs     [0x0000000115366ed0,0x0000000115366f60] = 144
 dependencies   [0x0000000115366f60,0x0000000115366f68] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115366d20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115366d24:   movabs r11,0x12ac00000
  0x0000000115366d2e:   add    r10,r11
  0x0000000115366d31:   cmp    r10,rax
  0x0000000115366d34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115366d3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115366d40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115366d47:   push   rbp
  0x0000000115366d48:   sub    rsp,0x30
  0x0000000115366d4c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115366d54:   je     0x0000000115366d5b
  0x0000000115366d56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115366d5b:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366d65:   mov    edi,DWORD PTR [rax+0xac]
  0x0000000115366d6b:   add    edi,0x2
  0x0000000115366d6e:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115366d74:   and    edi,0x7fe
  0x0000000115366d7a:   cmp    edi,0x0
  0x0000000115366d7d:   je     0x0000000115366e05           ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@0 (line 4564)
  0x0000000115366d83:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366d8d:   inc    DWORD PTR [rax+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4564)
  0x0000000115366d93:   movsx  eax,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4564)
  0x0000000115366d97:   cmp    eax,0x0
  0x0000000115366d9a:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366da4:   movabs rsi,0x110
  0x0000000115366dae:   jne    0x0000000115366dbe
  0x0000000115366db4:   movabs rsi,0x120
  0x0000000115366dbe:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x0000000115366dc2:   lea    rdi,[rdi+0x1]
  0x0000000115366dc6:   mov    QWORD PTR [rax+rsi*1],rdi
  0x0000000115366dca:   jne    0x0000000115366dea           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4564)
  0x0000000115366dd0:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366dda:   inc    DWORD PTR [rax+0x130]
  0x0000000115366de0:   mov    eax,0x1
  0x0000000115366de5:   jmp    0x0000000115366def           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4564)
  0x0000000115366dea:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4564)
  0x0000000115366def:   and    eax,0x1
  0x0000000115366df2:   add    rsp,0x30
  0x0000000115366df6:   pop    rbp
  0x0000000115366df7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115366dfe:   ja     0x0000000115366e26
  0x0000000115366e04:   ret    
  0x0000000115366e05:   movabs r10,0x12b053320              ;   {metadata({method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115366e0f:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115366e14:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115366e1c:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4564)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115366e21:   jmp    0x0000000115366d83
  0x0000000115366e26:   movabs r10,0x115366df7              ;   {internal_word}
  0x0000000115366e30:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115366e37:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115366e3c:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115366e43:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115366e4e:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115366e59:   add    rsp,0x30
  0x0000000115366e5d:   pop    rbp
  0x0000000115366e5e:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115366e63:   hlt    
  0x0000000115366e64:   hlt    
  0x0000000115366e65:   hlt    
  0x0000000115366e66:   hlt    
  0x0000000115366e67:   hlt    
[Exception Handler]
  0x0000000115366e68:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115366e6d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115366e77:   and    rsp,0xfffffffffffffff0
  0x0000000115366e7b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115366e80:   hlt    
[Deopt Handler Code]
  0x0000000115366e81:   movabs r10,0x115366e81              ;   {section_word}
  0x0000000115366e8b:   push   r10
  0x0000000115366e8d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115366e92:   hlt    
  0x0000000115366e93:   hlt    
  0x0000000115366e94:   hlt    
  0x0000000115366e95:   hlt    
  0x0000000115366e96:   hlt    
  0x0000000115366e97:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<nmethod compile_id='5' compiler='c1' level='3' entry='0x0000000115367120' size='1080' address='0x0000000115366f90' relocation_offset='328' insts_offset='400' stub_offset='752' scopes_data_offset='824' scopes_pcs_offset='896' dependencies_offset='1056' nul_chk_table_offset='1064' metadata_offset='816' method='jdk.internal.util.Preconditions checkIndex (IILjava/util/function/BiFunction;)I' bytes='18' count='967' iicount='967' stamp='0.516'/>
<print_nmethod compile_id='5' compiler='c1' level='3' stamp='0.516'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     515    5       3       jdk.internal.util.Preconditions::checkIndex (18 bytes)
 total in heap  [0x0000000115366f90,0x00000001153673c8] = 1080
 relocation     [0x00000001153670d8,0x0000000115367118] = 64
 main code      [0x0000000115367120,0x0000000115367280] = 352
 stub code      [0x0000000115367280,0x00000001153672c0] = 64
 metadata       [0x00000001153672c0,0x00000001153672c8] = 8
 scopes data    [0x00000001153672c8,0x0000000115367310] = 72
 scopes pcs     [0x0000000115367310,0x00000001153673b0] = 160
 dependencies   [0x00000001153673b0,0x00000001153673b8] = 8
 nul chk table  [0x00000001153673b8,0x00000001153673c8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/function/BiFunction&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115367120:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115367127:   push   rbp
  0x0000000115367128:   sub    rsp,0x30
  0x000000011536712c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115367134:   je     0x000000011536713b
  0x0000000115367136:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536713b:   mov    rdi,rsi
  0x000000011536713e:   mov    rbx,rdx
  0x0000000115367141:   movabs rax,0x16bc0fe80              ;   {metadata(method data for {method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;)}
  0x000000011536714b:   mov    esi,DWORD PTR [rax+0xac]
  0x0000000115367151:   add    esi,0x2
  0x0000000115367154:   mov    DWORD PTR [rax+0xac],esi
  0x000000011536715a:   and    esi,0x7fe
  0x0000000115367160:   cmp    esi,0x0
  0x0000000115367163:   je     0x000000011536721c           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@0 (line 301)
  0x0000000115367169:   cmp    edi,0x0
  0x000000011536716c:   movabs rax,0x16bc0fe80              ;   {metadata(method data for {method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;)}
  0x0000000115367176:   movabs rsi,0xf0
  0x0000000115367180:   jl     0x0000000115367190
  0x0000000115367186:   movabs rsi,0x100
  0x0000000115367190:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x0000000115367194:   lea    rdx,[rdx+0x1]
  0x0000000115367198:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011536719c:   jl     0x00000001153671f0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@1 (line 301)
  0x00000001153671a2:   cmp    edi,ebx
  0x00000001153671a4:   movabs rax,0x16bc0fe80              ;   {metadata(method data for {method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;)}
  0x00000001153671ae:   movabs rsi,0x120
  0x00000001153671b8:   jge    0x00000001153671c8
  0x00000001153671be:   movabs rsi,0x110
  0x00000001153671c8:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x00000001153671cc:   lea    rdx,[rdx+0x1]
  0x00000001153671d0:   mov    QWORD PTR [rax+rsi*1],rdx
  0x00000001153671d4:   jge    0x00000001153671f0           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@6 (line 301)
  0x00000001153671da:   mov    rax,rdi
  0x00000001153671dd:   add    rsp,0x30
  0x00000001153671e1:   pop    rbp
  0x00000001153671e2:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153671e9:   ja     0x000000011536723d
  0x00000001153671ef:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@17 (line 303)
  0x00000001153671f0:   movabs rsi,0x16bc0fe80              ;   {metadata(method data for {method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;)}
  0x00000001153671fa:   add    QWORD PTR [rsi+0x130],0x1
  0x0000000115367202:   mov    rsi,rcx
  0x0000000115367205:   mov    rdx,rdi
  0x0000000115367208:   mov    rcx,rbx                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@12 (line 302)
  0x000000011536720b:   nop    DWORD PTR [rax+0x0]
  0x000000011536720f:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.Preconditions::checkIndex@12 (line 302)
                                                            ;   {static_call}
  0x0000000115367214:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x0000000115367253
  0x0000000115367217:   jmp    0x0000000115367275
  0x000000011536721c:   movabs r10,0x12b012458              ;   {metadata({method} {0x000000012b012458} &apos;checkIndex&apos; &apos;(IILjava/util/function/BiFunction;)I&apos; in &apos;jdk/internal/util/Preconditions&apos;)}
  0x0000000115367226:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536722b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115367233:   call   0x000000011c9c1480           ; ImmutableOopMap {rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 301)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115367238:   jmp    0x0000000115367169
  0x000000011536723d:   movabs r10,0x1153671e2              ;   {internal_word}
  0x0000000115367247:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536724e:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115367253:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 302)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115367258:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536725f:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536726a:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115367275:   add    rsp,0x30
  0x0000000115367279:   pop    rbp
  0x000000011536727a:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536727f:   hlt    
[Exception Handler]
  0x0000000115367280:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115367285:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536728f:   and    rsp,0xfffffffffffffff0
  0x0000000115367293:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115367298:   hlt    
[Deopt Handler Code]
  0x0000000115367299:   movabs r10,0x115367299              ;   {section_word}
  0x00000001153672a3:   push   r10
  0x00000001153672a5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153672aa:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153672b4:   jmp    0x00000001153672b4           ;   {runtime_call}
  0x00000001153672b9:   hlt    
  0x00000001153672ba:   hlt    
  0x00000001153672bb:   hlt    
  0x00000001153672bc:   hlt    
  0x00000001153672bd:   hlt    
  0x00000001153672be:   hlt    
  0x00000001153672bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<nmethod compile_id='6' compiler='c1' level='3' entry='0x00000001153675e0' size='2032' address='0x0000000115367410' relocation_offset='328' insts_offset='464' stub_offset='1320' scopes_data_offset='1424' scopes_pcs_offset='1624' dependencies_offset='2008' nul_chk_table_offset='2016' oops_offset='1384' metadata_offset='1392' method='java.lang.String charAt (I)C' bytes='25' count='946' iicount='946' stamp='0.523'/>
<print_nmethod compile_id='6' compiler='c1' level='3' stamp='0.523'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     523    6       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x0000000115367410,0x0000000115367c00] = 2032
 relocation     [0x0000000115367558,0x00000001153675c8] = 112
 main code      [0x00000001153675e0,0x0000000115367938] = 856
 stub code      [0x0000000115367938,0x0000000115367978] = 64
 oops           [0x0000000115367978,0x0000000115367980] = 8
 metadata       [0x0000000115367980,0x00000001153679a0] = 32
 scopes data    [0x00000001153679a0,0x0000000115367a68] = 200
 scopes pcs     [0x0000000115367a68,0x0000000115367be8] = 384
 dependencies   [0x0000000115367be8,0x0000000115367bf0] = 8
 nul chk table  [0x0000000115367bf0,0x0000000115367c00] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00000001153675e0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153675e4:   movabs r11,0x12ac00000
  0x00000001153675ee:   add    r10,r11
  0x00000001153675f1:   cmp    r10,rax
  0x00000001153675f4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153675fa:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115367600:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115367607:   push   rbp
  0x0000000115367608:   sub    rsp,0x60
  0x000000011536760c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115367614:   je     0x000000011536761b
  0x0000000115367616:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536761b:   movabs rax,0x16bc10010              ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000115367625:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536762b:   add    edi,0x2
  0x000000011536762e:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115367634:   and    edi,0x7fe
  0x000000011536763a:   cmp    edi,0x0
  0x000000011536763d:   je     0x0000000115367834           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@0 (line 1534)
  0x0000000115367643:   mov    rax,rsi
  0x0000000115367646:   movabs rdi,0x16bc10010              ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000115367650:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115367658:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115367662:   mov    edi,DWORD PTR [rax+0xac]
  0x0000000115367668:   add    edi,0x2
  0x000000011536766b:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115367671:   and    edi,0x1ffffe
  0x0000000115367677:   cmp    edi,0x0
  0x000000011536767a:   je     0x0000000115367855
  0x0000000115367680:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536768a:   inc    DWORD PTR [rax+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x0000000115367690:   movsx  eax,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x0000000115367694:   cmp    eax,0x0
  0x0000000115367697:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001153676a1:   movabs rdi,0x110
  0x00000001153676ab:   jne    0x00000001153676bb
  0x00000001153676b1:   movabs rdi,0x120
  0x00000001153676bb:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x00000001153676bf:   lea    rbx,[rbx+0x1]
  0x00000001153676c3:   mov    QWORD PTR [rax+rdi*1],rbx
  0x00000001153676c7:   jne    0x00000001153676e7           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x00000001153676cd:   movabs rax,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001153676d7:   inc    DWORD PTR [rax+0x130]
  0x00000001153676dd:   mov    eax,0x1
  0x00000001153676e2:   jmp    0x00000001153676ec           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x00000001153676e7:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x00000001153676ec:   and    eax,0x1
  0x00000001153676ef:   cmp    eax,0x0
  0x00000001153676f2:   movabs rax,0x16bc10010              ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000001153676fc:   movabs rdi,0x128
  0x0000000115367706:   je     0x0000000115367716
  0x000000011536770c:   movabs rdi,0x138
  0x0000000115367716:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011536771a:   lea    rbx,[rbx+0x1]
  0x000000011536771e:   mov    QWORD PTR [rax+rdi*1],rbx
  0x0000000115367722:   je     0x000000011536780c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@4 (line 1534)
  0x0000000115367728:   mov    eax,DWORD PTR [rsi+0x14]
  0x000000011536772b:   shl    rax,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@8 (line 1535)
  0x000000011536772f:   movabs rsi,0x16bc10010              ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000115367739:   add    QWORD PTR [rsi+0x148],0x1
  0x0000000115367741:   movabs rsi,0x16bc101c0              ;   {metadata(method data for {method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536774b:   mov    edi,DWORD PTR [rsi+0xac]
  0x0000000115367751:   add    edi,0x2
  0x0000000115367754:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011536775a:   and    edi,0x1ffffe
  0x0000000115367760:   cmp    edi,0x0
  0x0000000115367763:   je     0x0000000115367876
  0x0000000115367769:   mov    esi,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x0000000115367897
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x000000011536776c:   movabs rdi,0x16bc101c0              ;   {metadata(method data for {method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x0000000115367776:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011536777e:   movabs rdi,0x16bc10308              ;   {metadata(method data for {method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115367788:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536778e:   add    ebx,0x2
  0x0000000115367791:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115367797:   and    ebx,0x1ffffe
  0x000000011536779d:   cmp    ebx,0x0
  0x00000001153677a0:   je     0x000000011536789c
  0x00000001153677a6:   movabs rdi,0x16bc10308              ;   {metadata(method data for {method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001153677b0:   add    QWORD PTR [rdi+0xf0],0x1
  0x00000001153677b8:   movabs rdi,0x70fe03408              ;   {oop(a &apos;jdk/internal/util/Preconditions$4&apos;{0x000000070fe03408})}
  0x00000001153677c2:   mov    edi,0x0
  0x00000001153677c7:   cmp    edx,edi
  0x00000001153677c9:   jl     0x00000001153678bd
  0x00000001153677cf:   cmp    edx,esi
  0x00000001153677d1:   jge    0x00000001153678ca
  0x00000001153677d7:   mov    rdi,rdx                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x00000001153677da:   cmp    esi,edx
  0x00000001153677dc:   jbe    0x00000001153678d7
  0x00000001153677e2:   movsxd rdx,edx
  0x00000001153677e5:   movsx  eax,BYTE PTR [rax+rdx*1+0x10];*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x00000001153677ea:   and    eax,0xff
  0x00000001153677ef:   and    eax,0xffff
  0x00000001153677f4:   and    eax,0xffff
  0x00000001153677f9:   add    rsp,0x60
  0x00000001153677fd:   pop    rbp
  0x00000001153677fe:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115367805:   ja     0x00000001153678e5
  0x000000011536780b:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@15 (line 1535)
  0x000000011536780c:   mov    esi,DWORD PTR [rsi+0x14]
  0x000000011536780f:   shl    rsi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@17 (line 1537)
  0x0000000115367813:   nop    DWORD PTR [rax+0x0]
  0x0000000115367817:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@21 (line 1537)
                                                            ;   {static_call}
  0x000000011536781c:   and    eax,0xffff
  0x0000000115367821:   add    rsp,0x60
  0x0000000115367825:   pop    rbp
  0x0000000115367826:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536782d:   ja     0x00000001153678fb
  0x0000000115367833:   ret    
  0x0000000115367834:   movabs r10,0x12ac0f1f8              ;   {metadata({method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011536783e:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115367843:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536784b:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::charAt@-1 (line 1534)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115367850:   jmp    0x0000000115367643
  0x0000000115367855:   movabs r10,0x12b053320              ;   {metadata({method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536785f:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115367864:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536786c:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115367871:   jmp    0x0000000115367680
  0x0000000115367876:   movabs r10,0x12ac24c18              ;   {metadata({method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x0000000115367880:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115367885:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536788d:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115367892:   jmp    0x0000000115367769
  0x0000000115367897:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536789c:   movabs r10,0x12b0544a8              ;   {metadata({method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001153678a6:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153678ab:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153678b3:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::checkIndex@-1 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153678b8:   jmp    0x00000001153677a6
  0x00000001153678bd:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x00000001153678c5:   call   0x000000011c9bfe80           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x00000001153678ca:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x00000001153678d2:   call   0x000000011c9bfe80           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x00000001153678d7:   mov    QWORD PTR [rsp],rdx
  0x00000001153678db:   mov    QWORD PTR [rsp+0x8],rax
  0x00000001153678e0:   call   0x000000011c9bb800           ; ImmutableOopMap {rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153678e5:   movabs r10,0x1153677fe              ;   {internal_word}
  0x00000001153678ef:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153678f6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153678fb:   movabs r10,0x115367826              ;   {internal_word}
  0x0000000115367905:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536790c:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115367911:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115367918:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115367923:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536792e:   add    rsp,0x60
  0x0000000115367932:   pop    rbp
  0x0000000115367933:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x0000000115367938:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011536793d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115367947:   jmp    0x0000000115367947           ;   {runtime_call}
[Exception Handler]
  0x000000011536794c:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115367951:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536795b:   and    rsp,0xfffffffffffffff0
  0x000000011536795f:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115367964:   hlt    
[Deopt Handler Code]
  0x0000000115367965:   movabs r10,0x115367965              ;   {section_word}
  0x000000011536796f:   push   r10
  0x0000000115367971:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115367976:   hlt    
  0x0000000115367977:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='9' method='java.util.concurrent.atomic.AtomicLong get ()J' bytes='5' count='128' iicount='128' level='1' stamp='0.538' comment='tiered' hot_count='128'/>
<nmethod compile_id='10' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce2f1a0' size='904' address='0x000000011ce2f010' relocation_offset='328' insts_offset='400' method='jdk.internal.misc.Unsafe compareAndSetLong (Ljava/lang/Object;JJJ)Z' bytes='0' count='384' iicount='384' stamp='0.538'/>

Compiled method (n/a)     538   10     n 0       jdk.internal.misc.Unsafe::compareAndSetLong (native)
 total in heap  [0x000000011ce2f010,0x000000011ce2f398] = 904
 relocation     [0x000000011ce2f158,0x000000011ce2f188] = 48
 main code      [0x000000011ce2f1a0,0x000000011ce2f398] = 504

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b03fd28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x000000011ce2f1a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce2f1a4:   movabs r11,0x12ac00000
  0x000000011ce2f1ae:   add    r10,r11
  0x000000011ce2f1b1:   cmp    rax,r10
  0x000000011ce2f1b4:   je     0x000000011ce2f1c0
  0x000000011ce2f1ba:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce2f1bf:   nop
[Verified Entry Point]
  0x000000011ce2f1c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce2f1c7:   push   rbp
  0x000000011ce2f1c8:   mov    rbp,rsp
  0x000000011ce2f1cb:   sub    rsp,0x40
  0x000000011ce2f1cf:   nop
  0x000000011ce2f1d0:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce2f1d8:   je     0x000000011ce2f1df
  0x000000011ce2f1da:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce2f1df:   mov    QWORD PTR [rsp+0x8],rdx
  0x000000011ce2f1e4:   cmp    rdx,0x0
  0x000000011ce2f1e8:   lea    rdx,[rsp+0x8]
  0x000000011ce2f1ed:   cmove  rdx,QWORD PTR [rsp+0x8]
  0x000000011ce2f1f3:   mov    QWORD PTR [rsp],rsi
  0x000000011ce2f1f7:   cmp    rsi,0x0
  0x000000011ce2f1fb:   lea    rsi,[rsp]
  0x000000011ce2f1ff:   cmove  rsi,QWORD PTR [rsp]
  0x000000011ce2f204:   vzeroupper 
  0x000000011ce2f207:   movabs r10,0x11ce2f204              ;   {internal_word}
  0x000000011ce2f211:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce2f218:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce2f21f:   cmp    BYTE PTR [rip+0xffffffffefeaf933],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce2f226:   je     0x000000011ce2f268
  0x000000011ce2f22c:   push   rsi
  0x000000011ce2f22d:   push   rdx
  0x000000011ce2f22e:   push   rcx
  0x000000011ce2f22f:   push   r8
  0x000000011ce2f231:   push   r9
  0x000000011ce2f233:   movabs rsi,0x12b03fd28              ;   {metadata({method} {0x000000012b03fd28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ce2f23d:   mov    rdi,r15
  0x000000011ce2f240:   test   spl,0xf
  0x000000011ce2f244:   je     0x000000011ce2f25c
  0x000000011ce2f24a:   sub    rsp,0x8
  0x000000011ce2f24e:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce2f253:   add    rsp,0x8
  0x000000011ce2f257:   jmp    0x000000011ce2f261
  0x000000011ce2f25c:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce2f261:   pop    r9
  0x000000011ce2f263:   pop    r8
  0x000000011ce2f265:   pop    rcx
  0x000000011ce2f266:   pop    rdx
  0x000000011ce2f267:   pop    rsi
  0x000000011ce2f268:   lea    rdi,[r15+0x2e0]
  0x000000011ce2f26f:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce2f27a:   call   0x000000010ca1b800           ;   {runtime_call Unsafe_CompareAndSetLong(JNIEnv_*, _jobject*, _jobject*, long, long, long)}
  0x000000011ce2f27f:   vzeroupper 
  0x000000011ce2f282:   and    eax,0xff
  0x000000011ce2f287:   setne  al
  0x000000011ce2f28a:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce2f295:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce2f29b:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce2f2a2:   ja     0x000000011ce2f2b6
  0x000000011ce2f2a8:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce2f2b0:   je     0x000000011ce2f2da
  0x000000011ce2f2b6:   vzeroupper 
  0x000000011ce2f2b9:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce2f2bd:   mov    rdi,r15
  0x000000011ce2f2c0:   mov    r12,rsp
  0x000000011ce2f2c3:   sub    rsp,0x0
  0x000000011ce2f2c7:   and    rsp,0xfffffffffffffff0
  0x000000011ce2f2cb:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce2f2d0:   mov    rsp,r12
  0x000000011ce2f2d3:   xor    r12,r12
  0x000000011ce2f2d6:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce2f2da:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce2f2e5:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce2f2ed:   je     0x000000011ce2f372
  0x000000011ce2f2f3:   cmp    BYTE PTR [rip+0xffffffffefeaf85f],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce2f2fa:   je     0x000000011ce2f336
  0x000000011ce2f300:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce2f304:   movabs rsi,0x12b03fd28              ;   {metadata({method} {0x000000012b03fd28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ce2f30e:   mov    rdi,r15
  0x000000011ce2f311:   test   spl,0xf
  0x000000011ce2f315:   je     0x000000011ce2f32d
  0x000000011ce2f31b:   sub    rsp,0x8
  0x000000011ce2f31f:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce2f324:   add    rsp,0x8
  0x000000011ce2f328:   jmp    0x000000011ce2f332
  0x000000011ce2f32d:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce2f332:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce2f336:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce2f341:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce2f34c:   vzeroupper 
  0x000000011ce2f34f:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce2f356:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce2f360:   leave  
  0x000000011ce2f361:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce2f366:   jne    0x000000011ce2f36d
  0x000000011ce2f36c:   ret    
  0x000000011ce2f36d:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce2f372:   vzeroupper 
  0x000000011ce2f375:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce2f379:   mov    r12,rsp
  0x000000011ce2f37c:   sub    rsp,0x0
  0x000000011ce2f380:   and    rsp,0xfffffffffffffff0
  0x000000011ce2f384:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce2f389:   mov    rsp,r12
  0x000000011ce2f38c:   xor    r12,r12
  0x000000011ce2f38f:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce2f393:   jmp    0x000000011ce2f2f3
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='9' compiler='c1' level='1' entry='0x000000011ce2f580' size='664' address='0x000000011ce2f410' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.util.concurrent.atomic.AtomicLong get ()J' bytes='5' count='384' iicount='384' stamp='0.549'/>
<print_nmethod compile_id='9' compiler='c1' level='1' stamp='0.550'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     549    9       1       java.util.concurrent.atomic.AtomicLong::get (5 bytes)
 total in heap  [0x000000011ce2f410,0x000000011ce2f6a8] = 664
 relocation     [0x000000011ce2f558,0x000000011ce2f580] = 40
 main code      [0x000000011ce2f580,0x000000011ce2f618] = 152
 stub code      [0x000000011ce2f618,0x000000011ce2f648] = 48
 metadata       [0x000000011ce2f648,0x000000011ce2f650] = 8
 scopes data    [0x000000011ce2f650,0x000000011ce2f660] = 16
 scopes pcs     [0x000000011ce2f660,0x000000011ce2f6a0] = 64
 dependencies   [0x000000011ce2f6a0,0x000000011ce2f6a8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ae57780} &apos;get&apos; &apos;()J&apos; in &apos;java/util/concurrent/atomic/AtomicLong&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce2f580:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce2f584:   movabs r11,0x12ac00000
  0x000000011ce2f58e:   add    r10,r11
  0x000000011ce2f591:   cmp    r10,rax
  0x000000011ce2f594:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce2f59a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce2f5a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce2f5a7:   push   rbp
  0x000000011ce2f5a8:   sub    rsp,0x30
  0x000000011ce2f5ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce2f5b4:   je     0x000000011ce2f5bb
  0x000000011ce2f5b6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@0 (line 104)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce2f5bb:   vmovsd xmm0,QWORD PTR [rsi+0x10]
  0x000000011ce2f5c0:   vmovq  rax,xmm0                     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
  0x000000011ce2f5c5:   add    rsp,0x30
  0x000000011ce2f5c9:   pop    rbp
  0x000000011ce2f5ca:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce2f5d1:   ja     0x000000011ce2f5d8
  0x000000011ce2f5d7:   ret    
  0x000000011ce2f5d8:   movabs r10,0x11ce2f5ca              ;   {internal_word}
  0x000000011ce2f5e2:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce2f5e9:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce2f5ee:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce2f5f5:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce2f600:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce2f60b:   add    rsp,0x30
  0x000000011ce2f60f:   pop    rbp
  0x000000011ce2f610:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce2f615:   hlt    
  0x000000011ce2f616:   hlt    
  0x000000011ce2f617:   hlt    
[Exception Handler]
  0x000000011ce2f618:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce2f61d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce2f627:   and    rsp,0xfffffffffffffff0
  0x000000011ce2f62b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce2f630:   hlt    
[Deopt Handler Code]
  0x000000011ce2f631:   movabs r10,0x11ce2f631              ;   {section_word}
  0x000000011ce2f63b:   push   r10
  0x000000011ce2f63d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce2f642:   hlt    
  0x000000011ce2f643:   hlt    
  0x000000011ce2f644:   hlt    
  0x000000011ce2f645:   hlt    
  0x000000011ce2f646:   hlt    
  0x000000011ce2f647:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='11' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='384' iicount='384' level='3' stamp='0.554' comment='tiered' hot_count='384'/>
<task_queued compile_id='12' method='java.util.Random nextInt ()I' bytes='7' count='384' iicount='384' level='3' stamp='0.554' comment='tiered' hot_count='384'/>
<task_queued compile_id='13' method='java.util.Random next (I)I' bytes='47' count='384' iicount='384' level='3' stamp='0.554' comment='tiered' hot_count='384'/>
<task_queued compile_id='14' method='foo.rida.RawWrapper &lt;init&gt; (I)V' bytes='10' count='512' iicount='512' level='3' stamp='0.554' comment='tiered' hot_count='512'/>
<task_queued compile_id='15' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1412' iicount='1412' stamp='0.554' comment='tiered' hot_count='1412'/>
<writer thread='23555'/>
<nmethod compile_id='11' compiler='c1' level='3' entry='0x0000000115367da0' size='824' address='0x0000000115367c10' relocation_offset='328' insts_offset='400' stub_offset='648' scopes_data_offset='704' scopes_pcs_offset='736' dependencies_offset='816' metadata_offset='696' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='1296' iicount='1297' stamp='0.554'/>
<print_nmethod compile_id='11' compiler='c1' level='3' stamp='0.554'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     553   11       3       java.util.concurrent.atomic.AtomicLong::compareAndSet (13 bytes)
 total in heap  [0x0000000115367c10,0x0000000115367f48] = 824
 relocation     [0x0000000115367d58,0x0000000115367d88] = 48
 main code      [0x0000000115367da0,0x0000000115367e98] = 248
 stub code      [0x0000000115367e98,0x0000000115367ec8] = 48
 metadata       [0x0000000115367ec8,0x0000000115367ed0] = 8
 scopes data    [0x0000000115367ed0,0x0000000115367ef0] = 32
 scopes pcs     [0x0000000115367ef0,0x0000000115367f40] = 80
 dependencies   [0x0000000115367f40,0x0000000115367f48] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ae57830} &apos;compareAndSet&apos; &apos;(JJ)Z&apos; in &apos;java/util/concurrent/atomic/AtomicLong&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/atomic/AtomicLong&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x60]  (sp of caller)
  0x0000000115367da0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115367da4:   movabs r11,0x12ac00000
  0x0000000115367dae:   add    r10,r11
  0x0000000115367db1:   cmp    r10,rax
  0x0000000115367db4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115367dba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115367dc0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115367dc7:   push   rbp
  0x0000000115367dc8:   sub    rsp,0x50
  0x0000000115367dcc:   cmp    DWORD PTR [r15+0x20],0x1
  0x0000000115367dd4:   je     0x0000000115367ddb
  0x0000000115367dd6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115367ddb:   movabs rax,0x16bc11258              ;   {metadata(method data for {method} {0x000000012ae57830} &apos;compareAndSet&apos; &apos;(JJ)Z&apos; in &apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x0000000115367de5:   mov    ebx,DWORD PTR [rax+0xac]
  0x0000000115367deb:   add    ebx,0x2
  0x0000000115367dee:   mov    DWORD PTR [rax+0xac],ebx
  0x0000000115367df4:   and    ebx,0x7fe
  0x0000000115367dfa:   cmp    ebx,0x0
  0x0000000115367dfd:   je     0x0000000115367e38           ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@0 (line 151)
  0x0000000115367e03:   lea    rsi,[rsi+0x10]
  0x0000000115367e07:   mov    rax,rdx
  0x0000000115367e0a:   mov    rbx,rcx
  0x0000000115367e0d:   lock cmpxchg QWORD PTR [rsi],rbx
  0x0000000115367e12:   mov    eax,0x1
  0x0000000115367e17:   je     0x0000000115367e22
  0x0000000115367e1d:   mov    eax,0x0                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
  0x0000000115367e22:   and    eax,0x1
  0x0000000115367e25:   add    rsp,0x50
  0x0000000115367e29:   pop    rbp
  0x0000000115367e2a:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115367e31:   ja     0x0000000115367e56
  0x0000000115367e37:   ret    
  0x0000000115367e38:   movabs r10,0x12ae57830              ;   {metadata({method} {0x000000012ae57830} &apos;compareAndSet&apos; &apos;(JJ)Z&apos; in &apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x0000000115367e42:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115367e47:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115367e4f:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@-1 (line 151)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115367e54:   jmp    0x0000000115367e03
  0x0000000115367e56:   movabs r10,0x115367e2a              ;   {internal_word}
  0x0000000115367e60:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115367e67:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115367e6c:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115367e73:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115367e7e:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115367e89:   add    rsp,0x50
  0x0000000115367e8d:   pop    rbp
  0x0000000115367e8e:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115367e93:   hlt    
  0x0000000115367e94:   hlt    
  0x0000000115367e95:   hlt    
  0x0000000115367e96:   hlt    
  0x0000000115367e97:   hlt    
[Exception Handler]
  0x0000000115367e98:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115367e9d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115367ea7:   and    rsp,0xfffffffffffffff0
  0x0000000115367eab:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115367eb0:   hlt    
[Deopt Handler Code]
  0x0000000115367eb1:   movabs r10,0x115367eb1              ;   {section_word}
  0x0000000115367ebb:   push   r10
  0x0000000115367ebd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115367ec2:   hlt    
  0x0000000115367ec3:   hlt    
  0x0000000115367ec4:   hlt    
  0x0000000115367ec5:   hlt    
  0x0000000115367ec6:   hlt    
  0x0000000115367ec7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

<writer thread='8707'/>
<task_queued compile_id='16' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='31232' iicount='31232' stamp='0.559' comment='tiered' hot_count='31232'/>
<writer thread='30467'/>
============================= C2-compiled nmethod ==============================
<writer thread='23555'/>
<nmethod compile_id='12' compiler='c1' level='2' entry='0x0000000115368120' size='840' address='0x0000000115367f90' relocation_offset='328' insts_offset='400' stub_offset='624' scopes_data_offset='704' scopes_pcs_offset='736' dependencies_offset='832' metadata_offset='688' method='java.util.Random nextInt ()I' bytes='7' count='31816' iicount='31818' stamp='0.559'/>
<print_nmethod compile_id='12' compiler='c1' level='2' stamp='0.559'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     558   12       2       java.util.Random::nextInt (7 bytes)
 total in heap  [0x0000000115367f90,0x00000001153682d8] = 840
 relocation     [0x00000001153680d8,0x0000000115368110] = 56
 main code      [0x0000000115368120,0x0000000115368200] = 224
 stub code      [0x0000000115368200,0x0000000115368240] = 64
 metadata       [0x0000000115368240,0x0000000115368250] = 16
 scopes data    [0x0000000115368250,0x0000000115368270] = 32
 scopes pcs     [0x0000000115368270,0x00000001153682d0] = 96
 dependencies   [0x00000001153682d0,0x00000001153682d8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115368120:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115368124:   movabs r11,0x12ac00000
  0x000000011536812e:   add    r10,r11
  0x0000000115368131:   cmp    r10,rax
  0x0000000115368134:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536813a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115368140:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115368147:   push   rbp
  0x0000000115368148:   sub    rsp,0x30
  0x000000011536814c:   cmp    DWORD PTR [r15+0x20],0x1
  0x0000000115368154:   je     0x000000011536815b
  0x0000000115368156:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536815b:   movabs rdx,0x16bc111f8
  0x0000000115368165:   mov    edi,DWORD PTR [rdx+0x8]
  0x0000000115368168:   add    edi,0x2
  0x000000011536816b:   mov    DWORD PTR [rdx+0x8],edi
  0x000000011536816e:   and    edi,0xffe
  0x0000000115368174:   cmp    edi,0x0
  0x0000000115368177:   je     0x000000011536819f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@0 (line 495)
  0x000000011536817d:   mov    edx,0x20                     ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x0000000115368182:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000115368187:   call   0x0000000115368205           ; ImmutableOopMap {}
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ;   {optimized virtual_call}
  0x000000011536818c:   add    rsp,0x30
  0x0000000115368190:   pop    rbp
  0x0000000115368191:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115368198:   ja     0x00000001153681bd
  0x000000011536819e:   ret    
  0x000000011536819f:   movabs r10,0x12ad8a378              ;   {metadata({method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x00000001153681a9:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153681ae:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153681b6:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 495)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153681bb:   jmp    0x000000011536817d
  0x00000001153681bd:   movabs r10,0x115368191              ;   {internal_word}
  0x00000001153681c7:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153681ce:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153681d3:   mov    rax,QWORD PTR [r15+0x428]
  0x00000001153681da:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153681e5:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153681f0:   add    rsp,0x30
  0x00000001153681f4:   pop    rbp
  0x00000001153681f5:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001153681fa:   hlt    
  0x00000001153681fb:   hlt    
  0x00000001153681fc:   hlt    
  0x00000001153681fd:   hlt    
  0x00000001153681fe:   hlt    
  0x00000001153681ff:   hlt    
[Stub Code]
  0x0000000115368200:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x0000000115368205:   movabs rbx,0x12ad8a2c8              ;   {static_stub}
  0x000000011536820f:   jmp    0x000000011c9058d6           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x0000000115368214:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115368219:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115368223:   and    rsp,0xfffffffffffffff0
  0x0000000115368227:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536822c:   hlt    
[Deopt Handler Code]
  0x000000011536822d:   movabs r10,0x11536822d              ;   {section_word}
  0x0000000115368237:   push   r10
  0x0000000115368239:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536823e:   hlt    
  0x000000011536823f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>
<nmethod compile_id='15' compiler='c2' level='4' entry='0x000000011ce2f880' size='584' address='0x000000011ce2f710' relocation_offset='328' insts_offset='368' stub_offset='480' scopes_data_offset='520' scopes_pcs_offset='528' dependencies_offset='576' metadata_offset='504' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='60723' iicount='60723' stamp='0.563'/>
<make_not_entrant thread='30467' compile_id='1' compiler='c1' level='3' stamp='0.563'/>
<print_nmethod compile_id='15' compiler='c2' level='4' stamp='0.563'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     563   15       4       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x000000011ce2f710,0x000000011ce2f958] = 584
 relocation     [0x000000011ce2f858,0x000000011ce2f870] = 24
 main code      [0x000000011ce2f880,0x000000011ce2f8f0] = 112
 stub code      [0x000000011ce2f8f0,0x000000011ce2f908] = 24
 metadata       [0x000000011ce2f908,0x000000011ce2f918] = 16
 scopes data    [0x000000011ce2f918,0x000000011ce2f920] = 8
 scopes pcs     [0x000000011ce2f920,0x000000011ce2f950] = 48
 dependencies   [0x000000011ce2f950,0x000000011ce2f958] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000011ce2f880:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce2f884:   movabs r11,0x12ac00000
  0x000000011ce2f88e:   add    r10,r11
  0x000000011ce2f891:   cmp    rax,r10
  0x000000011ce2f894:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce2f89a:   xchg   ax,ax
  0x000000011ce2f89c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce2f8a0:   sub    rsp,0x18
  0x000000011ce2f8a7:   mov    QWORD PTR [rsp+0x10],rbp
  0x000000011ce2f8ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce2f8b4:   jne    0x000000011ce2f8e3           ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
  0x000000011ce2f8ba:   add    rsp,0x10
  0x000000011ce2f8be:   pop    rbp
  0x000000011ce2f8bf:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce2f8c6:   ja     0x000000011ce2f8cd
  0x000000011ce2f8cc:   ret    
  0x000000011ce2f8cd:   movabs r10,0x11ce2f8bf              ;   {internal_word}
  0x000000011ce2f8d7:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce2f8de:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce2f8e3:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce2f8e8:   jmp    0x000000011ce2f8ba
  0x000000011ce2f8ed:   hlt    
  0x000000011ce2f8ee:   hlt    
  0x000000011ce2f8ef:   hlt    
[Exception Handler]
  0x000000011ce2f8f0:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce2f8f5:   call   0x000000011ce2f8fa
  0x000000011ce2f8fa:   sub    QWORD PTR [rsp],0x5
  0x000000011ce2f8ff:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce2f904:   hlt    
  0x000000011ce2f905:   hlt    
  0x000000011ce2f906:   hlt    
  0x000000011ce2f907:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='17' method='java.util.Random nextInt ()I' bytes='7' count='59978' iicount='59978' stamp='0.565' comment='tiered' hot_count='59978'/>
<writer thread='23555'/>
<nmethod compile_id='13' compiler='c1' level='2' entry='0x00000001153684a0' size='1320' address='0x0000000115368310' relocation_offset='328' insts_offset='400' stub_offset='864' scopes_data_offset='952' scopes_pcs_offset='1072' dependencies_offset='1296' nul_chk_table_offset='1304' metadata_offset='928' method='java.util.Random next (I)I' bytes='47' count='60387' iicount='60390' stamp='0.565'/>
<print_nmethod compile_id='13' compiler='c1' level='2' stamp='0.565'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     565   13       2       java.util.Random::next (47 bytes)
 total in heap  [0x0000000115368310,0x0000000115368838] = 1320
 relocation     [0x0000000115368458,0x0000000115368498] = 64
 main code      [0x00000001153684a0,0x0000000115368670] = 464
 stub code      [0x0000000115368670,0x00000001153686b0] = 64
 metadata       [0x00000001153686b0,0x00000001153686c8] = 24
 scopes data    [0x00000001153686c8,0x0000000115368740] = 120
 scopes pcs     [0x0000000115368740,0x0000000115368820] = 224
 dependencies   [0x0000000115368820,0x0000000115368828] = 8
 nul chk table  [0x0000000115368828,0x0000000115368838] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a2c8} &apos;next&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;
  # this:     rsi:rsi   = &apos;java/util/Random&apos;
  # parm0:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x00000001153684a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153684a4:   movabs r11,0x12ac00000
  0x00000001153684ae:   add    r10,r11
  0x00000001153684b1:   cmp    r10,rax
  0x00000001153684b4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153684ba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x00000001153684c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153684c7:   push   rbp
  0x00000001153684c8:   sub    rsp,0x70
  0x00000001153684cc:   cmp    DWORD PTR [r15+0x20],0x1
  0x00000001153684d4:   je     0x00000001153684db
  0x00000001153684d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153684db:   mov    DWORD PTR [rsp+0x50],edx
  0x00000001153684df:   movabs rax,0x16bc11228
  0x00000001153684e9:   mov    ecx,DWORD PTR [rax+0x8]
  0x00000001153684ec:   add    ecx,0x2
  0x00000001153684ef:   mov    DWORD PTR [rax+0x8],ecx
  0x00000001153684f2:   and    ecx,0xffe
  0x00000001153684f8:   cmp    ecx,0x0
  0x00000001153684fb:   je     0x00000001153685e9           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@0 (line 440)
  0x0000000115368501:   mov    edi,DWORD PTR [rsi+0x18]
  0x0000000115368504:   shl    rdi,0x3                      ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
  0x0000000115368508:   mov    QWORD PTR [rsp+0x48],rdi
  0x000000011536850d:   jmp    0x000000011536851d           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@6 (line 442)
  0x0000000115368512:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000115368518:   mov    rdi,QWORD PTR [rsp+0x48]
  0x000000011536851d:   vmovsd xmm0,QWORD PTR [rdi+0x10]    ; implicit exception: dispatches to 0x000000011536860a
  0x0000000115368522:   vmovq  rcx,xmm0                     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::next@8 (line 442)
  0x0000000115368527:   movabs rax,0x5deece66d
  0x0000000115368531:   mov    rsi,rax
  0x0000000115368534:   mov    rax,rcx
  0x0000000115368537:   imul   rax,rsi
  0x000000011536853b:   movabs r10,0xb
  0x0000000115368545:   add    rax,r10
  0x0000000115368548:   movabs r10,0xffffffffffff
  0x0000000115368552:   and    rax,r10
  0x0000000115368555:   mov    rdx,rcx
  0x0000000115368558:   mov    rcx,rax
  0x000000011536855b:   mov    rsi,rdi                      ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@32 (line 444)
  0x000000011536855e:   mov    QWORD PTR [rsp+0x58],rax
  0x0000000115368563:   nop    DWORD PTR [rax+0x0]
  0x0000000115368567:   call   0x0000000115367dc0           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ;   {optimized virtual_call}
  0x000000011536856c:   cmp    eax,0x0
  0x000000011536856f:   mov    ecx,0x2
  0x0000000115368574:   je     0x000000011536857f
  0x000000011536857a:   mov    ecx,0x0
  0x000000011536857f:   movabs rsi,0x16bc11228
  0x0000000115368589:   mov    edi,DWORD PTR [rsi+0xc]
  0x000000011536858c:   add    edi,ecx
  0x000000011536858e:   mov    DWORD PTR [rsi+0xc],edi
  0x0000000115368591:   cmp    ecx,0x0
  0x0000000115368594:   jne    0x000000011536859f
  0x000000011536859a:   mov    edi,0x2
  0x000000011536859f:   and    edi,0x7ffe
  0x00000001153685a5:   cmp    edi,0x0
  0x00000001153685a8:   je     0x000000011536860f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
  0x00000001153685ae:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[72]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
  0x00000001153685b5:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00000001153685b8:   cmp    eax,0x0
  0x00000001153685bb:   je     0x0000000115368518           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
  0x00000001153685c1:   mov    rax,QWORD PTR [rsp+0x58]
  0x00000001153685c6:   mov    edx,DWORD PTR [rsp+0x50]
  0x00000001153685ca:   mov    ecx,0x30
  0x00000001153685cf:   sub    ecx,edx
  0x00000001153685d1:   shr    rax,cl
  0x00000001153685d4:   mov    eax,eax
  0x00000001153685d6:   add    rsp,0x70
  0x00000001153685da:   pop    rbp
  0x00000001153685db:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153685e2:   ja     0x000000011536862d
  0x00000001153685e8:   ret    
  0x00000001153685e9:   movabs r10,0x12ad8a2c8              ;   {metadata({method} {0x000000012ad8a2c8} &apos;next&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x00000001153685f3:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153685f8:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115368600:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::next@-1 (line 440)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115368605:   jmp    0x0000000115368501
  0x000000011536860a:   call   0x000000011c9bc100           ; ImmutableOopMap {rdi=Oop [72]=Oop }
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536860f:   movabs r10,0x12ad8a2c8              ;   {metadata({method} {0x000000012ad8a2c8} &apos;next&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x0000000115368619:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536861e:   mov    QWORD PTR [rsp],0x23
  0x0000000115368626:   call   0x000000011c9c1480           ; ImmutableOopMap {[72]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536862b:   jmp    0x00000001153685ae
  0x000000011536862d:   movabs r10,0x1153685db              ;   {internal_word}
  0x0000000115368637:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536863e:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115368643:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536864a:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115368655:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115368660:   add    rsp,0x70
  0x0000000115368664:   pop    rbp
  0x0000000115368665:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536866a:   hlt    
  0x000000011536866b:   hlt    
  0x000000011536866c:   hlt    
  0x000000011536866d:   hlt    
  0x000000011536866e:   hlt    
  0x000000011536866f:   hlt    
[Exception Handler]
  0x0000000115368670:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115368675:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536867f:   and    rsp,0xfffffffffffffff0
  0x0000000115368683:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115368688:   hlt    
[Deopt Handler Code]
  0x0000000115368689:   movabs r10,0x115368689              ;   {section_word}
  0x0000000115368693:   push   r10
  0x0000000115368695:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536869a:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153686a4:   jmp    0x00000001153686a4           ;   {runtime_call}
  0x00000001153686a9:   hlt    
  0x00000001153686aa:   hlt    
  0x00000001153686ab:   hlt    
  0x00000001153686ac:   hlt    
  0x00000001153686ad:   hlt    
  0x00000001153686ae:   hlt    
  0x00000001153686af:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<writer thread='8707'/>
<task_queued compile_id='18' compile_kind='osr' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='96256' iicount='1' osr_bci='15' level='3' stamp='0.573' comment='tiered' hot_count='96256'/>
<writer thread='30467'/>
<nmethod compile_id='16' compiler='c2' level='4' entry='0x000000011ce2fb80' size='600' address='0x000000011ce2fa10' relocation_offset='328' insts_offset='368' stub_offset='504' scopes_data_offset='536' scopes_pcs_offset='544' dependencies_offset='592' metadata_offset='528' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='96761' iicount='96761' stamp='0.573'/>
<make_not_entrant thread='30467' compile_id='11' compiler='c1' level='3' stamp='0.573'/>
<print_nmethod compile_id='16' compiler='c2' level='4' stamp='0.573'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     573   16       4       java.util.concurrent.atomic.AtomicLong::compareAndSet (13 bytes)
 total in heap  [0x000000011ce2fa10,0x000000011ce2fc68] = 600
 relocation     [0x000000011ce2fb58,0x000000011ce2fb70] = 24
 main code      [0x000000011ce2fb80,0x000000011ce2fc08] = 136
 stub code      [0x000000011ce2fc08,0x000000011ce2fc20] = 24
 metadata       [0x000000011ce2fc20,0x000000011ce2fc28] = 8
 scopes data    [0x000000011ce2fc28,0x000000011ce2fc30] = 8
 scopes pcs     [0x000000011ce2fc30,0x000000011ce2fc60] = 48
 dependencies   [0x000000011ce2fc60,0x000000011ce2fc68] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ae57830} &apos;compareAndSet&apos; &apos;(JJ)Z&apos; in &apos;java/util/concurrent/atomic/AtomicLong&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/atomic/AtomicLong&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x20]  (sp of caller)
  0x000000011ce2fb80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce2fb84:   movabs r11,0x12ac00000
  0x000000011ce2fb8e:   add    r10,r11
  0x000000011ce2fb91:   cmp    rax,r10
  0x000000011ce2fb94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce2fb9a:   xchg   ax,ax
  0x000000011ce2fb9c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce2fba0:   sub    rsp,0x18
  0x000000011ce2fba7:   mov    QWORD PTR [rsp+0x10],rbp
  0x000000011ce2fbac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce2fbb4:   jne    0x000000011ce2fbf7
  0x000000011ce2fbba:   mov    rax,rdx
  0x000000011ce2fbbd:   lock cmpxchg QWORD PTR [rsi+0x10],rcx
  0x000000011ce2fbc3:   sete   r11b
  0x000000011ce2fbc7:   movzx  r11d,r11b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
  0x000000011ce2fbcb:   mov    eax,r11d
  0x000000011ce2fbce:   add    rsp,0x10
  0x000000011ce2fbd2:   pop    rbp
  0x000000011ce2fbd3:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce2fbda:   ja     0x000000011ce2fbe1
  0x000000011ce2fbe0:   ret    
  0x000000011ce2fbe1:   movabs r10,0x11ce2fbd3              ;   {internal_word}
  0x000000011ce2fbeb:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce2fbf2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce2fbf7:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce2fbfc:   jmp    0x000000011ce2fbba
  0x000000011ce2fc01:   hlt    
  0x000000011ce2fc02:   hlt    
  0x000000011ce2fc03:   hlt    
  0x000000011ce2fc04:   hlt    
  0x000000011ce2fc05:   hlt    
  0x000000011ce2fc06:   hlt    
  0x000000011ce2fc07:   hlt    
[Exception Handler]
  0x000000011ce2fc08:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce2fc0d:   call   0x000000011ce2fc12
  0x000000011ce2fc12:   sub    QWORD PTR [rsp],0x5
  0x000000011ce2fc17:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce2fc1c:   hlt    
  0x000000011ce2fc1d:   hlt    
  0x000000011ce2fc1e:   hlt    
  0x000000011ce2fc1f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='19' method='java.util.Random next (I)I' bytes='47' count='96761' iicount='96761' stamp='0.576' comment='tiered' hot_count='96761'/>
<writer thread='23555'/>
<nmethod compile_id='18' compile_kind='osr' compiler='c1' level='3' entry='0x0000000115368a80' size='3320' address='0x0000000115368890' relocation_offset='328' insts_offset='496' stub_offset='2248' scopes_data_offset='2384' scopes_pcs_offset='2720' dependencies_offset='3264' nul_chk_table_offset='3280' oops_offset='2328' metadata_offset='2336' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='97821' iicount='1' stamp='0.576'/>
<print_nmethod compile_id='18' compile_kind='osr' compiler='c1' level='3' stamp='0.576'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     575   18 %     3       foo.rida.SimpleBenchmark::generateRawWrappers @ 15 (50 bytes)
 total in heap  [0x0000000115368890,0x0000000115369588] = 3320
 relocation     [0x00000001153689d8,0x0000000115368a70] = 152
 main code      [0x0000000115368a80,0x0000000115369158] = 1752
 stub code      [0x0000000115369158,0x00000001153691a8] = 80
 oops           [0x00000001153691a8,0x00000001153691b0] = 8
 metadata       [0x00000001153691b0,0x00000001153691e0] = 48
 scopes data    [0x00000001153691e0,0x0000000115369330] = 336
 scopes pcs     [0x0000000115369330,0x0000000115369550] = 544
 dependencies   [0x0000000115369550,0x0000000115369560] = 16
 nul chk table  [0x0000000115369560,0x0000000115369588] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x0000000115368a80:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115368a87:   push   rbp
  0x0000000115368a88:   sub    rsp,0x90
  0x0000000115368a8f:   nop
  0x0000000115368a90:   cmp    DWORD PTR [r15+0x20],0x1
  0x0000000115368a98:   je     0x0000000115368a9f
  0x0000000115368a9a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115368a9f:   movabs rbx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368aa9:   mov    edx,DWORD PTR [rbx+0xac]
  0x0000000115368aaf:   add    edx,0x2
  0x0000000115368ab2:   mov    DWORD PTR [rbx+0xac],edx
  0x0000000115368ab8:   and    edx,0x7fe
  0x0000000115368abe:   cmp    edx,0x0
  0x0000000115368ac1:   je     0x0000000115368fe7           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@0 (line 36)
  0x0000000115368ac7:   mov    rbx,rsi
  0x0000000115368aca:   movabs rdx,0x12bc00400              ;   {metadata(&apos;foo/rida/RawWrapper&apos;[])}
  0x0000000115368ad4:   mov    DWORD PTR [rsp+0x50],esi
  0x0000000115368ad8:   movsxd rbx,ebx
  0x0000000115368adb:   mov    rdi,rbx
  0x0000000115368ade:   cmp    rbx,0xffffff
  0x0000000115368ae5:   ja     0x0000000115369008
  0x0000000115368aeb:   movabs rsi,0x17
  0x0000000115368af5:   lea    rsi,[rsi+rbx*4]
  0x0000000115368af9:   and    rsi,0xfffffffffffffff8
  0x0000000115368afd:   mov    rax,QWORD PTR [r15+0xf8]
  0x0000000115368b04:   lea    rsi,[rax+rsi*1]
  0x0000000115368b08:   cmp    rsi,QWORD PTR [r15+0x108]
  0x0000000115368b0f:   ja     0x0000000115369008
  0x0000000115368b15:   mov    QWORD PTR [r15+0xf8],rsi
  0x0000000115368b1c:   sub    rsi,rax
  0x0000000115368b1f:   mov    QWORD PTR [rax],0x1
  0x0000000115368b26:   mov    rcx,rdx
  0x0000000115368b29:   movabs r10,0x12ac00000
  0x0000000115368b33:   sub    rcx,r10
  0x0000000115368b36:   mov    DWORD PTR [rax+0x8],ecx
  0x0000000115368b39:   mov    DWORD PTR [rax+0xc],ebx
  0x0000000115368b3c:   sub    rsi,0x10
  0x0000000115368b40:   test   rsi,rsi
  0x0000000115368b43:   je     0x0000000115368b5a
  0x0000000115368b49:   xor    rbx,rbx
  0x0000000115368b4c:   shr    rsi,0x3
  0x0000000115368b50:   mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x0000000115368b55:   dec    rsi
  0x0000000115368b58:   jne    0x0000000115368b50           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x0000000115368b5a:   movabs rdx,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x0000000115368b64:   mov    QWORD PTR [rsp+0x48],rax
  0x0000000115368b69:   mov    rax,QWORD PTR [r15+0xf8]
  0x0000000115368b70:   lea    rdi,[rax+0x20]
  0x0000000115368b74:   cmp    rdi,QWORD PTR [r15+0x108]
  0x0000000115368b7b:   ja     0x0000000115369012
  0x0000000115368b81:   mov    QWORD PTR [r15+0xf8],rdi
  0x0000000115368b88:   mov    QWORD PTR [rax],0x1
  0x0000000115368b8f:   mov    rcx,rdx
  0x0000000115368b92:   movabs r10,0x12ac00000
  0x0000000115368b9c:   sub    rcx,r10
  0x0000000115368b9f:   mov    DWORD PTR [rax+0x8],ecx
  0x0000000115368ba2:   xor    rcx,rcx
  0x0000000115368ba5:   mov    DWORD PTR [rax+0xc],ecx
  0x0000000115368ba8:   xor    rcx,rcx
  0x0000000115368bab:   mov    QWORD PTR [rax+0x10],rcx
  0x0000000115368baf:   mov    QWORD PTR [rax+0x18],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@5 (line 37)
  0x0000000115368bb3:   mov    rsi,rax
  0x0000000115368bb6:   movabs rdi,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368bc0:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115368bc8:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x0000000115368bcb:   mov    QWORD PTR [rsp+0x40],rax
  0x0000000115368bd0:   nop    DWORD PTR [rax+0x0]
  0x0000000115368bd7:   call   0x000000011c900600           ; ImmutableOopMap {[64]=Oop [72]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
                                                            ;   {optimized virtual_call}
  0x0000000115368bdc:   mov    rax,QWORD PTR [rsp+0x40]
  0x0000000115368be1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x0000000115368be6:   mov    esi,DWORD PTR [rsp+0x50]
  0x0000000115368bea:   mov    ebx,0x0
  0x0000000115368bef:   mov    QWORD PTR [rsp+0x70],rdi
  0x0000000115368bf4:   jmp    0x0000000115368f00           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@15 (line 38)
  0x0000000115368bf9:   nop    DWORD PTR [rax+0x0]
  0x0000000115368c00:   mov    DWORD PTR [rsp+0x6c],ebx
  0x0000000115368c04:   mov    DWORD PTR [rsp+0x78],esi
  0x0000000115368c08:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011536901f
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x0000000115368c0b:   mov    rdx,rax
  0x0000000115368c0e:   movabs rcx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368c18:   movabs r10,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x0000000115368c22:   mov    QWORD PTR [rcx+0x130],r10
  0x0000000115368c29:   add    QWORD PTR [rcx+0x138],0x1
  0x0000000115368c31:   movabs rdx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x0000000115368c3b:   mov    ecx,DWORD PTR [rdx+0xac]
  0x0000000115368c41:   add    ecx,0x2
  0x0000000115368c44:   mov    DWORD PTR [rdx+0xac],ecx
  0x0000000115368c4a:   and    ecx,0x1ffffe
  0x0000000115368c50:   cmp    ecx,0x0
  0x0000000115368c53:   je     0x0000000115369024
  0x0000000115368c59:   mov    rdx,rax
  0x0000000115368c5c:   movabs rcx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x0000000115368c66:   add    QWORD PTR [rcx+0x108],0x1
  0x0000000115368c6e:   mov    edx,0x20
  0x0000000115368c73:   mov    rsi,rax                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x0000000115368c76:   mov    QWORD PTR [rsp+0x80],rax
  0x0000000115368c7e:   nop
  0x0000000115368c7f:   call   0x00000001153684c0           ; ImmutableOopMap {[112]=Oop [128]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {optimized virtual_call}
  0x0000000115368c84:   mov    rbx,rax                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x0000000115368c87:   movabs rdx,0x12bc00df8              ;   {metadata(&apos;foo/rida/RawWrapper&apos;)}
  0x0000000115368c91:   mov    rax,QWORD PTR [r15+0xf8]
  0x0000000115368c98:   lea    rdi,[rax+0x10]
  0x0000000115368c9c:   cmp    rdi,QWORD PTR [r15+0x108]
  0x0000000115368ca3:   ja     0x0000000115369045
  0x0000000115368ca9:   mov    QWORD PTR [r15+0xf8],rdi
  0x0000000115368cb0:   mov    QWORD PTR [rax],0x1
  0x0000000115368cb7:   mov    rcx,rdx
  0x0000000115368cba:   movabs r10,0x12ac00000
  0x0000000115368cc4:   sub    rcx,r10
  0x0000000115368cc7:   mov    DWORD PTR [rax+0x8],ecx
  0x0000000115368cca:   xor    rcx,rcx
  0x0000000115368ccd:   mov    DWORD PTR [rax+0xc],ecx
  0x0000000115368cd0:   xor    rcx,rcx                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
  0x0000000115368cd3:   mov    rsi,rax
  0x0000000115368cd6:   movabs rdi,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368ce0:   add    QWORD PTR [rdi+0x158],0x1
  0x0000000115368ce8:   movabs rsi,0x16c001e30              ;   {metadata(method data for {method} {0x000000016c001a10} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/RawWrapper&apos;)}
  0x0000000115368cf2:   mov    edi,DWORD PTR [rsi+0xac]
  0x0000000115368cf8:   add    edi,0x2
  0x0000000115368cfb:   mov    DWORD PTR [rsi+0xac],edi
  0x0000000115368d01:   and    edi,0x1ffffe
  0x0000000115368d07:   cmp    edi,0x0
  0x0000000115368d0a:   je     0x0000000115369052
  0x0000000115368d10:   mov    rsi,rax
  0x0000000115368d13:   movabs rdi,0x16c001e30              ;   {metadata(method data for {method} {0x000000016c001a10} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/RawWrapper&apos;)}
  0x0000000115368d1d:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115368d25:   movabs rsi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115368d2f:   mov    edi,DWORD PTR [rsi+0xac]
  0x0000000115368d35:   add    edi,0x2
  0x0000000115368d38:   mov    DWORD PTR [rsi+0xac],edi
  0x0000000115368d3e:   and    edi,0x1ffffe
  0x0000000115368d44:   cmp    edi,0x0
  0x0000000115368d47:   je     0x0000000115369073
  0x0000000115368d4d:   mov    DWORD PTR [rax+0xc],ebx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@6 (line 7)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@32 (line 40)
  0x0000000115368d50:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x0000000115368d54:   mov    rdi,QWORD PTR [rsp+0x70]
  0x0000000115368d59:   cmp    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x0000000115369094
  0x0000000115368d5c:   jae    0x000000011536909e
  0x0000000115368d62:   cmp    rax,0x0
  0x0000000115368d66:   jne    0x0000000115368d7e
  0x0000000115368d68:   movabs rdx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368d72:   or     BYTE PTR [rdx+0x161],0x1
  0x0000000115368d79:   jmp    0x0000000115368e77
  0x0000000115368d7e:   mov    esi,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00000001153690ac
  0x0000000115368d81:   movabs r10,0x12ac00000
  0x0000000115368d8b:   add    rsi,r10
  0x0000000115368d8e:   mov    edx,DWORD PTR [rax+0x8]
  0x0000000115368d91:   movabs r10,0x12ac00000
  0x0000000115368d9b:   add    rdx,r10
  0x0000000115368d9e:   mov    rsi,QWORD PTR [rsi+0xd0]
  0x0000000115368da5:   cmp    rdx,rsi
  0x0000000115368da8:   je     0x0000000115368dd6
  0x0000000115368dae:   mov    ecx,DWORD PTR [rsi+0x14]
  0x0000000115368db1:   cmp    rsi,QWORD PTR [rdx+rcx*1]
  0x0000000115368db5:   je     0x0000000115368dd6
  0x0000000115368dbb:   cmp    ecx,0x20
  0x0000000115368dbe:   jne    0x0000000115368e60
  0x0000000115368dc4:   push   rdx
  0x0000000115368dc5:   push   rsi
  0x0000000115368dc6:   call   0x000000011c9bef80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000000115368dcb:   pop    rdx
  0x0000000115368dcc:   pop    rsi
  0x0000000115368dcd:   cmp    esi,0x0
  0x0000000115368dd0:   je     0x0000000115368e60
  0x0000000115368dd6:   movabs rdx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368de0:   mov    esi,DWORD PTR [rax+0x8]
  0x0000000115368de3:   movabs r10,0x12ac00000
  0x0000000115368ded:   add    rsi,r10
  0x0000000115368df0:   cmp    rsi,QWORD PTR [rdx+0x178]
  0x0000000115368df7:   jne    0x0000000115368e06
  0x0000000115368df9:   add    QWORD PTR [rdx+0x180],0x1
  0x0000000115368e01:   jmp    0x0000000115368e77
  0x0000000115368e06:   cmp    rsi,QWORD PTR [rdx+0x188]
  0x0000000115368e0d:   jne    0x0000000115368e1c
  0x0000000115368e0f:   add    QWORD PTR [rdx+0x190],0x1
  0x0000000115368e17:   jmp    0x0000000115368e77
  0x0000000115368e1c:   cmp    QWORD PTR [rdx+0x178],0x0
  0x0000000115368e24:   jne    0x0000000115368e3d
  0x0000000115368e26:   mov    QWORD PTR [rdx+0x178],rsi
  0x0000000115368e2d:   mov    QWORD PTR [rdx+0x180],0x1
  0x0000000115368e38:   jmp    0x0000000115368e77
  0x0000000115368e3d:   cmp    QWORD PTR [rdx+0x188],0x0
  0x0000000115368e45:   jne    0x0000000115368e5e
  0x0000000115368e47:   mov    QWORD PTR [rdx+0x188],rsi
  0x0000000115368e4e:   mov    QWORD PTR [rdx+0x190],0x1
  0x0000000115368e59:   jmp    0x0000000115368e77
  0x0000000115368e5e:   jmp    0x0000000115368e77
  0x0000000115368e60:   movabs rdx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368e6a:   sub    QWORD PTR [rdx+0x168],0x1
  0x0000000115368e72:   jmp    0x00000001153690b1
  0x0000000115368e77:   movsxd rsi,ebx
  0x0000000115368e7a:   lea    rsi,[rdi+rsi*4+0x10]
  0x0000000115368e7f:   movsx  edx,BYTE PTR [r15+0x40]
  0x0000000115368e84:   cmp    edx,0x0
  0x0000000115368e87:   jne    0x00000001153690ba
  0x0000000115368e8d:   mov    r10,rax
  0x0000000115368e90:   shr    r10,0x3
  0x0000000115368e94:   mov    DWORD PTR [rsi],r10d
  0x0000000115368e97:   mov    rdx,rsi
  0x0000000115368e9a:   xor    rdx,rax
  0x0000000115368e9d:   shr    rdx,0x15
  0x0000000115368ea1:   cmp    rdx,0x0
  0x0000000115368ea5:   jne    0x00000001153690d8           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x0000000115368eab:   inc    ebx
  0x0000000115368ead:   movabs rax,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368eb7:   mov    esi,DWORD PTR [rax+0xb0]
  0x0000000115368ebd:   add    esi,0x2
  0x0000000115368ec0:   mov    DWORD PTR [rax+0xb0],esi
  0x0000000115368ec6:   and    esi,0x3ffe
  0x0000000115368ecc:   cmp    esi,0x0
  0x0000000115368ecf:   je     0x00000001153690f0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
  0x0000000115368ed5:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdi=Oop [128]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
  0x0000000115368edc:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000115368edf:   movabs rax,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368ee9:   inc    DWORD PTR [rax+0x1a0]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
  0x0000000115368eef:   mov    rax,QWORD PTR [rsp+0x80]
  0x0000000115368ef7:   mov    QWORD PTR [rsp+0x70],rdi
  0x0000000115368efc:   mov    esi,DWORD PTR [rsp+0x78]
  0x0000000115368f00:   cmp    ebx,esi
  0x0000000115368f02:   movabs rdx,0x16c002000              ;   {metadata(method data for {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368f0c:   movabs rcx,0x110
  0x0000000115368f16:   jl     0x0000000115368f26
  0x0000000115368f1c:   movabs rcx,0x100
  0x0000000115368f26:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x0000000115368f2a:   lea    r8,[r8+0x1]
  0x0000000115368f2e:   mov    QWORD PTR [rdx+rcx*1],r8
  0x0000000115368f32:   jl     0x0000000115368c00           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x0000000115368f38:   mov    rdi,QWORD PTR [rsp+0x70]
  0x0000000115368f3d:   mov    rax,rdi
  0x0000000115368f40:   add    rsp,0x90
  0x0000000115368f47:   pop    rbp
  0x0000000115368f48:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115368f4f:   ja     0x0000000115369111
  0x0000000115368f55:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@49 (line 43)
  0x0000000115368f56:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115368f5d:   push   rbp
  0x0000000115368f5e:   sub    rsp,0x90
  0x0000000115368f65:   data16 xchg ax,ax
  0x0000000115368f68:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115368f70:   je     0x0000000115368f77
  0x0000000115368f72:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115368f77:   mov    edi,0x28
  0x0000000115368f7c:   movsxd rdi,edi
  0x0000000115368f7f:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x0000000115368f82:   mov    edi,0x20
  0x0000000115368f87:   movsxd rdi,edi
  0x0000000115368f8a:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x0000000115368f8e:   mov    edi,0x18
  0x0000000115368f93:   movsxd rdi,edi
  0x0000000115368f96:   mov    rdx,QWORD PTR [rsi+rdi*1]
  0x0000000115368f9a:   mov    edi,0x10
  0x0000000115368f9f:   movsxd rdi,edi
  0x0000000115368fa2:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x0000000115368fa5:   mov    rdi,rsi
  0x0000000115368fa8:   mov    DWORD PTR [rsp+0x68],ebx
  0x0000000115368fac:   mov    QWORD PTR [rsp+0x60],rax
  0x0000000115368fb1:   mov    QWORD PTR [rsp+0x58],rdx
  0x0000000115368fb6:   mov    DWORD PTR [rsp+0x54],ecx
  0x0000000115368fba:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x0000000115368fbf:   mov    ecx,DWORD PTR [rsp+0x54]
  0x0000000115368fc3:   mov    rbx,rcx
  0x0000000115368fc6:   mov    rdx,QWORD PTR [rsp+0x58]
  0x0000000115368fcb:   mov    rax,rdx
  0x0000000115368fce:   mov    rdx,QWORD PTR [rsp+0x60]
  0x0000000115368fd3:   mov    rdi,rdx
  0x0000000115368fd6:   mov    edx,DWORD PTR [rsp+0x68]
  0x0000000115368fda:   mov    rsi,rdx
  0x0000000115368fdd:   mov    QWORD PTR [rsp+0x70],rdi
  0x0000000115368fe2:   jmp    0x0000000115368f00
  0x0000000115368fe7:   movabs r10,0x16c0009f0              ;   {metadata({method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115368ff1:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115368ff6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115368ffe:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@-1 (line 36)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115369003:   jmp    0x0000000115368ac7
  0x0000000115369008:   call   0x000000011c9bd300           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
                                                            ;   {runtime_call new_object_array Runtime1 stub}
  0x000000011536900d:   jmp    0x0000000115368b5a
  0x0000000115369012:   mov    rdx,rdx
  0x0000000115369015:   call   0x000000011c9bca00           ; ImmutableOopMap {[72]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@5 (line 37)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536901a:   jmp    0x0000000115368bb3
  0x000000011536901f:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [112]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369024:   movabs r10,0x12ad8a378              ;   {metadata({method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011536902e:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369033:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536903b:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115369040:   jmp    0x0000000115368c59
  0x0000000115369045:   mov    rdx,rdx
  0x0000000115369048:   call   0x000000011c9bca00           ; ImmutableOopMap {[112]=Oop [128]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536904d:   jmp    0x0000000115368cd3
  0x0000000115369052:   movabs r10,0x16c001a10              ;   {metadata({method} {0x000000016c001a10} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/RawWrapper&apos;)}
  0x000000011536905c:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369061:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115369069:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@32 (line 40)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536906e:   jmp    0x0000000115368d10
  0x0000000115369073:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011536907d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369082:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536908a:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@32 (line 40)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536908f:   jmp    0x0000000115368d4d
  0x0000000115369094:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369099:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536909e:   mov    QWORD PTR [rsp],rbx
  0x00000001153690a2:   mov    QWORD PTR [rsp+0x8],rdi
  0x00000001153690a7:   call   0x000000011c9bb800           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153690ac:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153690b1:   mov    QWORD PTR [rsp],rax
  0x00000001153690b5:   call   0x000000011c9be200           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00000001153690ba:   mov    edx,DWORD PTR [rsi]
  0x00000001153690bc:   shl    rdx,0x3
  0x00000001153690c0:   cmp    rdx,0x0
  0x00000001153690c4:   je     0x0000000115368e8d
  0x00000001153690ca:   mov    QWORD PTR [rsp],rdx
  0x00000001153690ce:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x00000001153690d3:   jmp    0x0000000115368e8d
  0x00000001153690d8:   cmp    rax,0x0
  0x00000001153690dc:   je     0x0000000115368eab
  0x00000001153690e2:   mov    QWORD PTR [rsp],rsi
  0x00000001153690e6:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x00000001153690eb:   jmp    0x0000000115368eab
  0x00000001153690f0:   movabs r10,0x16c0009f0              ;   {metadata({method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153690fa:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153690ff:   mov    QWORD PTR [rsp],0x2d
  0x0000000115369107:   call   0x000000011c9c1480           ; ImmutableOopMap {rdi=Oop [128]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536910c:   jmp    0x0000000115368ed5
  0x0000000115369111:   movabs r10,0x115368f48              ;   {internal_word}
  0x000000011536911b:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115369122:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115369127:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536912e:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115369139:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115369144:   add    rsp,0x90
  0x000000011536914b:   pop    rbp
  0x000000011536914c:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115369151:   hlt    
  0x0000000115369152:   hlt    
  0x0000000115369153:   hlt    
  0x0000000115369154:   hlt    
  0x0000000115369155:   hlt    
  0x0000000115369156:   hlt    
  0x0000000115369157:   hlt    
[Stub Code]
  0x0000000115369158:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011536915d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115369167:   jmp    0x0000000115369167           ;   {runtime_call}
[Exception Handler]
  0x000000011536916c:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115369171:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536917b:   and    rsp,0xfffffffffffffff0
  0x000000011536917f:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115369184:   hlt    
[Deopt Handler Code]
  0x0000000115369185:   movabs r10,0x115369185              ;   {section_word}
  0x000000011536918f:   push   r10
  0x0000000115369191:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115369196:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153691a0:   jmp    0x00000001153691a0           ;   {runtime_call}
  0x00000001153691a5:   hlt    
  0x00000001153691a6:   hlt    
  0x00000001153691a7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='20' compile_kind='osr' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='768504' iicount='1' osr_bci='15' stamp='0.595' comment='tiered' hot_count='768504'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='17' compiler='c2' level='4' entry='0x000000011ce2fe80' size='952' address='0x000000011ce2fd10' relocation_offset='328' insts_offset='368' stub_offset='584' scopes_data_offset='640' scopes_pcs_offset='752' dependencies_offset='928' nul_chk_table_offset='936' metadata_offset='608' method='java.util.Random nextInt ()I' bytes='7' count='771961' iicount='771974' stamp='0.595'/>
<make_not_entrant thread='30467' compile_id='12' compiler='c1' level='2' stamp='0.595'/>
<print_nmethod compile_id='17' compiler='c2' level='4' stamp='0.595'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     595   17       4       java.util.Random::nextInt (7 bytes)
 total in heap  [0x000000011ce2fd10,0x000000011ce300c8] = 952
 relocation     [0x000000011ce2fe58,0x000000011ce2fe70] = 24
 main code      [0x000000011ce2fe80,0x000000011ce2ff58] = 216
 stub code      [0x000000011ce2ff58,0x000000011ce2ff70] = 24
 metadata       [0x000000011ce2ff70,0x000000011ce2ff90] = 32
 scopes data    [0x000000011ce2ff90,0x000000011ce30000] = 112
 scopes pcs     [0x000000011ce30000,0x000000011ce300b0] = 176
 dependencies   [0x000000011ce300b0,0x000000011ce300b8] = 8
 nul chk table  [0x000000011ce300b8,0x000000011ce300c8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011ce2fe80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce2fe84:   movabs r11,0x12ac00000
  0x000000011ce2fe8e:   add    r10,r11
  0x000000011ce2fe91:   cmp    rax,r10
  0x000000011ce2fe94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce2fe9a:   xchg   ax,ax
  0x000000011ce2fe9c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce2fea0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce2fea7:   push   rbp
  0x000000011ce2fea8:   sub    rsp,0x20
  0x000000011ce2feac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce2feb4:   jne    0x000000011ce2ff4a           ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 495)
  0x000000011ce2feba:   mov    r10d,DWORD PTR [rsi+0x18]    ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2febe:   xchg   ax,ax
  0x000000011ce2fec0:   mov    rax,QWORD PTR [r12+r10*8+0x10]; implicit exception: dispatches to 0x000000011ce2ff28
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2fec5:   movabs r11,0xffffffffffff
  0x000000011ce2fecf:   movabs r8,0x5deece66d
  0x000000011ce2fed9:   mov    r9,rax
  0x000000011ce2fedc:   imul   r9,r8
  0x000000011ce2fee0:   add    r9,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2fee4:   mov    r8,r9
  0x000000011ce2fee7:   and    r8,r11
  0x000000011ce2feea:   lock cmpxchg QWORD PTR [r12+r10*8+0x10],r8
  0x000000011ce2fef1:   sete   bpl
  0x000000011ce2fef5:   movzx  ebp,bpl                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2fef9:   test   ebp,ebp
  0x000000011ce2fefb:   je     0x000000011ce2ff17           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2fefd:   shr    r9,0x10
  0x000000011ce2ff01:   mov    eax,r9d                      ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 445)
                                                            ; - java.util.Random::nextInt@3 (line 495)
  0x000000011ce2ff04:   add    rsp,0x20
  0x000000011ce2ff08:   pop    rbp
  0x000000011ce2ff09:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce2ff10:   ja     0x000000011ce2ff34
  0x000000011ce2ff16:   ret    
  0x000000011ce2ff17:   mov    esi,0xffffff45
  0x000000011ce2ff1c:   mov    DWORD PTR [rsp],r10d
  0x000000011ce2ff20:   data16 xchg ax,ax
  0x000000011ce2ff23:   call   0x000000011c906180           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce2ff28:   mov    esi,0xfffffff6
  0x000000011ce2ff2d:   xchg   ax,ax
  0x000000011ce2ff2f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce2ff34:   movabs r10,0x11ce2ff09              ;   {internal_word}
  0x000000011ce2ff3e:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce2ff45:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce2ff4a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce2ff4f:   jmp    0x000000011ce2feba
  0x000000011ce2ff54:   hlt    
  0x000000011ce2ff55:   hlt    
  0x000000011ce2ff56:   hlt    
  0x000000011ce2ff57:   hlt    
[Exception Handler]
  0x000000011ce2ff58:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce2ff5d:   call   0x000000011ce2ff62
  0x000000011ce2ff62:   sub    QWORD PTR [rsp],0x5
  0x000000011ce2ff67:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce2ff6c:   hlt    
  0x000000011ce2ff6d:   hlt    
  0x000000011ce2ff6e:   hlt    
  0x000000011ce2ff6f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='23555'/>
<nmethod compile_id='14' compiler='c1' level='2' entry='0x00000001153697a0' size='792' address='0x0000000115369610' relocation_offset='328' insts_offset='400' stub_offset='608' scopes_data_offset='672' scopes_pcs_offset='704' dependencies_offset='784' oops_offset='656' metadata_offset='664' method='foo.rida.RawWrapper &lt;init&gt; (I)V' bytes='10' count='909844' iicount='909855' stamp='0.599'/>
<print_nmethod compile_id='14' compiler='c1' level='2' stamp='0.599'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     598   14       2       foo.rida.RawWrapper::&lt;init&gt; (10 bytes)
 total in heap  [0x0000000115369610,0x0000000115369928] = 792
 relocation     [0x0000000115369758,0x0000000115369788] = 48
 main code      [0x00000001153697a0,0x0000000115369870] = 208
 stub code      [0x0000000115369870,0x00000001153698a0] = 48
 oops           [0x00000001153698a0,0x00000001153698a8] = 8
 metadata       [0x00000001153698a8,0x00000001153698b0] = 8
 scopes data    [0x00000001153698b0,0x00000001153698d0] = 32
 scopes pcs     [0x00000001153698d0,0x0000000115369920] = 80
 dependencies   [0x0000000115369920,0x0000000115369928] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c001a10} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/RawWrapper&apos;
  # this:     rsi:rsi   = &apos;foo/rida/RawWrapper&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001153697a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153697a4:   movabs r11,0x12ac00000
  0x00000001153697ae:   add    r10,r11
  0x00000001153697b1:   cmp    r10,rax
  0x00000001153697b4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153697ba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x00000001153697c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153697c7:   push   rbp
  0x00000001153697c8:   sub    rsp,0x30
  0x00000001153697cc:   cmp    DWORD PTR [r15+0x20],0x0
  0x00000001153697d4:   je     0x00000001153697db
  0x00000001153697d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153697db:   movabs rdi,0x16c001e00
  0x00000001153697e5:   mov    ebx,DWORD PTR [rdi+0x8]
  0x00000001153697e8:   add    ebx,0x2
  0x00000001153697eb:   mov    DWORD PTR [rdi+0x8],ebx
  0x00000001153697ee:   and    ebx,0xffe
  0x00000001153697f4:   cmp    ebx,0x0
  0x00000001153697f7:   je     0x0000000115369813           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@0 (line 6)
  0x00000001153697fd:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@6 (line 7)
  0x0000000115369800:   add    rsp,0x30
  0x0000000115369804:   pop    rbp
  0x0000000115369805:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536980c:   ja     0x0000000115369831
  0x0000000115369812:   ret    
  0x0000000115369813:   movabs r10,0x16c001a10              ;   {metadata({method} {0x000000016c001a10} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/RawWrapper&apos;)}
  0x000000011536981d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369822:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536982a:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@-1 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536982f:   jmp    0x00000001153697fd
  0x0000000115369831:   movabs r10,0x115369805              ;   {internal_word}
  0x000000011536983b:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115369842:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115369847:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536984e:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115369859:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115369864:   add    rsp,0x30
  0x0000000115369868:   pop    rbp
  0x0000000115369869:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536986e:   hlt    
  0x000000011536986f:   hlt    
[Exception Handler]
  0x0000000115369870:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115369875:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536987f:   and    rsp,0xfffffffffffffff0
  0x0000000115369883:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115369888:   hlt    
[Deopt Handler Code]
  0x0000000115369889:   movabs r10,0x115369889              ;   {section_word}
  0x0000000115369893:   push   r10
  0x0000000115369895:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536989a:   hlt    
  0x000000011536989b:   hlt    
  0x000000011536989c:   hlt    
  0x000000011536989d:   hlt    
  0x000000011536989e:   hlt    
  0x000000011536989f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='19' compiler='c2' level='4' entry='0x000000011ce30280' size='928' address='0x000000011ce30110' relocation_offset='328' insts_offset='368' stub_offset='592' scopes_data_offset='632' scopes_pcs_offset='728' dependencies_offset='904' nul_chk_table_offset='912' metadata_offset='616' method='java.util.Random next (I)I' bytes='47' count='1024154' iicount='1024166' stamp='0.602'/>
<make_not_entrant thread='30467' compile_id='13' compiler='c1' level='2' stamp='0.602'/>
<print_nmethod compile_id='19' compiler='c2' level='4' stamp='0.602'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     602   19       4       java.util.Random::next (47 bytes)
 total in heap  [0x000000011ce30110,0x000000011ce304b0] = 928
 relocation     [0x000000011ce30258,0x000000011ce30270] = 24
 main code      [0x000000011ce30280,0x000000011ce30360] = 224
 stub code      [0x000000011ce30360,0x000000011ce30378] = 24
 metadata       [0x000000011ce30378,0x000000011ce30388] = 16
 scopes data    [0x000000011ce30388,0x000000011ce303e8] = 96
 scopes pcs     [0x000000011ce303e8,0x000000011ce30498] = 176
 dependencies   [0x000000011ce30498,0x000000011ce304a0] = 8
 nul chk table  [0x000000011ce304a0,0x000000011ce304b0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a2c8} &apos;next&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;
  # this:     rsi:rsi   = &apos;java/util/Random&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000011ce30280:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce30284:   movabs r11,0x12ac00000
  0x000000011ce3028e:   add    r10,r11
  0x000000011ce30291:   cmp    rax,r10
  0x000000011ce30294:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3029a:   xchg   ax,ax
  0x000000011ce3029c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce302a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce302a7:   push   rbp
  0x000000011ce302a8:   sub    rsp,0x20
  0x000000011ce302ac:   cmp    DWORD PTR [r15+0x20],0x1
  0x000000011ce302b4:   jne    0x000000011ce30352           ;*synchronization entry
                                                            ; - java.util.Random::next@-1 (line 440)
  0x000000011ce302ba:   mov    r10d,DWORD PTR [rsi+0x18]    ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
  0x000000011ce302be:   xchg   ax,ax
  0x000000011ce302c0:   mov    rax,QWORD PTR [r12+r10*8+0x10]; implicit exception: dispatches to 0x000000011ce30330
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
  0x000000011ce302c5:   movabs r11,0xffffffffffff
  0x000000011ce302cf:   movabs r8,0x5deece66d
  0x000000011ce302d9:   mov    r9,rax
  0x000000011ce302dc:   imul   r9,r8
  0x000000011ce302e0:   add    r9,0xb
  0x000000011ce302e4:   and    r9,r11                       ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 443)
  0x000000011ce302e7:   lock cmpxchg QWORD PTR [r12+r10*8+0x10],r9
  0x000000011ce302ee:   sete   bpl
  0x000000011ce302f2:   movzx  ebp,bpl                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
  0x000000011ce302f6:   test   ebp,ebp
  0x000000011ce302f8:   je     0x000000011ce3031e           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
  0x000000011ce302fa:   mov    r10d,0x30
  0x000000011ce30300:   sub    r10d,edx
  0x000000011ce30303:   shrx   r10,r9,r10
  0x000000011ce30308:   mov    eax,r10d                     ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 445)
  0x000000011ce3030b:   add    rsp,0x20
  0x000000011ce3030f:   pop    rbp
  0x000000011ce30310:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce30317:   ja     0x000000011ce3033c
  0x000000011ce3031d:   ret    
  0x000000011ce3031e:   mov    esi,0xffffff45
  0x000000011ce30323:   mov    DWORD PTR [rsp],edx
  0x000000011ce30326:   mov    DWORD PTR [rsp+0x4],r10d
  0x000000011ce3032b:   call   0x000000011c906180           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce30330:   mov    esi,0xfffffff6
  0x000000011ce30335:   xchg   ax,ax
  0x000000011ce30337:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3033c:   movabs r10,0x11ce30310              ;   {internal_word}
  0x000000011ce30346:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3034d:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce30352:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce30357:   jmp    0x000000011ce302ba
  0x000000011ce3035c:   hlt    
  0x000000011ce3035d:   hlt    
  0x000000011ce3035e:   hlt    
  0x000000011ce3035f:   hlt    
[Exception Handler]
  0x000000011ce30360:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce30365:   call   0x000000011ce3036a
  0x000000011ce3036a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3036f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce30374:   hlt    
  0x000000011ce30375:   hlt    
  0x000000011ce30376:   hlt    
  0x000000011ce30377:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='20' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce306a0' size='2320' address='0x000000011ce30510' relocation_offset='328' insts_offset='400' stub_offset='1280' scopes_data_offset='1376' scopes_pcs_offset='1704' dependencies_offset='2248' handler_table_offset='2264' nul_chk_table_offset='2288' oops_offset='1304' metadata_offset='1312' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1302535' iicount='1' stamp='0.609'/>
<make_not_entrant thread='30467' compile_id='18' compile_kind='osr' compiler='c1' level='3' stamp='0.609'/>
<print_nmethod compile_id='20' compile_kind='osr' compiler='c2' level='4' stamp='0.609'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     609   20 %     4       foo.rida.SimpleBenchmark::generateRawWrappers @ 15 (50 bytes)
 total in heap  [0x000000011ce30510,0x000000011ce30e20] = 2320
 relocation     [0x000000011ce30658,0x000000011ce30688] = 48
 main code      [0x000000011ce306a0,0x000000011ce30a10] = 880
 stub code      [0x000000011ce30a10,0x000000011ce30a28] = 24
 oops           [0x000000011ce30a28,0x000000011ce30a30] = 8
 metadata       [0x000000011ce30a30,0x000000011ce30a70] = 64
 scopes data    [0x000000011ce30a70,0x000000011ce30bb8] = 328
 scopes pcs     [0x000000011ce30bb8,0x000000011ce30dd8] = 544
 dependencies   [0x000000011ce30dd8,0x000000011ce30de8] = 16
 handler table  [0x000000011ce30de8,0x000000011ce30e00] = 24
 nul chk table  [0x000000011ce30e00,0x000000011ce30e20] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce306a0:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce306a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce306b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce306b7:   push   rbp
  0x000000011ce306b8:   sub    rsp,0x40
  0x000000011ce306bc:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce306c4:   jne    0x000000011ce30a00
  0x000000011ce306ca:   mov    rbp,QWORD PTR [rsi+0x20]
  0x000000011ce306ce:   mov    r14,QWORD PTR [rsi+0x18]
  0x000000011ce306d2:   mov    ebx,DWORD PTR [rsi+0x10]
  0x000000011ce306d5:   mov    r13d,DWORD PTR [rsi+0x28]
  0x000000011ce306d9:   mov    rdi,rsi
  0x000000011ce306dc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce306e0:   movabs r10,0x10c859500
  0x000000011ce306ea:   call   r10
  0x000000011ce306ed:   test   rbp,rbp
  0x000000011ce306f0:   je     0x000000011ce309a8
  0x000000011ce306f6:   mov    r11d,DWORD PTR [rbp+0x8]
  0x000000011ce306fa:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce30700:   cmp    r11d,0x1000400               ;   {metadata(&apos;foo/rida/RawWrapper&apos;[])}
  0x000000011ce30707:   jne    0x000000011ce309b0
  0x000000011ce3070d:   mov    r10,rbp
  0x000000011ce30710:   mov    r8d,DWORD PTR [r14+0x8]      ; implicit exception: dispatches to 0x000000011ce309e1
  0x000000011ce30714:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3071c:   data16 data16 xchg ax,ax
  0x000000011ce30720:   cmp    r8d,0x189ec8                 ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011ce30727:   jne    0x000000011ce309b0           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@15 (line 38)
  0x000000011ce3072d:   mov    esi,DWORD PTR [r10+0xc]      ; implicit exception: dispatches to 0x000000011ce309e4
                                                            ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce30731:   jmp    0x000000011ce3076a
  0x000000011ce30733:   mov    DWORD PTR [rsp],esi
  0x000000011ce30736:   mov    rbp,r10
  0x000000011ce30739:   mov    rsi,r15
  0x000000011ce3073c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce30740:   movabs r10,0x10c3183d0
  0x000000011ce3074a:   call   r10
  0x000000011ce3074d:   mov    r10,rbp
  0x000000011ce30750:   mov    esi,DWORD PTR [rsp]
  0x000000011ce30753:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3075c:   data16 data16 xchg ax,ax            ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce30760:   mov    r11,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r10=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
  0x000000011ce30767:   test   DWORD PTR [r11],eax          ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@15 (line 38)
                                                            ;   {poll}
  0x000000011ce3076a:   cmp    ebx,r13d
  0x000000011ce3076d:   jge    0x000000011ce3096f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x000000011ce30773:   mov    r8d,DWORD PTR [r14+0x18]     ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce30777:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce30780:   mov    rax,QWORD PTR [r12+r8*8+0x10]; implicit exception: dispatches to 0x000000011ce309c8
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce30785:   mov    r9,rax
  0x000000011ce30788:   movabs r11,0x5deece66d
  0x000000011ce30792:   imul   r9,r11
  0x000000011ce30796:   add    r9,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce3079a:   mov    r11,r9
  0x000000011ce3079d:   movabs rcx,0xffffffffffff
  0x000000011ce307a7:   and    r11,rcx
  0x000000011ce307aa:   lock cmpxchg QWORD PTR [r12+r8*8+0x10],r11
  0x000000011ce307b1:   sete   r11b
  0x000000011ce307b5:   movzx  r11d,r11b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce307b9:   test   r11d,r11d
  0x000000011ce307bc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce307c0:   je     0x000000011ce30984
  0x000000011ce307c6:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce307cd:   mov    r11,rax
  0x000000011ce307d0:   add    r11,0x10
  0x000000011ce307d4:   shr    r9,0x10
  0x000000011ce307d8:   mov    ebp,r9d
  0x000000011ce307db:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce307e0:   cmp    r11,QWORD PTR [r15+0x108]
  0x000000011ce307e7:   jae    0x000000011ce308df           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce307ed:   mov    QWORD PTR [r15+0xf8],r11
  0x000000011ce307f4:   prefetchw BYTE PTR [r11+0xc0]
  0x000000011ce307fc:   mov    QWORD PTR [rax],0x1
  0x000000011ce30803:   mov    DWORD PTR [rax+0x8],0x1000df8;   {metadata(&apos;foo/rida/RawWrapper&apos;)}
  0x000000011ce3080a:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
  0x000000011ce3080e:   mov    DWORD PTR [rax+0xc],ebp      ;*synchronization entry
                                                            ; - foo.rida.RawWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@32 (line 40)
  0x000000011ce30811:   cmp    ebx,esi
  0x000000011ce30813:   jae    0x000000011ce3091f
  0x000000011ce30819:   lea    rbp,[r10+rbx*4+0x10]         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce3081e:   xchg   ax,ax
  0x000000011ce30820:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce30825:   jne    0x000000011ce308a5
  0x000000011ce3082b:   mov    r8,rbp                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce3082e:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@42 (line 38)
  0x000000011ce30830:   mov    r11,rax
  0x000000011ce30833:   shr    r11,0x3
  0x000000011ce30837:   mov    DWORD PTR [rbp+0x0],r11d
  0x000000011ce3083b:   mov    r11,rax
  0x000000011ce3083e:   xor    r11,r8
  0x000000011ce30841:   shr    r11,0x15
  0x000000011ce30845:   test   r11,r11
  0x000000011ce30848:   je     0x000000011ce30760
  0x000000011ce3084e:   shr    r8,0x9
  0x000000011ce30852:   movabs rdi,0x107e78000
  0x000000011ce3085c:   add    rdi,r8
  0x000000011ce3085f:   nop
  0x000000011ce30860:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce30863:   je     0x000000011ce30760
  0x000000011ce30869:   mov    r11,QWORD PTR [r15+0x48]     ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce3086d:   mov    r8,QWORD PTR [r15+0x58]
  0x000000011ce30871:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce30877:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce3087a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce30880:   je     0x000000011ce30760
  0x000000011ce30886:   mov    BYTE PTR [rdi],r12b
  0x000000011ce30889:   test   r11,r11
  0x000000011ce3088c:   je     0x000000011ce30733
  0x000000011ce30892:   mov    QWORD PTR [r8+r11*1-0x8],rdi ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce30897:   add    r11,0xfffffffffffffff8
  0x000000011ce3089b:   mov    QWORD PTR [r15+0x48],r11
  0x000000011ce3089f:   nop
  0x000000011ce308a0:   jmp    0x000000011ce30760
  0x000000011ce308a5:   mov    r8d,DWORD PTR [rbp+0x0]
  0x000000011ce308a9:   test   r8d,r8d
  0x000000011ce308ac:   je     0x000000011ce3082b
  0x000000011ce308b2:   mov    r11,QWORD PTR [r15+0x28]
  0x000000011ce308b6:   mov    rdi,r8
  0x000000011ce308b9:   shl    rdi,0x3
  0x000000011ce308bd:   data16 xchg ax,ax
  0x000000011ce308c0:   test   r11,r11
  0x000000011ce308c3:   je     0x000000011ce30940           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce308c9:   mov    r8,QWORD PTR [r15+0x38]
  0x000000011ce308cd:   mov    QWORD PTR [r8+r11*1-0x8],rdi ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce308d2:   add    r11,0xfffffffffffffff8       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce308d6:   mov    QWORD PTR [r15+0x28],r11     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce308da:   jmp    0x000000011ce3082b
  0x000000011ce308df:   mov    DWORD PTR [rsp+0x18],esi
  0x000000011ce308e3:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce308e8:   mov    DWORD PTR [rsp+0xc],r13d
  0x000000011ce308ed:   mov    DWORD PTR [rsp+0x8],ebx
  0x000000011ce308f1:   mov    QWORD PTR [rsp],r14
  0x000000011ce308f5:   movabs rsi,0x12bc00df8              ;   {metadata(&apos;foo/rida/RawWrapper&apos;)}
  0x000000011ce308ff:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce30904:   mov    r14,QWORD PTR [rsp]
  0x000000011ce30908:   mov    ebx,DWORD PTR [rsp+0x8]
  0x000000011ce3090c:   mov    r13d,DWORD PTR [rsp+0xc]
  0x000000011ce30911:   mov    r10,QWORD PTR [rsp+0x10]
  0x000000011ce30916:   mov    esi,DWORD PTR [rsp+0x18]
  0x000000011ce3091a:   jmp    0x000000011ce3080e
  0x000000011ce3091f:   mov    esi,0xffffffe4
  0x000000011ce30924:   mov    ebp,r13d
  0x000000011ce30927:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce3092c:   mov    QWORD PTR [rsp+0x18],r10
  0x000000011ce30931:   mov    DWORD PTR [rsp+0x14],ebx
  0x000000011ce30935:   mov    QWORD PTR [rsp+0x20],rax
  0x000000011ce3093a:   nop
  0x000000011ce3093b:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce30940:   mov    QWORD PTR [rsp+0x10],rax
  0x000000011ce30945:   mov    DWORD PTR [rsp+0x8],esi
  0x000000011ce30949:   mov    QWORD PTR [rsp],r10          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce3094d:   mov    rsi,r15
  0x000000011ce30950:   movabs r10,0x10c3183a0
  0x000000011ce3095a:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce3095d:   mov    r10,QWORD PTR [rsp]
  0x000000011ce30961:   mov    esi,DWORD PTR [rsp+0x8]
  0x000000011ce30965:   mov    rax,QWORD PTR [rsp+0x10]
  0x000000011ce3096a:   jmp    0x000000011ce3082b           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x000000011ce3096f:   mov    esi,0xffffff45
  0x000000011ce30974:   mov    rbp,r10
  0x000000011ce30977:   mov    DWORD PTR [rsp],ebx
  0x000000011ce3097a:   mov    DWORD PTR [rsp+0x4],r13d
  0x000000011ce3097f:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce30984:   mov    esi,0xffffff45
  0x000000011ce30989:   mov    ebp,r13d
  0x000000011ce3098c:   mov    QWORD PTR [rsp],r10
  0x000000011ce30990:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce30995:   mov    DWORD PTR [rsp+0x10],ebx
  0x000000011ce30999:   mov    DWORD PTR [rsp+0x14],r8d
  0x000000011ce3099e:   mov    DWORD PTR [rsp+0x18],r11d
  0x000000011ce309a3:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop [20]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce309a8:   xor    r10d,r10d
  0x000000011ce309ab:   jmp    0x000000011ce30710
  0x000000011ce309b0:   mov    esi,0xffffff8d
  0x000000011ce309b5:   mov    DWORD PTR [rsp],r13d
  0x000000011ce309b9:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce309be:   mov    DWORD PTR [rsp+0x4],ebx
  0x000000011ce309c2:   nop
  0x000000011ce309c3:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@15 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce309c8:   mov    esi,0xfffffff6
  0x000000011ce309cd:   xchg   ax,ax
  0x000000011ce309cf:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce309d4:   mov    rsi,rax
  0x000000011ce309d7:   add    rsp,0x40
  0x000000011ce309db:   pop    rbp
  0x000000011ce309dc:   jmp    0x000000011c9c8280           ;   {runtime_call _rethrow_Java}
  0x000000011ce309e1:   xor    r14d,r14d
  0x000000011ce309e4:   mov    esi,0xffffff76
  0x000000011ce309e9:   mov    ebp,r13d
  0x000000011ce309ec:   mov    QWORD PTR [rsp],r10
  0x000000011ce309f0:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce309f5:   mov    DWORD PTR [rsp+0x10],ebx
  0x000000011ce309f9:   xchg   ax,ax
  0x000000011ce309fb:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@15 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce30a00:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce30a05:   jmp    0x000000011ce306ca
  0x000000011ce30a0a:   hlt    
  0x000000011ce30a0b:   hlt    
  0x000000011ce30a0c:   hlt    
  0x000000011ce30a0d:   hlt    
  0x000000011ce30a0e:   hlt    
  0x000000011ce30a0f:   hlt    
[Exception Handler]
  0x000000011ce30a10:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce30a15:   call   0x000000011ce30a1a
  0x000000011ce30a1a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce30a1f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce30a24:   hlt    
  0x000000011ce30a25:   hlt    
  0x000000011ce30a26:   hlt    
  0x000000011ce30a27:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x000000011536910c' compile_id='18' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='45' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1309176' iicount='1'/>
</deoptimized>
<task_queued compile_id='21' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1310200' iicount='1' stamp='0.622' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='21' compiler='c2' level='4' entry='0x000000011ce31020' size='3648' address='0x000000011ce30e90' relocation_offset='328' insts_offset='400' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2472' dependencies_offset='3512' handler_table_offset='3528' oops_offset='1784' metadata_offset='1800' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1310200' iicount='1' stamp='0.640'/>
<print_nmethod compile_id='21' compiler='c2' level='4' stamp='0.640'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     639   21       4       foo.rida.SimpleBenchmark::generateRawWrappers (50 bytes)
 total in heap  [0x000000011ce30e90,0x000000011ce31cd0] = 3648
 relocation     [0x000000011ce30fd8,0x000000011ce31020] = 72
 main code      [0x000000011ce31020,0x000000011ce31560] = 1344
 stub code      [0x000000011ce31560,0x000000011ce31588] = 40
 oops           [0x000000011ce31588,0x000000011ce31598] = 16
 metadata       [0x000000011ce31598,0x000000011ce315f8] = 96
 scopes data    [0x000000011ce315f8,0x000000011ce31838] = 576
 scopes pcs     [0x000000011ce31838,0x000000011ce31c48] = 1040
 dependencies   [0x000000011ce31c48,0x000000011ce31c58] = 16
 handler table  [0x000000011ce31c58,0x000000011ce31cd0] = 120

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c0009f0} &apos;generateRawWrappers&apos; &apos;(I)[Lfoo/rida/RawWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ce31020:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce31027:   push   rbp
  0x000000011ce31028:   sub    rsp,0x30
  0x000000011ce3102c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce31034:   jne    0x000000011ce31554           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@-1 (line 36)
  0x000000011ce3103a:   mov    ebp,esi
  0x000000011ce3103c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31040:   cmp    esi,0x40000
  0x000000011ce31046:   ja     0x000000011ce314ef
  0x000000011ce3104c:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x000000011ce3104f:   cmp    esi,0x40000
  0x000000011ce31055:   ja     0x000000011ce314b5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3105b:   mov    r8,QWORD PTR [r15+0xf8]
  0x000000011ce31062:   lea    rcx,[r10*4+0x17]             ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x000000011ce3106a:   mov    r10,rcx
  0x000000011ce3106d:   and    r10,0xfffffffffffffff8
  0x000000011ce31071:   mov    r11,r8
  0x000000011ce31074:   add    r11,r10
  0x000000011ce31077:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce31080:   cmp    r11,QWORD PTR [r15+0x108]
  0x000000011ce31087:   jae    0x000000011ce314b5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3108d:   mov    QWORD PTR [r15+0xf8],r11
  0x000000011ce31094:   mov    rdi,r8
  0x000000011ce31097:   add    rdi,0x10
  0x000000011ce3109b:   mov    QWORD PTR [r8],0x1
  0x000000011ce310a2:   prefetchw BYTE PTR [r11+0xc0]
  0x000000011ce310aa:   mov    DWORD PTR [r8+0x8],0x1000400 ;   {metadata(&apos;foo/rida/RawWrapper&apos;[])}
  0x000000011ce310b2:   mov    DWORD PTR [r8+0xc],esi
  0x000000011ce310b6:   prefetchw BYTE PTR [r11+0x100]
  0x000000011ce310be:   prefetchw BYTE PTR [r11+0x140]
  0x000000011ce310c6:   prefetchw BYTE PTR [r11+0x180]
  0x000000011ce310ce:   shr    rcx,0x3
  0x000000011ce310d2:   add    rcx,0xfffffffffffffffe
  0x000000011ce310d6:   xor    rax,rax
  0x000000011ce310d9:   cmp    rcx,0x8
  0x000000011ce310dd:   jg     0x000000011ce310ef
  0x000000011ce310df:   dec    rcx
  0x000000011ce310e2:   js     0x000000011ce31133
  0x000000011ce310e4:   mov    QWORD PTR [rdi+rcx*8],rax
  0x000000011ce310e8:   dec    rcx
  0x000000011ce310eb:   jge    0x000000011ce310e4
  0x000000011ce310ed:   jmp    0x000000011ce31133
  0x000000011ce310ef:   vpxor  ymm0,ymm0,ymm0
  0x000000011ce310f3:   jmp    0x000000011ce31105
  0x000000011ce310f8:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce310fc:   vmovdqu YMMWORD PTR [rdi+0x20],ymm0
  0x000000011ce31101:   add    rdi,0x40
  0x000000011ce31105:   sub    rcx,0x8
  0x000000011ce31109:   jge    0x000000011ce310f8
  0x000000011ce3110b:   add    rcx,0x4
  0x000000011ce3110f:   jl     0x000000011ce3111d
  0x000000011ce31111:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce31115:   add    rdi,0x20
  0x000000011ce31119:   sub    rcx,0x4
  0x000000011ce3111d:   add    rcx,0x4
  0x000000011ce31121:   jle    0x000000011ce31133
  0x000000011ce31123:   dec    rcx
  0x000000011ce31126:   vmovq  QWORD PTR [rdi],xmm0
  0x000000011ce3112a:   add    rdi,0x8
  0x000000011ce3112e:   dec    rcx
  0x000000011ce31131:   jge    0x000000011ce31126           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x000000011ce31133:   mov    QWORD PTR [rsp],r8           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce31137:   mov    DWORD PTR [rsp+0x8],ebp
  0x000000011ce3113b:   movabs r10,0x70e828098              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x000000070e828098})}
  0x000000011ce31145:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31149:   movabs rbp,0x106689d45497fdb5
  0x000000011ce31153:   mov    r10,rdx
  0x000000011ce31156:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3115a:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce3115f:   movabs rsi,0x70e828098              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x000000070e828098})}
  0x000000011ce31169:   mov    rcx,r10
  0x000000011ce3116c:   data16 xchg ax,ax
  0x000000011ce3116f:   call   0x000000011c900600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
                                                            ;   {optimized virtual_call}
  0x000000011ce31174:   test   eax,eax
  0x000000011ce31176:   je     0x000000011ce31480           ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3117c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31180:   movabs r10,0x10c7ba940
  0x000000011ce3118a:   call   r10                          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3118d:   mov    r13,QWORD PTR [r15+0xf8]
  0x000000011ce31194:   mov    r11,QWORD PTR [rsp+0x10]
  0x000000011ce31199:   xor    r11,rax                      ;*lxor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@7 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3119c:   mov    r10,r13
  0x000000011ce3119f:   add    r10,0x18
  0x000000011ce311a3:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce311aa:   jae    0x000000011ce314d0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce311b0:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce311b7:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce311bf:   mov    QWORD PTR [r13+0x0],0x1
  0x000000011ce311c7:   mov    DWORD PTR [r13+0x8],0x256da0 ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce311cf:   mov    DWORD PTR [r13+0xc],r12d
  0x000000011ce311d3:   mov    QWORD PTR [r13+0x10],r12
  0x000000011ce311d7:   movabs r10,0x5deece66d
  0x000000011ce311e1:   xor    r11,r10
  0x000000011ce311e4:   movabs r10,0xffffffffffff
  0x000000011ce311ee:   and    r11,r10
  0x000000011ce311f1:   mov    QWORD PTR [r13+0x10],r11
  0x000000011ce311f5:   lock add DWORD PTR [rsp-0x40],0x0   ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce311fb:   mov    r10d,DWORD PTR [rsp+0x8]
  0x000000011ce31200:   test   r10d,r10d
  0x000000011ce31203:   jle    0x000000011ce3150c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x000000011ce31209:   test   r10d,r10d
  0x000000011ce3120c:   je     0x000000011ce314f7
  0x000000011ce31212:   lea    r11d,[r10-0x1]
  0x000000011ce31216:   cmp    r11d,r10d
  0x000000011ce31219:   jae    0x000000011ce314f7
  0x000000011ce3121f:   xor    r11d,r11d
  0x000000011ce31222:   jmp    0x000000011ce3123a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31224:   mov    rbx,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r8=Oop r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
  0x000000011ce3122b:   test   DWORD PTR [rbx],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@45 (line 38)
                                                            ;   {poll}
  0x000000011ce3122d:   cmp    r11d,r10d
  0x000000011ce31230:   jge    0x000000011ce3151c
  0x000000011ce31236:   mov    QWORD PTR [rsp],r8           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@20 (line 39)
  0x000000011ce3123a:   mov    r9d,r10d
  0x000000011ce3123d:   sub    r9d,r11d
  0x000000011ce31240:   xor    ecx,ecx
  0x000000011ce31242:   cmp    r10d,r11d
  0x000000011ce31245:   cmovl  r9d,ecx
  0x000000011ce31249:   cmp    r9d,0x3e8
  0x000000011ce31250:   mov    ecx,0x3e8
  0x000000011ce31255:   cmova  r9d,ecx
  0x000000011ce31259:   add    r9d,r11d
  0x000000011ce3125c:   jmp    0x000000011ce31299
  0x000000011ce3125e:   mov    DWORD PTR [rsp],r9d
  0x000000011ce31262:   mov    r14d,r11d
  0x000000011ce31265:   mov    ebp,r10d
  0x000000011ce31268:   mov    rbx,r8                       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3126b:   mov    rsi,r15
  0x000000011ce3126e:   movabs r10,0x10c3183d0
  0x000000011ce31278:   call   r10
  0x000000011ce3127b:   mov    r8,rbx
  0x000000011ce3127e:   mov    r10d,ebp
  0x000000011ce31281:   mov    r11d,r14d
  0x000000011ce31284:   mov    r9d,DWORD PTR [rsp]
  0x000000011ce31288:   nop    DWORD PTR [rax+rax*1+0x0]    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@20 (line 39)
  0x000000011ce31290:   cmp    r11d,r9d
  0x000000011ce31293:   jge    0x000000011ce31224           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x000000011ce31295:   mov    QWORD PTR [rsp],r8           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@20 (line 39)
  0x000000011ce31299:   mov    rax,QWORD PTR [r13+0x10]     ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce3129d:   mov    rcx,rax
  0x000000011ce312a0:   movabs r8,0x5deece66d
  0x000000011ce312aa:   imul   rcx,r8
  0x000000011ce312ae:   add    rcx,0xb                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce312b2:   mov    r8,rcx
  0x000000011ce312b5:   movabs rbx,0xffffffffffff
  0x000000011ce312bf:   and    r8,rbx
  0x000000011ce312c2:   lock cmpxchg QWORD PTR [r13+0x10],r8
  0x000000011ce312c8:   sete   r8b
  0x000000011ce312cc:   movzx  r8d,r8b                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
  0x000000011ce312d0:   test   r8d,r8d
  0x000000011ce312d3:   je     0x000000011ce31457
  0x000000011ce312d9:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce312e0:   mov    r8,rax
  0x000000011ce312e3:   add    r8,0x10
  0x000000011ce312e7:   shr    rcx,0x10
  0x000000011ce312eb:   mov    ebp,ecx
  0x000000011ce312ed:   cmp    r8,QWORD PTR [r15+0x108]
  0x000000011ce312f4:   jae    0x000000011ce31405           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce312fa:   mov    QWORD PTR [r15+0xf8],r8
  0x000000011ce31301:   prefetchw BYTE PTR [r8+0xc0]
  0x000000011ce31309:   mov    QWORD PTR [rax],0x1
  0x000000011ce31310:   mov    DWORD PTR [rax+0x8],0x1000df8;   {metadata(&apos;foo/rida/RawWrapper&apos;)}
  0x000000011ce31317:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
  0x000000011ce3131b:   mov    r8,QWORD PTR [rsp]
  0x000000011ce3131f:   lea    rbx,[r8+r11*4+0x10]          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce31324:   mov    DWORD PTR [rax+0xc],ebp      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31327:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce3132c:   jne    0x000000011ce313a5           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce31332:   mov    rcx,rax
  0x000000011ce31335:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@42 (line 38)
  0x000000011ce31338:   mov    rdi,rax
  0x000000011ce3133b:   shr    rdi,0x3
  0x000000011ce3133f:   mov    DWORD PTR [rbx],edi
  0x000000011ce31341:   xor    rcx,rbx
  0x000000011ce31344:   shr    rcx,0x15
  0x000000011ce31348:   test   rcx,rcx
  0x000000011ce3134b:   je     0x000000011ce31290
  0x000000011ce31351:   shr    rbx,0x9
  0x000000011ce31355:   movabs rdi,0x107e78000
  0x000000011ce3135f:   add    rdi,rbx
  0x000000011ce31362:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce31365:   je     0x000000011ce31290
  0x000000011ce3136b:   mov    rcx,QWORD PTR [r15+0x58]     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3136f:   mov    rbx,QWORD PTR [r15+0x48]
  0x000000011ce31373:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce31379:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce3137c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31380:   je     0x000000011ce31290
  0x000000011ce31386:   mov    BYTE PTR [rdi],r12b
  0x000000011ce31389:   test   rbx,rbx
  0x000000011ce3138c:   je     0x000000011ce3125e
  0x000000011ce31392:   mov    QWORD PTR [rcx+rbx*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce31397:   add    rbx,0xfffffffffffffff8       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3139b:   mov    QWORD PTR [r15+0x48],rbx
  0x000000011ce3139f:   nop
  0x000000011ce313a0:   jmp    0x000000011ce31290
  0x000000011ce313a5:   mov    ecx,DWORD PTR [rbx]
  0x000000011ce313a7:   test   ecx,ecx
  0x000000011ce313a9:   je     0x000000011ce31332           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce313ab:   mov    QWORD PTR [rsp+0x8],rax
  0x000000011ce313b0:   mov    DWORD PTR [rsp+0x4],r9d
  0x000000011ce313b5:   mov    DWORD PTR [rsp],r11d
  0x000000011ce313b9:   mov    r14,r13
  0x000000011ce313bc:   mov    r13d,r10d
  0x000000011ce313bf:   mov    rbp,r8
  0x000000011ce313c2:   mov    r10,QWORD PTR [r15+0x28]
  0x000000011ce313c6:   mov    rdi,rcx
  0x000000011ce313c9:   shl    rdi,0x3
  0x000000011ce313cd:   test   r10,r10
  0x000000011ce313d0:   je     0x000000011ce31445           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce313d6:   mov    r11,QWORD PTR [r15+0x38]
  0x000000011ce313da:   mov    QWORD PTR [r11+r10*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce313df:   add    r10,0xfffffffffffffff8       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce313e3:   mov    QWORD PTR [r15+0x28],r10     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce313e7:   mov    r8,rbp
  0x000000011ce313ea:   mov    r10d,r13d
  0x000000011ce313ed:   mov    r13,r14
  0x000000011ce313f0:   mov    r11d,DWORD PTR [rsp]
  0x000000011ce313f4:   mov    r9d,DWORD PTR [rsp+0x4]
  0x000000011ce313f9:   mov    rax,QWORD PTR [rsp+0x8]
  0x000000011ce313fe:   xchg   ax,ax
  0x000000011ce31400:   jmp    0x000000011ce31332
  0x000000011ce31405:   mov    DWORD PTR [rsp+0x18],r9d
  0x000000011ce3140a:   mov    DWORD PTR [rsp+0xc],r11d
  0x000000011ce3140f:   mov    QWORD PTR [rsp+0x10],r13
  0x000000011ce31414:   mov    DWORD PTR [rsp+0x8],r10d
  0x000000011ce31419:   movabs rsi,0x12bc00df8              ;   {metadata(&apos;foo/rida/RawWrapper&apos;)}
  0x000000011ce31423:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce31428:   mov    r10d,DWORD PTR [rsp+0x8]
  0x000000011ce3142d:   mov    r13,QWORD PTR [rsp+0x10]
  0x000000011ce31432:   mov    r11d,DWORD PTR [rsp+0xc]
  0x000000011ce31437:   mov    r9d,DWORD PTR [rsp+0x18]
  0x000000011ce3143c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31440:   jmp    0x000000011ce3131b           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31445:   mov    rsi,r15
  0x000000011ce31448:   movabs r10,0x10c3183a0
  0x000000011ce31452:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
  0x000000011ce31455:   jmp    0x000000011ce313e7
  0x000000011ce31457:   mov    esi,0xffffff45
  0x000000011ce3145c:   mov    ebp,r10d
  0x000000011ce3145f:   mov    DWORD PTR [rsp+0x8],r11d
  0x000000011ce31464:   mov    DWORD PTR [rsp+0xc],r8d
  0x000000011ce31469:   mov    QWORD PTR [rsp+0x18],r13
  0x000000011ce3146e:   nop
  0x000000011ce3146f:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@21 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce31474:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3147c:   data16 data16 xchg ax,ax            ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31480:   movabs r10,0x70e828098              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x000000070e828098})}
  0x000000011ce3148a:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce3148e:   mov    r10,rdx
  0x000000011ce31491:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31495:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce3149a:   movabs rsi,0x70e828098              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x000000070e828098})}
  0x000000011ce314a4:   mov    rcx,r10
  0x000000011ce314a7:   call   0x000000011c900600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
                                                            ;   {optimized virtual_call}
  0x000000011ce314ac:   test   eax,eax
  0x000000011ce314ae:   je     0x000000011ce31480           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@21 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce314b0:   jmp    0x000000011ce3117c
  0x000000011ce314b5:   movabs rsi,0x12bc00400              ;   {metadata(&apos;foo/rida/RawWrapper&apos;[])}
  0x000000011ce314bf:   mov    edx,ebp
  0x000000011ce314c1:   xchg   ax,ax
  0x000000011ce314c3:   call   0x000000011c9c5600           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
                                                            ;   {runtime_call _new_array_Java}
  0x000000011ce314c8:   mov    r8,rax
  0x000000011ce314cb:   jmp    0x000000011ce31133
  0x000000011ce314d0:   mov    rbp,r11                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 353)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce314d3:   movabs rsi,0x12ae56da0              ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce314dd:   xchg   ax,ax
  0x000000011ce314df:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Random::&lt;init&gt;@19 (line 355)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce314e4:   mov    r11,rbp
  0x000000011ce314e7:   mov    r13,rax
  0x000000011ce314ea:   jmp    0x000000011ce311d7
  0x000000011ce314ef:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x000000011ce314f2:   jmp    0x000000011ce3104f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
  0x000000011ce314f7:   mov    esi,0xffffff76
  0x000000011ce314fc:   mov    ebp,r10d
  0x000000011ce314ff:   mov    QWORD PTR [rsp+0x10],r13
  0x000000011ce31504:   data16 xchg ax,ax
  0x000000011ce31507:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3150c:   mov    esi,0xffffff45
  0x000000011ce31511:   mov    rbp,QWORD PTR [rsp]
  0x000000011ce31515:   xchg   ax,ax
  0x000000011ce31517:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3151c:   mov    esi,0xffffff45
  0x000000011ce31521:   mov    rbp,r8
  0x000000011ce31524:   mov    DWORD PTR [rsp],r11d
  0x000000011ce31528:   mov    DWORD PTR [rsp+0x4],r10d
  0x000000011ce3152d:   xchg   ax,ax
  0x000000011ce3152f:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateRawWrappers@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce31534:   mov    rsi,rax
  0x000000011ce31537:   jmp    0x000000011ce3154a           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@1 (line 36)
  0x000000011ce31539:   mov    rsi,rax
  0x000000011ce3153c:   jmp    0x000000011ce3154a
  0x000000011ce3153e:   xchg   ax,ax
  0x000000011ce31540:   jmp    0x000000011ce31542           ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@9 (line 37)
  0x000000011ce31542:   mov    rsi,rax
  0x000000011ce31545:   jmp    0x000000011ce3154a           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@26 (line 40)
  0x000000011ce31547:   mov    rsi,rax                      ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@-1 (line 36)
  0x000000011ce3154a:   add    rsp,0x30
  0x000000011ce3154e:   pop    rbp
  0x000000011ce3154f:   jmp    0x000000011c9c8280           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateRawWrappers@41 (line 41)
                                                            ;   {runtime_call _rethrow_Java}
  0x000000011ce31554:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce31559:   jmp    0x000000011ce3103a
  0x000000011ce3155e:   hlt    
  0x000000011ce3155f:   hlt    
[Exception Handler]
  0x000000011ce31560:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce31565:   call   0x000000011ce3156a
  0x000000011ce3156a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3156f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce31574:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ce3157e:   jmp    0x000000011ce3157e           ;   {runtime_call}
  0x000000011ce31583:   hlt    
  0x000000011ce31584:   hlt    
  0x000000011ce31585:   hlt    
  0x000000011ce31586:   hlt    
  0x000000011ce31587:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='20' compile_kind='osr' compiler='c2' level='4' stamp='0.837'>
<jvms bci='17' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1310200' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='20' compile_kind='osr' compiler='c2' level='4' stamp='0.837'/>
<task_queued compile_id='22' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='60416' iicount='1' osr_bci='10' level='3' stamp='0.838' comment='tiered' hot_count='60416'/>
<writer thread='23555'/>
<nmethod compile_id='22' compile_kind='osr' compiler='c1' level='3' entry='0x0000000115369b20' size='1496' address='0x0000000115369990' relocation_offset='328' insts_offset='400' stub_offset='952' scopes_data_offset='1016' scopes_pcs_offset='1144' dependencies_offset='1448' nul_chk_table_offset='1456' oops_offset='1000' metadata_offset='1008' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='83152' iicount='1' stamp='0.838'/>
<print_nmethod compile_id='22' compile_kind='osr' compiler='c1' level='3' stamp='0.838'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     838   22 %     3       foo.rida.SimpleBenchmark::benchmarkRawWrappers @ 10 (38 bytes)
 total in heap  [0x0000000115369990,0x0000000115369f68] = 1496
 relocation     [0x0000000115369ad8,0x0000000115369b20] = 72
 main code      [0x0000000115369b20,0x0000000115369d48] = 552
 stub code      [0x0000000115369d48,0x0000000115369d78] = 48
 oops           [0x0000000115369d78,0x0000000115369d80] = 8
 metadata       [0x0000000115369d80,0x0000000115369d88] = 8
 scopes data    [0x0000000115369d88,0x0000000115369e08] = 128
 scopes pcs     [0x0000000115369e08,0x0000000115369f38] = 304
 dependencies   [0x0000000115369f38,0x0000000115369f40] = 8
 nul chk table  [0x0000000115369f40,0x0000000115369f68] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x0000000115369b20:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115369b27:   push   rbp
  0x0000000115369b28:   sub    rsp,0x40
  0x0000000115369b2c:   cmp    DWORD PTR [r15+0x20],0x2
  0x0000000115369b34:   je     0x0000000115369b3b
  0x0000000115369b36:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115369b3b:   movabs rdi,0x16c0021f8              ;   {metadata(method data for {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369b45:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115369b4b:   add    ebx,0x2
  0x0000000115369b4e:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115369b54:   and    ebx,0x7fe
  0x0000000115369b5a:   cmp    ebx,0x0
  0x0000000115369b5d:   je     0x0000000115369ca4           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@0 (line 75)
  0x0000000115369b63:   mov    edi,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000115369cc5
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@5 (line 76)
  0x0000000115369b66:   mov    ebx,0x0
  0x0000000115369b6b:   mov    eax,0x0
  0x0000000115369b70:   jmp    0x0000000115369bd8           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@10 (line 76)
  0x0000000115369b75:   data16 xchg ax,ax
  0x0000000115369b78:   cmp    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000115369cca
  0x0000000115369b7b:   jae    0x0000000115369cd4
  0x0000000115369b81:   movsxd rdx,ebx
  0x0000000115369b84:   mov    edx,DWORD PTR [rsi+rdx*4+0x10]
  0x0000000115369b88:   shl    rdx,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x0000000115369b8c:   mov    edx,DWORD PTR [rdx+0xc]      ; implicit exception: dispatches to 0x0000000115369ce2
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x0000000115369b8f:   add    edx,eax
  0x0000000115369b91:   inc    ebx
  0x0000000115369b93:   movabs rax,0x16c0021f8              ;   {metadata(method data for {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369b9d:   mov    ecx,DWORD PTR [rax+0xb0]
  0x0000000115369ba3:   add    ecx,0x2
  0x0000000115369ba6:   mov    DWORD PTR [rax+0xb0],ecx
  0x0000000115369bac:   and    ecx,0x3ffe
  0x0000000115369bb2:   cmp    ecx,0x0
  0x0000000115369bb5:   je     0x0000000115369ce7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x0000000115369bbb:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x0000000115369bc2:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000115369bc5:   movabs rax,0x16c0021f8              ;   {metadata(method data for {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369bcf:   inc    DWORD PTR [rax+0x110]
  0x0000000115369bd5:   mov    rax,rdx                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x0000000115369bd8:   cmp    ebx,edi
  0x0000000115369bda:   movabs rdx,0x16c0021f8              ;   {metadata(method data for {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369be4:   movabs rcx,0x100
  0x0000000115369bee:   jl     0x0000000115369bfe
  0x0000000115369bf4:   movabs rcx,0xf0
  0x0000000115369bfe:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x0000000115369c02:   lea    r8,[r8+0x1]
  0x0000000115369c06:   mov    QWORD PTR [rdx+rcx*1],r8
  0x0000000115369c0a:   jl     0x0000000115369b78           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
  0x0000000115369c10:   add    rsp,0x40
  0x0000000115369c14:   pop    rbp
  0x0000000115369c15:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115369c1c:   ja     0x0000000115369d08
  0x0000000115369c22:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@37 (line 79)
  0x0000000115369c23:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115369c2a:   push   rbp
  0x0000000115369c2b:   sub    rsp,0x40
  0x0000000115369c2f:   nop
  0x0000000115369c30:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115369c38:   je     0x0000000115369c3f
  0x0000000115369c3a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115369c3f:   mov    edi,0x20
  0x0000000115369c44:   movsxd rdi,edi
  0x0000000115369c47:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x0000000115369c4a:   mov    edi,0x18
  0x0000000115369c4f:   movsxd rdi,edi
  0x0000000115369c52:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x0000000115369c56:   mov    edi,0x10
  0x0000000115369c5b:   movsxd rdi,edi
  0x0000000115369c5e:   mov    edx,DWORD PTR [rsi+rdi*1]
  0x0000000115369c61:   mov    edi,0x8
  0x0000000115369c66:   movsxd rdi,edi
  0x0000000115369c69:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x0000000115369c6c:   mov    rdi,rsi
  0x0000000115369c6f:   mov    DWORD PTR [rsp+0x30],ebx
  0x0000000115369c73:   mov    QWORD PTR [rsp+0x28],rax
  0x0000000115369c78:   mov    DWORD PTR [rsp+0x24],edx
  0x0000000115369c7c:   mov    DWORD PTR [rsp+0x20],ecx
  0x0000000115369c80:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x0000000115369c85:   mov    ecx,DWORD PTR [rsp+0x20]
  0x0000000115369c89:   mov    rbx,rcx
  0x0000000115369c8c:   mov    edx,DWORD PTR [rsp+0x24]
  0x0000000115369c90:   mov    rdi,rdx
  0x0000000115369c93:   mov    rax,QWORD PTR [rsp+0x28]
  0x0000000115369c98:   mov    rsi,rax
  0x0000000115369c9b:   mov    eax,DWORD PTR [rsp+0x30]
  0x0000000115369c9f:   jmp    0x0000000115369bd8
  0x0000000115369ca4:   movabs r10,0x16c000da8              ;   {metadata({method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369cae:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369cb3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115369cbb:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@-1 (line 75)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115369cc0:   jmp    0x0000000115369b63
  0x0000000115369cc5:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@5 (line 76)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369cca:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369ccf:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369cd4:   mov    QWORD PTR [rsp],rbx
  0x0000000115369cd8:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000115369cdd:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115369ce2:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield number {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115369ce7:   movabs r10,0x16c000da8              ;   {metadata({method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369cf1:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115369cf6:   mov    QWORD PTR [rsp],0x21
  0x0000000115369cfe:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115369d03:   jmp    0x0000000115369bbb
  0x0000000115369d08:   movabs r10,0x115369c15              ;   {internal_word}
  0x0000000115369d12:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115369d19:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115369d1e:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115369d25:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115369d30:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115369d3b:   add    rsp,0x40
  0x0000000115369d3f:   pop    rbp
  0x0000000115369d40:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115369d45:   hlt    
  0x0000000115369d46:   hlt    
  0x0000000115369d47:   hlt    
[Exception Handler]
  0x0000000115369d48:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115369d4d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115369d57:   and    rsp,0xfffffffffffffff0
  0x0000000115369d5b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115369d60:   hlt    
[Deopt Handler Code]
  0x0000000115369d61:   movabs r10,0x115369d61              ;   {section_word}
  0x0000000115369d6b:   push   r10
  0x0000000115369d6d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115369d72:   hlt    
  0x0000000115369d73:   hlt    
  0x0000000115369d74:   hlt    
  0x0000000115369d75:   hlt    
  0x0000000115369d76:   hlt    
  0x0000000115369d77:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='23' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='2711966' iicount='1' osr_bci='10' stamp='0.847' comment='tiered' hot_count='2711966'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='23' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce31e80' size='1576' address='0x000000011ce31d10' relocation_offset='328' insts_offset='368' stub_offset='840' scopes_data_offset='888' scopes_pcs_offset='1072' dependencies_offset='1504' nul_chk_table_offset='1512' oops_offset='864' metadata_offset='872' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3454131' iicount='1' stamp='0.849'/>
<make_not_entrant thread='30467' compile_id='22' compile_kind='osr' compiler='c1' level='3' stamp='0.849'/>
<print_nmethod compile_id='23' compile_kind='osr' compiler='c2' level='4' stamp='0.849'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     849   23 %     4       foo.rida.SimpleBenchmark::benchmarkRawWrappers @ 10 (38 bytes)
 total in heap  [0x000000011ce31d10,0x000000011ce32338] = 1576
 relocation     [0x000000011ce31e58,0x000000011ce31e78] = 32
 main code      [0x000000011ce31e80,0x000000011ce32058] = 472
 stub code      [0x000000011ce32058,0x000000011ce32070] = 24
 oops           [0x000000011ce32070,0x000000011ce32078] = 8
 metadata       [0x000000011ce32078,0x000000011ce32088] = 16
 scopes data    [0x000000011ce32088,0x000000011ce32140] = 184
 scopes pcs     [0x000000011ce32140,0x000000011ce322f0] = 432
 dependencies   [0x000000011ce322f0,0x000000011ce322f8] = 8
 nul chk table  [0x000000011ce322f8,0x000000011ce32338] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce31e80:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce31e85:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce31e90:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce31e97:   push   rbp
  0x000000011ce31e98:   sub    rsp,0x30
  0x000000011ce31e9c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce31ea4:   jne    0x000000011ce32048
  0x000000011ce31eaa:   mov    rbx,QWORD PTR [rsi+0x18]
  0x000000011ce31eae:   mov    r13d,DWORD PTR [rsi+0x20]
  0x000000011ce31eb2:   mov    ebp,DWORD PTR [rsi+0x10]
  0x000000011ce31eb5:   mov    r14d,DWORD PTR [rsi+0x8]
  0x000000011ce31eb9:   mov    rdi,rsi
  0x000000011ce31ebc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31ec0:   movabs r10,0x10c859500
  0x000000011ce31eca:   call   r10
  0x000000011ce31ecd:   mov    r11d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x000000011ce32034
  0x000000011ce31ed1:   cmp    r11d,0x1000400               ;   {metadata(&apos;foo/rida/RawWrapper&apos;[])}
  0x000000011ce31ed8:   jne    0x000000011ce32010
  0x000000011ce31ede:   xchg   ax,ax
  0x000000011ce31ee0:   cmp    r14d,ebp
  0x000000011ce31ee3:   jge    0x000000011ce31fe5           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@10 (line 76)
  0x000000011ce31ee9:   mov    r8d,DWORD PTR [rbx+0xc]
  0x000000011ce31eed:   lea    r10d,[r14+0x1]
  0x000000011ce31ef1:   xor    ecx,ecx
  0x000000011ce31ef3:   test   r10d,r10d
  0x000000011ce31ef6:   cmovl  r10d,ecx
  0x000000011ce31efa:   cmp    r10d,ebp
  0x000000011ce31efd:   cmovg  r10d,ebp
  0x000000011ce31f01:   cmp    r14d,r8d
  0x000000011ce31f04:   jae    0x000000011ce31ff8
  0x000000011ce31f0a:   mov    r11d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce31f0f:   add    r13d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@28 (line 77)
  0x000000011ce31f14:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@30 (line 76)
  0x000000011ce31f17:   cmp    r14d,r10d
  0x000000011ce31f1a:   jl     0x000000011ce31f01           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
  0x000000011ce31f1c:   movsxd r10,r8d
  0x000000011ce31f1f:   movsxd r11,ebp
  0x000000011ce31f22:   cmp    r11,r10
  0x000000011ce31f25:   mov    r11d,ebp
  0x000000011ce31f28:   cmovg  r11d,r8d
  0x000000011ce31f2c:   lea    edi,[r11-0x3]
  0x000000011ce31f30:   mov    r9d,0x80000000
  0x000000011ce31f36:   cmp    r11d,edi
  0x000000011ce31f39:   cmovl  edi,r9d
  0x000000011ce31f3d:   data16 xchg ax,ax
  0x000000011ce31f40:   cmp    r14d,edi
  0x000000011ce31f43:   jge    0x000000011ce31fbb
  0x000000011ce31f49:   mov    edx,0xfa0
  0x000000011ce31f4e:   mov    r9d,edi
  0x000000011ce31f51:   sub    r9d,r14d
  0x000000011ce31f54:   cmp    edi,r14d
  0x000000011ce31f57:   cmovl  r9d,ecx
  0x000000011ce31f5b:   cmp    r9d,0xfa0
  0x000000011ce31f62:   cmova  r9d,edx
  0x000000011ce31f66:   add    r9d,r14d
  0x000000011ce31f69:   nop    DWORD PTR [rax+0x0]
  0x000000011ce31f70:   mov    r10d,DWORD PTR [rbx+r14*4+0x10]
  0x000000011ce31f75:   add    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
  0x000000011ce31f7a:   movsxd rsi,r14d
  0x000000011ce31f7d:   mov    r10d,DWORD PTR [rbx+rsi*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce31f82:   mov    eax,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce31f87:   mov    r10d,DWORD PTR [rbx+rsi*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce31f8c:   mov    r11d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce31f91:   mov    esi,DWORD PTR [rbx+rsi*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce31f95:   mov    r10d,DWORD PTR [r12+rsi*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce31f9a:   add    r13d,eax
  0x000000011ce31f9d:   add    r13d,r11d
  0x000000011ce31fa0:   add    r13d,r10d                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@28 (line 77)
  0x000000011ce31fa3:   add    r14d,0x4                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@30 (line 76)
  0x000000011ce31fa7:   cmp    r14d,r9d
  0x000000011ce31faa:   jl     0x000000011ce31f70           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x000000011ce31fac:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x000000011ce31fb3:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
                                                            ;   {poll}
  0x000000011ce31fb6:   cmp    r14d,edi
  0x000000011ce31fb9:   jl     0x000000011ce31f4e
  0x000000011ce31fbb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce31fc0:   cmp    r14d,ebp
  0x000000011ce31fc3:   jge    0x000000011ce31fe5
  0x000000011ce31fc5:   data16 xchg ax,ax
  0x000000011ce31fc8:   cmp    r14d,r8d
  0x000000011ce31fcb:   jae    0x000000011ce31ff8
  0x000000011ce31fcd:   mov    r10d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce31fd2:   add    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32028
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@28 (line 77)
  0x000000011ce31fd7:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@30 (line 76)
  0x000000011ce31fda:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce31fe0:   cmp    r14d,ebp
  0x000000011ce31fe3:   jl     0x000000011ce31fc8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
  0x000000011ce31fe5:   mov    esi,0xffffff45
  0x000000011ce31fea:   mov    DWORD PTR [rsp],r13d
  0x000000011ce31fee:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce31ff3:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce31ff8:   mov    esi,0xffffffe4
  0x000000011ce31ffd:   mov    DWORD PTR [rsp],r13d
  0x000000011ce32001:   mov    QWORD PTR [rsp+0x10],rbx
  0x000000011ce32006:   mov    DWORD PTR [rsp+0x18],r14d
  0x000000011ce3200b:   call   0x000000011c906180           ; ImmutableOopMap {[16]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32010:   mov    esi,0xffffff8d
  0x000000011ce32015:   mov    DWORD PTR [rsp],r13d
  0x000000011ce32019:   mov    QWORD PTR [rsp+0x8],rbx
  0x000000011ce3201e:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce32023:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@10 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32028:   mov    esi,0xfffffff6
  0x000000011ce3202d:   xchg   ax,ax
  0x000000011ce3202f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*getfield number {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32034:   mov    esi,0xffffff76
  0x000000011ce32039:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3203d:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce32042:   nop
  0x000000011ce32043:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@10 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32048:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3204d:   jmp    0x000000011ce31eaa
  0x000000011ce32052:   hlt    
  0x000000011ce32053:   hlt    
  0x000000011ce32054:   hlt    
  0x000000011ce32055:   hlt    
  0x000000011ce32056:   hlt    
  0x000000011ce32057:   hlt    
[Exception Handler]
  0x000000011ce32058:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3205d:   call   0x000000011ce32062
  0x000000011ce32062:   sub    QWORD PTR [rsp],0x5
  0x000000011ce32067:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3206c:   hlt    
  0x000000011ce3206d:   hlt    
  0x000000011ce3206e:   hlt    
  0x000000011ce3206f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x0000000115369d03' compile_id='22' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='33' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3457438' iicount='1'/>
</deoptimized>
<task_queued compile_id='24' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3458462' iicount='1' stamp='0.857' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='24' compiler='c2' level='4' entry='0x000000011ce32500' size='1448' address='0x000000011ce32390' relocation_offset='328' insts_offset='368' stub_offset='688' scopes_data_offset='728' scopes_pcs_offset='912' dependencies_offset='1376' nul_chk_table_offset='1384' oops_offset='712' metadata_offset='720' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3458462' iicount='1' stamp='0.860'/>
<print_nmethod compile_id='24' compiler='c2' level='4' stamp='0.860'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     859   24       4       foo.rida.SimpleBenchmark::benchmarkRawWrappers (38 bytes)
 total in heap  [0x000000011ce32390,0x000000011ce32938] = 1448
 relocation     [0x000000011ce324d8,0x000000011ce324f0] = 24
 main code      [0x000000011ce32500,0x000000011ce32640] = 320
 stub code      [0x000000011ce32640,0x000000011ce32658] = 24
 oops           [0x000000011ce32658,0x000000011ce32660] = 8
 metadata       [0x000000011ce32660,0x000000011ce32668] = 8
 scopes data    [0x000000011ce32668,0x000000011ce32720] = 184
 scopes pcs     [0x000000011ce32720,0x000000011ce328f0] = 464
 dependencies   [0x000000011ce328f0,0x000000011ce328f8] = 8
 nul chk table  [0x000000011ce328f8,0x000000011ce32938] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000da8} &apos;benchmarkRawWrappers&apos; &apos;([Lfoo/rida/RawWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi:rsi   = &apos;[Lfoo/rida/RawWrapper;&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011ce32500:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce32507:   push   rbp
  0x000000011ce32508:   sub    rsp,0x20
  0x000000011ce3250c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce32514:   jne    0x000000011ce32630           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@-1 (line 75)
  0x000000011ce3251a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce32520:   mov    ebp,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ce32624
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@5 (line 76)
  0x000000011ce32523:   test   ebp,ebp
  0x000000011ce32525:   jbe    0x000000011ce3260c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
  0x000000011ce3252b:   lea    r10d,[rbp-0x1]
  0x000000011ce3252f:   cmp    r10d,ebp
  0x000000011ce32532:   jae    0x000000011ce325fc
  0x000000011ce32538:   mov    r11d,DWORD PTR [rsi+0x10]    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce3253c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce32540:   mov    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce32545:   lea    r9d,[rbp-0x3]
  0x000000011ce32549:   mov    edi,0x1
  0x000000011ce3254e:   cmp    r9d,0x1
  0x000000011ce32552:   jle    0x000000011ce325d1
  0x000000011ce32558:   xor    r8d,r8d
  0x000000011ce3255b:   mov    ebx,0xfa0
  0x000000011ce32560:   mov    eax,ebp
  0x000000011ce32562:   sub    eax,edi
  0x000000011ce32564:   add    eax,0xfffffffd
  0x000000011ce32567:   cmp    r9d,edi
  0x000000011ce3256a:   cmovl  eax,r8d
  0x000000011ce3256e:   cmp    eax,0xfa0
  0x000000011ce32573:   cmova  eax,ebx
  0x000000011ce32576:   add    eax,edi
  0x000000011ce32578:   nop    DWORD PTR [rax+rax*1+0x0]    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@16 (line 76)
  0x000000011ce32580:   mov    r10d,DWORD PTR [rsi+rdi*4+0x10]
  0x000000011ce32585:   add    ecx,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
  0x000000011ce3258a:   mov    r10d,DWORD PTR [rsi+rdi*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce3258f:   mov    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce32594:   mov    r11d,DWORD PTR [rsi+rdi*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce32599:   nop    DWORD PTR [rax+0x0]
  0x000000011ce325a0:   mov    r10d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce325a5:   mov    r11d,DWORD PTR [rsi+rdi*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce325aa:   mov    r11d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
  0x000000011ce325af:   add    ecx,r13d
  0x000000011ce325b2:   add    ecx,r10d
  0x000000011ce325b5:   add    ecx,r11d                     ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@28 (line 77)
  0x000000011ce325b8:   add    edi,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@30 (line 76)
  0x000000011ce325bb:   cmp    edi,eax
  0x000000011ce325bd:   data16 xchg ax,ax
  0x000000011ce325c0:   jl     0x000000011ce32580           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x000000011ce325c2:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
  0x000000011ce325c9:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@33 (line 76)
                                                            ;   {poll}
  0x000000011ce325cc:   cmp    edi,r9d
  0x000000011ce325cf:   jl     0x000000011ce32560
  0x000000011ce325d1:   cmp    edi,ebp
  0x000000011ce325d3:   jge    0x000000011ce325eb
  0x000000011ce325d5:   data16 xchg ax,ax                   ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@16 (line 76)
  0x000000011ce325d8:   mov    r11d,DWORD PTR [rsi+rdi*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@19 (line 76)
  0x000000011ce325dd:   data16 xchg ax,ax
  0x000000011ce325e0:   add    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce32618
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@28 (line 77)
  0x000000011ce325e5:   inc    edi                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@30 (line 76)
  0x000000011ce325e7:   cmp    edi,ebp
  0x000000011ce325e9:   jl     0x000000011ce325d8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
  0x000000011ce325eb:   mov    esi,0xffffff45
  0x000000011ce325f0:   mov    DWORD PTR [rsp],ecx
  0x000000011ce325f3:   mov    DWORD PTR [rsp+0x4],edi
  0x000000011ce325f7:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce325fc:   mov    QWORD PTR [rsp],rsi
  0x000000011ce32600:   mov    esi,0xffffff76
  0x000000011ce32605:   xchg   ax,ax
  0x000000011ce32607:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3260c:   mov    esi,0xffffff45
  0x000000011ce32611:   xchg   ax,ax
  0x000000011ce32613:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@13 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32618:   mov    esi,0xfffffff6
  0x000000011ce3261d:   xchg   ax,ax
  0x000000011ce3261f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*getfield number {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkRawWrappers@25 (line 77)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32624:   mov    esi,0xfffffff6
  0x000000011ce32629:   xchg   ax,ax
  0x000000011ce3262b:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkRawWrappers@5 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce32630:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce32635:   jmp    0x000000011ce3251a
  0x000000011ce3263a:   hlt    
  0x000000011ce3263b:   hlt    
  0x000000011ce3263c:   hlt    
  0x000000011ce3263d:   hlt    
  0x000000011ce3263e:   hlt    
  0x000000011ce3263f:   hlt    
[Exception Handler]
  0x000000011ce32640:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce32645:   call   0x000000011ce3264a
  0x000000011ce3264a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3264f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce32654:   hlt    
  0x000000011ce32655:   hlt    
  0x000000011ce32656:   hlt    
  0x000000011ce32657:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='23' compile_kind='osr' compiler='c2' level='4' stamp='0.866'>
<jvms bci='13' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3458462' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='23' compile_kind='osr' compiler='c2' level='4' stamp='0.866'/>
<nmethod compile_id='25' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce32ae0' size='368' address='0x000000011ce32990' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.867'/>

Compiled method (n/a)     867   25     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)
 total in heap  [0x000000011ce32990,0x000000011ce32b00] = 368
 relocation     [0x000000011ce32ad8,0x000000011ce32ae0] = 8
 main code      [0x000000011ce32ae0,0x000000011ce32afc] = 28
 stub code      [0x000000011ce32afc,0x000000011ce32b00] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc133c0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce32ae0:   mov    ebx,DWORD PTR [rdi+0x24]
  0x000000011ce32ae3:   shl    rbx,0x3
  0x000000011ce32ae7:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce32aeb:   test   rbx,rbx
  0x000000011ce32aee:   je     0x000000011ce32af7
  0x000000011ce32af4:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce32af7:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce32afc:   hlt    
  0x000000011ce32afd:   hlt    
  0x000000011ce32afe:   hlt    
  0x000000011ce32aff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='26' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce32de0' size='384' address='0x000000011ce32c90' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.870'/>

Compiled method (n/a)     869   26     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)
 total in heap  [0x000000011ce32c90,0x000000011ce32e10] = 384
 relocation     [0x000000011ce32dd8,0x000000011ce32de0] = 8
 main code      [0x000000011ce32de0,0x000000011ce32e0a] = 42
 stub code      [0x000000011ce32e0a,0x000000011ce32e10] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc14a08} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce32de0:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce32de3:   shl    rbx,0x3
  0x000000011ce32de7:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce32dea:   shl    rbx,0x3
  0x000000011ce32dee:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce32df1:   shl    rbx,0x3
  0x000000011ce32df5:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce32df9:   test   rbx,rbx
  0x000000011ce32dfc:   je     0x000000011ce32e05
  0x000000011ce32e02:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce32e05:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce32e0a:   hlt    
  0x000000011ce32e0b:   hlt    
  0x000000011ce32e0c:   hlt    
  0x000000011ce32e0d:   hlt    
  0x000000011ce32e0e:   hlt    
  0x000000011ce32e0f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='27' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce330e0' size='376' address='0x000000011ce32f90' relocation_offset='328' insts_offset='336' stub_offset='372' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.872'/>

Compiled method (n/a)     871   27     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)
 total in heap  [0x000000011ce32f90,0x000000011ce33108] = 376
 relocation     [0x000000011ce330d8,0x000000011ce330e0] = 8
 main code      [0x000000011ce330e0,0x000000011ce33104] = 36
 stub code      [0x000000011ce33104,0x000000011ce33108] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc14b80} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x000000011ce330e0:   mov    rbx,QWORD PTR [rsp+0x8]
  0x000000011ce330e5:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce330e8:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce330eb:   shl    rbx,0x3
  0x000000011ce330ef:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce330f3:   test   rbx,rbx
  0x000000011ce330f6:   je     0x000000011ce330ff
  0x000000011ce330fc:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce330ff:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce33104:   hlt    
  0x000000011ce33105:   hlt    
  0x000000011ce33106:   hlt    
  0x000000011ce33107:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='28' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce33420' size='896' address='0x000000011ce33290' relocation_offset='328' insts_offset='400' stub_offset='892' method='java.lang.Object hashCode ()I' bytes='0' count='256' iicount='256' stamp='0.875'/>

Compiled method (n/a)     874   28     n 0       java.lang.Object::hashCode (native)
 total in heap  [0x000000011ce33290,0x000000011ce33610] = 896
 relocation     [0x000000011ce333d8,0x000000011ce33408] = 48
 main code      [0x000000011ce33420,0x000000011ce3360c] = 492
 stub code      [0x000000011ce3360c,0x000000011ce33610] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac01170} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ce33420:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce33424:   movabs r11,0x12ac00000
  0x000000011ce3342e:   add    r10,r11
  0x000000011ce33431:   cmp    rax,r10
  0x000000011ce33434:   je     0x000000011ce33440
  0x000000011ce3343a:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3343f:   nop
[Verified Entry Point]
  0x000000011ce33440:   mov    rax,QWORD PTR [rsi]
  0x000000011ce33443:   test   al,0x1
  0x000000011ce33445:   je     0x000000011ce3345c
  0x000000011ce3344b:   shr    rax,0x8
  0x000000011ce3344f:   and    rax,0x7fffffff
  0x000000011ce33455:   je     0x000000011ce3345c
  0x000000011ce3345b:   ret    
  0x000000011ce3345c:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce33463:   push   rbp
  0x000000011ce33464:   mov    rbp,rsp
  0x000000011ce33467:   sub    rsp,0x40
  0x000000011ce3346b:   nop
  0x000000011ce3346c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce33474:   je     0x000000011ce3347b
  0x000000011ce33476:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3347b:   mov    QWORD PTR [rsp],rsi
  0x000000011ce3347f:   cmp    rsi,0x0
  0x000000011ce33483:   lea    rsi,[rsp]
  0x000000011ce33487:   cmove  rsi,QWORD PTR [rsp]
  0x000000011ce3348c:   vzeroupper 
  0x000000011ce3348f:   movabs r10,0x11ce3348c              ;   {internal_word}
  0x000000011ce33499:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce334a0:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce334a7:   cmp    BYTE PTR [rip+0xffffffffefeab6ab],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce334ae:   je     0x000000011ce334e4
  0x000000011ce334b4:   push   rsi
  0x000000011ce334b5:   movabs rsi,0x12ac01170              ;   {metadata({method} {0x000000012ac01170} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ce334bf:   mov    rdi,r15
  0x000000011ce334c2:   test   spl,0xf
  0x000000011ce334c6:   je     0x000000011ce334de
  0x000000011ce334cc:   sub    rsp,0x8
  0x000000011ce334d0:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce334d5:   add    rsp,0x8
  0x000000011ce334d9:   jmp    0x000000011ce334e3
  0x000000011ce334de:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce334e3:   pop    rsi
  0x000000011ce334e4:   lea    rdi,[r15+0x2e0]
  0x000000011ce334eb:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce334f6:   call   0x000000010c4db4f0           ;   {runtime_call JVM_IHashCode}
  0x000000011ce334fb:   vzeroupper 
  0x000000011ce334fe:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce33509:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce3350f:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce33516:   ja     0x000000011ce3352a
  0x000000011ce3351c:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce33524:   je     0x000000011ce3354e
  0x000000011ce3352a:   vzeroupper 
  0x000000011ce3352d:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce33531:   mov    rdi,r15
  0x000000011ce33534:   mov    r12,rsp
  0x000000011ce33537:   sub    rsp,0x0
  0x000000011ce3353b:   and    rsp,0xfffffffffffffff0
  0x000000011ce3353f:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce33544:   mov    rsp,r12
  0x000000011ce33547:   xor    r12,r12
  0x000000011ce3354a:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3354e:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce33559:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce33561:   je     0x000000011ce335e6
  0x000000011ce33567:   cmp    BYTE PTR [rip+0xffffffffefeab5eb],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3356e:   je     0x000000011ce335aa
  0x000000011ce33574:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce33578:   movabs rsi,0x12ac01170              ;   {metadata({method} {0x000000012ac01170} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ce33582:   mov    rdi,r15
  0x000000011ce33585:   test   spl,0xf
  0x000000011ce33589:   je     0x000000011ce335a1
  0x000000011ce3358f:   sub    rsp,0x8
  0x000000011ce33593:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce33598:   add    rsp,0x8
  0x000000011ce3359c:   jmp    0x000000011ce335a6
  0x000000011ce335a1:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce335a6:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce335aa:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce335b5:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce335c0:   vzeroupper 
  0x000000011ce335c3:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce335ca:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce335d4:   leave  
  0x000000011ce335d5:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce335da:   jne    0x000000011ce335e1
  0x000000011ce335e0:   ret    
  0x000000011ce335e1:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce335e6:   vzeroupper 
  0x000000011ce335e9:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce335ed:   mov    r12,rsp
  0x000000011ce335f0:   sub    rsp,0x0
  0x000000011ce335f4:   and    rsp,0xfffffffffffffff0
  0x000000011ce335f8:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce335fd:   mov    rsp,r12
  0x000000011ce33600:   xor    r12,r12
  0x000000011ce33603:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce33607:   jmp    0x000000011ce33567
[Stub Code]
  0x000000011ce3360c:   hlt    
  0x000000011ce3360d:   hlt    
  0x000000011ce3360e:   hlt    
  0x000000011ce3360f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='29' method='java.lang.Enum ordinal ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.881' comment='tiered' hot_count='128'/>
<task_queued compile_id='30' method='java.lang.Math min (II)I' bytes='11' count='256' iicount='256' level='3' stamp='0.881' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='29' compiler='c1' level='1' entry='0x000000011ce33800' size='656' address='0x000000011ce33690' relocation_offset='328' insts_offset='368' stub_offset='512' scopes_data_offset='568' scopes_pcs_offset='584' dependencies_offset='648' metadata_offset='560' method='java.lang.Enum ordinal ()I' bytes='5' count='130' iicount='130' stamp='0.881'/>
<print_nmethod compile_id='29' compiler='c1' level='1' stamp='0.881'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     881   29       1       java.lang.Enum::ordinal (5 bytes)
 total in heap  [0x000000011ce33690,0x000000011ce33920] = 656
 relocation     [0x000000011ce337d8,0x000000011ce33800] = 40
 main code      [0x000000011ce33800,0x000000011ce33890] = 144
 stub code      [0x000000011ce33890,0x000000011ce338c0] = 48
 metadata       [0x000000011ce338c0,0x000000011ce338c8] = 8
 scopes data    [0x000000011ce338c8,0x000000011ce338d8] = 16
 scopes pcs     [0x000000011ce338d8,0x000000011ce33918] = 64
 dependencies   [0x000000011ce33918,0x000000011ce33920] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b013308} &apos;ordinal&apos; &apos;()I&apos; in &apos;java/lang/Enum&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce33800:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce33804:   movabs r11,0x12ac00000
  0x000000011ce3380e:   add    r10,r11
  0x000000011ce33811:   cmp    r10,rax
  0x000000011ce33814:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3381a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce33820:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce33827:   push   rbp
  0x000000011ce33828:   sub    rsp,0x30
  0x000000011ce3382c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce33834:   je     0x000000011ce3383b
  0x000000011ce33836:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Enum::ordinal@0 (line 124)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce3383b:   mov    eax,DWORD PTR [rsi+0xc]      ;*getfield ordinal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Enum::ordinal@1 (line 124)
  0x000000011ce3383e:   add    rsp,0x30
  0x000000011ce33842:   pop    rbp
  0x000000011ce33843:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3384a:   ja     0x000000011ce33851
  0x000000011ce33850:   ret    
  0x000000011ce33851:   movabs r10,0x11ce33843              ;   {internal_word}
  0x000000011ce3385b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce33862:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce33867:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce3386e:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce33879:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce33884:   add    rsp,0x30
  0x000000011ce33888:   pop    rbp
  0x000000011ce33889:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce3388e:   hlt    
  0x000000011ce3388f:   hlt    
[Exception Handler]
  0x000000011ce33890:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce33895:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce3389f:   and    rsp,0xfffffffffffffff0
  0x000000011ce338a3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce338a8:   hlt    
[Deopt Handler Code]
  0x000000011ce338a9:   movabs r10,0x11ce338a9              ;   {section_word}
  0x000000011ce338b3:   push   r10
  0x000000011ce338b5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce338ba:   hlt    
  0x000000011ce338bb:   hlt    
  0x000000011ce338bc:   hlt    
  0x000000011ce338bd:   hlt    
  0x000000011ce338be:   hlt    
  0x000000011ce338bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='31' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce33ae0' size='368' address='0x000000011ce33990' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.884'/>

Compiled method (n/a)     883   31     n 0       java.lang.invoke.MethodHandle::linkToStatic(LJL)L (native)
 total in heap  [0x000000011ce33990,0x000000011ce33b00] = 368
 relocation     [0x000000011ce33ad8,0x000000011ce33ae0] = 8
 main code      [0x000000011ce33ae0,0x000000011ce33afc] = 28
 stub code      [0x000000011ce33afc,0x000000011ce33b00] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc15688} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce33ae0:   mov    ebx,DWORD PTR [rcx+0x24]
  0x000000011ce33ae3:   shl    rbx,0x3
  0x000000011ce33ae7:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce33aeb:   test   rbx,rbx
  0x000000011ce33aee:   je     0x000000011ce33af7
  0x000000011ce33af4:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce33af7:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce33afc:   hlt    
  0x000000011ce33afd:   hlt    
  0x000000011ce33afe:   hlt    
  0x000000011ce33aff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='30' compiler='c1' level='3' entry='0x000000011536a120' size='880' address='0x0000000115369f90' relocation_offset='328' insts_offset='400' stub_offset='664' scopes_data_offset='720' scopes_pcs_offset='760' dependencies_offset='872' metadata_offset='712' method='java.lang.Math min (II)I' bytes='11' count='260' iicount='260' stamp='0.885'/>
<print_nmethod compile_id='30' compiler='c1' level='3' stamp='0.885'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     885   30       3       java.lang.Math::min (11 bytes)
 total in heap  [0x0000000115369f90,0x000000011536a300] = 880
 relocation     [0x000000011536a0d8,0x000000011536a108] = 48
 main code      [0x000000011536a120,0x000000011536a228] = 264
 stub code      [0x000000011536a228,0x000000011536a258] = 48
 metadata       [0x000000011536a258,0x000000011536a260] = 8
 scopes data    [0x000000011536a260,0x000000011536a288] = 40
 scopes pcs     [0x000000011536a288,0x000000011536a2f8] = 112
 dependencies   [0x000000011536a2f8,0x000000011536a300] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011536a120:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536a127:   push   rbp
  0x000000011536a128:   sub    rsp,0x30
  0x000000011536a12c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011536a134:   je     0x000000011536a13b
  0x000000011536a136:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536a13b:   movabs rax,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011536a145:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536a14b:   add    edi,0x2
  0x000000011536a14e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536a154:   and    edi,0x7fe
  0x000000011536a15a:   cmp    edi,0x0
  0x000000011536a15d:   je     0x000000011536a1c9           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@0 (line 2115)
  0x000000011536a163:   cmp    esi,edx
  0x000000011536a165:   movabs rax,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011536a16f:   movabs rdi,0xf0
  0x000000011536a179:   jg     0x000000011536a189
  0x000000011536a17f:   movabs rdi,0x100
  0x000000011536a189:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011536a18d:   lea    rbx,[rbx+0x1]
  0x000000011536a191:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011536a195:   jg     0x000000011536a1b0           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@2 (line 2115)
  0x000000011536a19b:   movabs rax,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011536a1a5:   inc    DWORD PTR [rax+0x110]
  0x000000011536a1ab:   jmp    0x000000011536a1b3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@6 (line 2115)
  0x000000011536a1b0:   mov    rsi,rdx                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@10 (line 2115)
  0x000000011536a1b3:   mov    rax,rsi
  0x000000011536a1b6:   add    rsp,0x30
  0x000000011536a1ba:   pop    rbp
  0x000000011536a1bb:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536a1c2:   ja     0x000000011536a1ea
  0x000000011536a1c8:   ret    
  0x000000011536a1c9:   movabs r10,0x12b0268e8              ;   {metadata({method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011536a1d3:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536a1d8:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536a1e0:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::min@-1 (line 2115)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536a1e5:   jmp    0x000000011536a163
  0x000000011536a1ea:   movabs r10,0x11536a1bb              ;   {internal_word}
  0x000000011536a1f4:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536a1fb:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536a200:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536a207:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536a212:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536a21d:   add    rsp,0x30
  0x000000011536a221:   pop    rbp
  0x000000011536a222:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536a227:   hlt    
[Exception Handler]
  0x000000011536a228:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536a22d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536a237:   and    rsp,0xfffffffffffffff0
  0x000000011536a23b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536a240:   hlt    
[Deopt Handler Code]
  0x000000011536a241:   movabs r10,0x11536a241              ;   {section_word}
  0x000000011536a24b:   push   r10
  0x000000011536a24d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536a252:   hlt    
  0x000000011536a253:   hlt    
  0x000000011536a254:   hlt    
  0x000000011536a255:   hlt    
  0x000000011536a256:   hlt    
  0x000000011536a257:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='32' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' level='3' stamp='0.889' comment='tiered' hot_count='256'/>
<task_queued compile_id='33' method='jdk.internal.misc.Unsafe getReferenceAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='256' iicount='256' level='3' stamp='0.890' comment='tiered' hot_count='256'/>
<task_queued compile_id='34' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='256' iicount='256' level='3' stamp='0.890' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='32' compiler='c1' level='3' entry='0x000000011536a4a0' size='1352' address='0x000000011536a310' relocation_offset='328' insts_offset='400' stub_offset='1096' scopes_data_offset='1168' scopes_pcs_offset='1232' dependencies_offset='1344' oops_offset='1144' metadata_offset='1152' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='277' iicount='277' stamp='0.891'/>
<print_nmethod compile_id='32' compiler='c1' level='3' stamp='0.891'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     890   32       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000000011536a310,0x000000011536a858] = 1352
 relocation     [0x000000011536a458,0x000000011536a4a0] = 72
 main code      [0x000000011536a4a0,0x000000011536a758] = 696
 stub code      [0x000000011536a758,0x000000011536a788] = 48
 oops           [0x000000011536a788,0x000000011536a790] = 8
 metadata       [0x000000011536a790,0x000000011536a7a0] = 16
 scopes data    [0x000000011536a7a0,0x000000011536a7e0] = 64
 scopes pcs     [0x000000011536a7e0,0x000000011536a850] = 112
 dependencies   [0x000000011536a850,0x000000011536a858] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000011536a4a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536a4a7:   push   rbp
  0x000000011536a4a8:   sub    rsp,0x70
  0x000000011536a4ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536a4b4:   je     0x000000011536a4bb
  0x000000011536a4b6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536a4bb:   movabs rcx,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a4c5:   mov    eax,DWORD PTR [rcx+0xac]
  0x000000011536a4cb:   add    eax,0x2
  0x000000011536a4ce:   mov    DWORD PTR [rcx+0xac],eax
  0x000000011536a4d4:   and    eax,0x7fe
  0x000000011536a4d9:   cmp    eax,0x0
  0x000000011536a4dc:   je     0x000000011536a6b4           ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)
  0x000000011536a4e2:   movabs rcx,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a4ec:   lea    rcx,[rcx+0x128]
  0x000000011536a4f3:   mov    rax,rsi
  0x000000011536a4f6:   test   rax,rax
  0x000000011536a4f9:   jne    0x000000011536a502
  0x000000011536a4fb:   or     QWORD PTR [rcx+0x8],0x1
  0x000000011536a500:   jmp    0x000000011536a547
  0x000000011536a502:   mov    eax,DWORD PTR [rax+0x8]
  0x000000011536a505:   movabs r10,0x12ac00000
  0x000000011536a50f:   add    rax,r10
  0x000000011536a512:   xor    rax,QWORD PTR [rcx+0x8]
  0x000000011536a516:   test   rax,0xfffffffffffffffc
  0x000000011536a51c:   je     0x000000011536a547
  0x000000011536a51e:   test   al,0x2
  0x000000011536a520:   jne    0x000000011536a547
  0x000000011536a522:   cmp    QWORD PTR [rcx+0x8],0x0
  0x000000011536a527:   je     0x000000011536a543
  0x000000011536a529:   cmp    QWORD PTR [rcx+0x8],0x1
  0x000000011536a52e:   je     0x000000011536a543
  0x000000011536a530:   xor    rax,QWORD PTR [rcx+0x8]
  0x000000011536a534:   test   rax,0xfffffffffffffffc
  0x000000011536a53a:   je     0x000000011536a547
  0x000000011536a53c:   or     QWORD PTR [rcx+0x8],0x2
  0x000000011536a541:   jmp    0x000000011536a547
  0x000000011536a543:   mov    QWORD PTR [rcx+0x8],rax
  0x000000011536a547:   movabs rcx,0x7039e0080              ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x00000007039e0080})}
  0x000000011536a551:   movabs rax,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a55b:   add    QWORD PTR [rax+0xf0],0x1
  0x000000011536a563:   movsxd rdx,edx
  0x000000011536a566:   mov    ecx,0x2
  0x000000011536a56b:   shl    rdx,cl
  0x000000011536a56e:   movabs r10,0x10
  0x000000011536a578:   add    rdx,r10
  0x000000011536a57b:   movabs rax,0x16bc15ae8              ;   {metadata(method data for {method} {0x000000012b040a68} &apos;getReferenceAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011536a585:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536a58b:   add    edi,0x2
  0x000000011536a58e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536a594:   and    edi,0x1ffffe
  0x000000011536a59a:   cmp    edi,0x0
  0x000000011536a59d:   je     0x000000011536a6d5
  0x000000011536a5a3:   mov    eax,DWORD PTR [rsi+rdx*1]
  0x000000011536a5a6:   shl    rax,0x3
  0x000000011536a5aa:   movsx  esi,BYTE PTR [r15+0x40]
  0x000000011536a5af:   cmp    esi,0x0
  0x000000011536a5b2:   jne    0x000000011536a6f6
  0x000000011536a5b8:   cmp    rax,0x0
  0x000000011536a5bc:   jne    0x000000011536a5d4
  0x000000011536a5be:   movabs rbx,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a5c8:   or     BYTE PTR [rbx+0x139],0x1
  0x000000011536a5cf:   jmp    0x000000011536a6a1
  0x000000011536a5d4:   movabs rdi,0x12ad82748              ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011536a5de:   mov    ebx,DWORD PTR [rax+0x8]
  0x000000011536a5e1:   movabs r10,0x12ac00000
  0x000000011536a5eb:   add    rbx,r10
  0x000000011536a5ee:   cmp    rdi,QWORD PTR [rbx+0x38]
  0x000000011536a5f2:   jne    0x000000011536a685
  0x000000011536a5f8:   movabs rbx,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a602:   mov    edi,DWORD PTR [rax+0x8]
  0x000000011536a605:   movabs r10,0x12ac00000
  0x000000011536a60f:   add    rdi,r10
  0x000000011536a612:   cmp    rdi,QWORD PTR [rbx+0x150]
  0x000000011536a619:   jne    0x000000011536a628
  0x000000011536a61b:   add    QWORD PTR [rbx+0x158],0x1
  0x000000011536a623:   jmp    0x000000011536a6a1
  0x000000011536a628:   cmp    rdi,QWORD PTR [rbx+0x160]
  0x000000011536a62f:   jne    0x000000011536a63e
  0x000000011536a631:   add    QWORD PTR [rbx+0x168],0x1
  0x000000011536a639:   jmp    0x000000011536a6a1
  0x000000011536a63e:   cmp    QWORD PTR [rbx+0x150],0x0
  0x000000011536a646:   jne    0x000000011536a65f
  0x000000011536a648:   mov    QWORD PTR [rbx+0x150],rdi
  0x000000011536a64f:   mov    QWORD PTR [rbx+0x158],0x1
  0x000000011536a65a:   jmp    0x000000011536a6a1
  0x000000011536a65f:   cmp    QWORD PTR [rbx+0x160],0x0
  0x000000011536a667:   jne    0x000000011536a680
  0x000000011536a669:   mov    QWORD PTR [rbx+0x160],rdi
  0x000000011536a670:   mov    QWORD PTR [rbx+0x168],0x1
  0x000000011536a67b:   jmp    0x000000011536a6a1
  0x000000011536a680:   jmp    0x000000011536a6a1
  0x000000011536a685:   movabs rbx,0x16bc15928              ;   {metadata(method data for {method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a68f:   sub    QWORD PTR [rbx+0x140],0x1
  0x000000011536a697:   jmp    0x000000011536a70e
  0x000000011536a69c:   jmp    0x000000011536a6a1           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
  0x000000011536a6a1:   add    rsp,0x70
  0x000000011536a6a5:   pop    rbp
  0x000000011536a6a6:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536a6ad:   ja     0x000000011536a717
  0x000000011536a6b3:   ret    
  0x000000011536a6b4:   movabs r10,0x12b008850              ;   {metadata({method} {0x000000012b008850} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536a6be:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536a6c3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536a6cb:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536a6d0:   jmp    0x000000011536a4e2
  0x000000011536a6d5:   movabs r10,0x12b040a68              ;   {metadata({method} {0x000000012b040a68} &apos;getReferenceAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011536a6df:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536a6e4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536a6ec:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::getReferenceAcquire@-1 (line 2153)
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536a6f1:   jmp    0x000000011536a5a3
  0x000000011536a6f6:   cmp    rax,0x0
  0x000000011536a6fa:   je     0x000000011536a5b8
  0x000000011536a700:   mov    QWORD PTR [rsp],rax
  0x000000011536a704:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x000000011536a709:   jmp    0x000000011536a5b8
  0x000000011536a70e:   mov    QWORD PTR [rsp],rax
  0x000000011536a712:   call   0x000000011c9be500           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011536a717:   movabs r10,0x11536a6a6              ;   {internal_word}
  0x000000011536a721:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536a728:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536a72d:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536a734:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536a73f:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536a74a:   add    rsp,0x70
  0x000000011536a74e:   pop    rbp
  0x000000011536a74f:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536a754:   hlt    
  0x000000011536a755:   hlt    
  0x000000011536a756:   hlt    
  0x000000011536a757:   hlt    
[Exception Handler]
  0x000000011536a758:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536a75d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536a767:   and    rsp,0xfffffffffffffff0
  0x000000011536a76b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536a770:   hlt    
[Deopt Handler Code]
  0x000000011536a771:   movabs r10,0x11536a771              ;   {section_word}
  0x000000011536a77b:   push   r10
  0x000000011536a77d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536a782:   hlt    
  0x000000011536a783:   hlt    
  0x000000011536a784:   hlt    
  0x000000011536a785:   hlt    
  0x000000011536a786:   hlt    
  0x000000011536a787:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='35' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce33e20' size='912' address='0x000000011ce33c90' relocation_offset='328' insts_offset='400' stub_offset='908' method='java.lang.System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='384' iicount='384' stamp='0.899'/>

Compiled method (n/a)     898   35     n 0       java.lang.System::arraycopy (native)
 total in heap  [0x000000011ce33c90,0x000000011ce34020] = 912
 relocation     [0x000000011ce33dd8,0x000000011ce33e10] = 56
 main code      [0x000000011ce33e20,0x000000011ce3401c] = 508
 stub code      [0x000000011ce3401c,0x000000011ce34020] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac1b9e0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000011ce33e20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce33e24:   movabs r11,0x12ac00000
  0x000000011ce33e2e:   add    r10,r11
  0x000000011ce33e31:   cmp    rax,r10
  0x000000011ce33e34:   je     0x000000011ce33e40
  0x000000011ce33e3a:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce33e3f:   nop
[Verified Entry Point]
  0x000000011ce33e40:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce33e47:   push   rbp
  0x000000011ce33e48:   mov    rbp,rsp
  0x000000011ce33e4b:   sub    rsp,0x50
  0x000000011ce33e4f:   nop
  0x000000011ce33e50:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce33e58:   je     0x000000011ce33e5f
  0x000000011ce33e5a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce33e5f:   mov    QWORD PTR [rsp],r9
  0x000000011ce33e63:   mov    r9,r8
  0x000000011ce33e66:   mov    QWORD PTR [rsp+0x18],rcx
  0x000000011ce33e6b:   cmp    rcx,0x0
  0x000000011ce33e6f:   lea    r8,[rsp+0x18]
  0x000000011ce33e74:   cmove  r8,QWORD PTR [rsp+0x18]
  0x000000011ce33e7a:   mov    rcx,rdx
  0x000000011ce33e7d:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ce33e82:   cmp    rsi,0x0
  0x000000011ce33e86:   lea    rdx,[rsp+0x8]
  0x000000011ce33e8b:   cmove  rdx,QWORD PTR [rsp+0x8]
  0x000000011ce33e91:   movabs r14,0x7ffd007e0              ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd007e0} = &apos;java/lang/System&apos;)}
  0x000000011ce33e9b:   mov    QWORD PTR [rsp+0x38],r14
  0x000000011ce33ea0:   lea    r14,[rsp+0x38]
  0x000000011ce33ea5:   mov    rsi,r14
  0x000000011ce33ea8:   vzeroupper 
  0x000000011ce33eab:   movabs r10,0x11ce33ea8              ;   {internal_word}
  0x000000011ce33eb5:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce33ebc:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce33ec3:   cmp    BYTE PTR [rip+0xffffffffefeaac8f],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce33eca:   je     0x000000011ce33f0c
  0x000000011ce33ed0:   push   rsi
  0x000000011ce33ed1:   push   rdx
  0x000000011ce33ed2:   push   rcx
  0x000000011ce33ed3:   push   r8
  0x000000011ce33ed5:   push   r9
  0x000000011ce33ed7:   movabs rsi,0x12ac1b9e0              ;   {metadata({method} {0x000000012ac1b9e0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011ce33ee1:   mov    rdi,r15
  0x000000011ce33ee4:   test   spl,0xf
  0x000000011ce33ee8:   je     0x000000011ce33f00
  0x000000011ce33eee:   sub    rsp,0x8
  0x000000011ce33ef2:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce33ef7:   add    rsp,0x8
  0x000000011ce33efb:   jmp    0x000000011ce33f05
  0x000000011ce33f00:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce33f05:   pop    r9
  0x000000011ce33f07:   pop    r8
  0x000000011ce33f09:   pop    rcx
  0x000000011ce33f0a:   pop    rdx
  0x000000011ce33f0b:   pop    rsi
  0x000000011ce33f0c:   lea    rdi,[r15+0x2e0]
  0x000000011ce33f13:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce33f1e:   call   0x000000010c4d8fa0           ;   {runtime_call JVM_ArrayCopy}
  0x000000011ce33f23:   vzeroupper 
  0x000000011ce33f26:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce33f31:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce33f37:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce33f3e:   ja     0x000000011ce33f52
  0x000000011ce33f44:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce33f4c:   je     0x000000011ce33f6e
  0x000000011ce33f52:   vzeroupper 
  0x000000011ce33f55:   mov    rdi,r15
  0x000000011ce33f58:   mov    r12,rsp
  0x000000011ce33f5b:   sub    rsp,0x0
  0x000000011ce33f5f:   and    rsp,0xfffffffffffffff0
  0x000000011ce33f63:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce33f68:   mov    rsp,r12
  0x000000011ce33f6b:   xor    r12,r12
  0x000000011ce33f6e:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce33f79:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce33f81:   je     0x000000011ce33ffe
  0x000000011ce33f87:   cmp    BYTE PTR [rip+0xffffffffefeaabcb],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce33f8e:   je     0x000000011ce33fc2
  0x000000011ce33f94:   movabs rsi,0x12ac1b9e0              ;   {metadata({method} {0x000000012ac1b9e0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011ce33f9e:   mov    rdi,r15
  0x000000011ce33fa1:   test   spl,0xf
  0x000000011ce33fa5:   je     0x000000011ce33fbd
  0x000000011ce33fab:   sub    rsp,0x8
  0x000000011ce33faf:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce33fb4:   add    rsp,0x8
  0x000000011ce33fb8:   jmp    0x000000011ce33fc2
  0x000000011ce33fbd:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce33fc2:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce33fcd:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce33fd8:   vzeroupper 
  0x000000011ce33fdb:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce33fe2:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce33fec:   leave  
  0x000000011ce33fed:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce33ff2:   jne    0x000000011ce33ff9
  0x000000011ce33ff8:   ret    
  0x000000011ce33ff9:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce33ffe:   vzeroupper 
  0x000000011ce34001:   mov    r12,rsp
  0x000000011ce34004:   sub    rsp,0x0
  0x000000011ce34008:   and    rsp,0xfffffffffffffff0
  0x000000011ce3400c:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce34011:   mov    rsp,r12
  0x000000011ce34014:   xor    r12,r12
  0x000000011ce34017:   jmp    0x000000011ce33f87
[Stub Code]
  0x000000011ce3401c:   hlt    
  0x000000011ce3401d:   hlt    
  0x000000011ce3401e:   hlt    
  0x000000011ce3401f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='33' compiler='c1' level='3' entry='0x000000011536aa20' size='864' address='0x000000011536a890' relocation_offset='328' insts_offset='400' stub_offset='712' scopes_data_offset='768' scopes_pcs_offset='792' dependencies_offset='856' metadata_offset='760' method='jdk.internal.misc.Unsafe getReferenceAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='277' iicount='277' stamp='0.905'/>
<print_nmethod compile_id='33' compiler='c1' level='3' stamp='0.905'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     905   33       3       jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)
 total in heap  [0x000000011536a890,0x000000011536abf0] = 864
 relocation     [0x000000011536a9d8,0x000000011536aa08] = 48
 main code      [0x000000011536aa20,0x000000011536ab58] = 312
 stub code      [0x000000011536ab58,0x000000011536ab88] = 48
 metadata       [0x000000011536ab88,0x000000011536ab90] = 8
 scopes data    [0x000000011536ab90,0x000000011536aba8] = 24
 scopes pcs     [0x000000011536aba8,0x000000011536abe8] = 64
 dependencies   [0x000000011536abe8,0x000000011536abf0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b040a68} &apos;getReferenceAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x000000011536aa20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536aa24:   movabs r11,0x12ac00000
  0x000000011536aa2e:   add    r10,r11
  0x000000011536aa31:   cmp    r10,rax
  0x000000011536aa34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536aa3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536aa40:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536aa47:   push   rbp
  0x000000011536aa48:   sub    rsp,0x30
  0x000000011536aa4c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536aa54:   je     0x000000011536aa5b
  0x000000011536aa56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536aa5b:   movabs rax,0x16bc15ae8              ;   {metadata(method data for {method} {0x000000012b040a68} &apos;getReferenceAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011536aa65:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536aa6b:   add    edi,0x2
  0x000000011536aa6e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536aa74:   and    edi,0x7fe
  0x000000011536aa7a:   cmp    edi,0x0
  0x000000011536aa7d:   je     0x000000011536aae8           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::getReferenceAcquire@0 (line 2153)
  0x000000011536aa83:   mov    eax,DWORD PTR [rdx+rcx*1]
  0x000000011536aa86:   shl    rax,0x3
  0x000000011536aa8a:   movabs rsi,0xc
  0x000000011536aa94:   cmp    rcx,rsi
  0x000000011536aa97:   jne    0x000000011536aad5
  0x000000011536aa9d:   cmp    rdx,0x0
  0x000000011536aaa1:   je     0x000000011536aad5
  0x000000011536aaa7:   mov    esi,DWORD PTR [rdx+0x8]
  0x000000011536aaaa:   movabs r10,0x12ac00000
  0x000000011536aab4:   add    rsi,r10
  0x000000011536aab7:   movsx  esi,BYTE PTR [rsi+0x124]
  0x000000011536aabe:   cmp    esi,0x0
  0x000000011536aac1:   je     0x000000011536aad5
  0x000000011536aac7:   movsx  esi,BYTE PTR [r15+0x40]
  0x000000011536aacc:   cmp    esi,0x0
  0x000000011536aacf:   jne    0x000000011536ab09
  0x000000011536aad5:   add    rsp,0x30
  0x000000011536aad9:   pop    rbp
  0x000000011536aada:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536aae1:   ja     0x000000011536ab1a
  0x000000011536aae7:   ret    
  0x000000011536aae8:   movabs r10,0x12b040a68              ;   {metadata({method} {0x000000012b040a68} &apos;getReferenceAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011536aaf2:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536aaf7:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536aaff:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::getReferenceAcquire@-1 (line 2153)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536ab04:   jmp    0x000000011536aa83
  0x000000011536ab09:   cmp    rax,0x0
  0x000000011536ab0d:   je     0x000000011536aad5
  0x000000011536ab0f:   mov    QWORD PTR [rsp],rax
  0x000000011536ab13:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x000000011536ab18:   jmp    0x000000011536aad5
  0x000000011536ab1a:   movabs r10,0x11536aada              ;   {internal_word}
  0x000000011536ab24:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536ab2b:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536ab30:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536ab37:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536ab42:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536ab4d:   add    rsp,0x30
  0x000000011536ab51:   pop    rbp
  0x000000011536ab52:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536ab57:   hlt    
[Exception Handler]
  0x000000011536ab58:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536ab5d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536ab67:   and    rsp,0xfffffffffffffff0
  0x000000011536ab6b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536ab70:   hlt    
[Deopt Handler Code]
  0x000000011536ab71:   movabs r10,0x11536ab71              ;   {section_word}
  0x000000011536ab7b:   push   r10
  0x000000011536ab7d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536ab82:   hlt    
  0x000000011536ab83:   hlt    
  0x000000011536ab84:   hlt    
  0x000000011536ab85:   hlt    
  0x000000011536ab86:   hlt    
  0x000000011536ab87:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='36' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce341e0' size='368' address='0x000000011ce34090' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.909'/>

Compiled method (n/a)     909   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)
 total in heap  [0x000000011ce34090,0x000000011ce34200] = 368
 relocation     [0x000000011ce341d8,0x000000011ce341e0] = 8
 main code      [0x000000011ce341e0,0x000000011ce341fc] = 28
 stub code      [0x000000011ce341fc,0x000000011ce34200] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc16780} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce341e0:   mov    ebx,DWORD PTR [rcx+0x24]
  0x000000011ce341e3:   shl    rbx,0x3
  0x000000011ce341e7:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce341eb:   test   rbx,rbx
  0x000000011ce341ee:   je     0x000000011ce341f7
  0x000000011ce341f4:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce341f7:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce341fc:   hlt    
  0x000000011ce341fd:   hlt    
  0x000000011ce341fe:   hlt    
  0x000000011ce341ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='34' compiler='c1' level='3' entry='0x000000011536ada0' size='744' address='0x000000011536ac10' relocation_offset='328' insts_offset='400' stub_offset='592' scopes_data_offset='648' scopes_pcs_offset='672' dependencies_offset='736' metadata_offset='640' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='282' iicount='282' stamp='0.911'/>
<print_nmethod compile_id='34' compiler='c1' level='3' stamp='0.911'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     910   34       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x000000011536ac10,0x000000011536aef8] = 744
 relocation     [0x000000011536ad58,0x000000011536ad88] = 48
 main code      [0x000000011536ada0,0x000000011536ae60] = 192
 stub code      [0x000000011536ae60,0x000000011536ae90] = 48
 metadata       [0x000000011536ae90,0x000000011536ae98] = 8
 scopes data    [0x000000011536ae98,0x000000011536aeb0] = 24
 scopes pcs     [0x000000011536aeb0,0x000000011536aef0] = 64
 dependencies   [0x000000011536aef0,0x000000011536aef8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b0088a8} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011536ada0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536ada7:   push   rbp
  0x000000011536ada8:   sub    rsp,0x30
  0x000000011536adac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536adb4:   je     0x000000011536adbb
  0x000000011536adb6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536adbb:   movabs rax,0x16bc167e8              ;   {metadata(method data for {method} {0x000000012b0088a8} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536adc5:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536adcb:   add    edi,0x2
  0x000000011536adce:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536add4:   and    edi,0x7fe
  0x000000011536adda:   cmp    edi,0x0
  0x000000011536addd:   je     0x000000011536ae04           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)
  0x000000011536ade3:   mov    rax,rsi
  0x000000011536ade6:   shr    eax,0x10
  0x000000011536ade9:   xor    rax,rsi
  0x000000011536adec:   and    eax,0x7fffffff
  0x000000011536adf1:   add    rsp,0x30
  0x000000011536adf5:   pop    rbp
  0x000000011536adf6:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536adfd:   ja     0x000000011536ae22
  0x000000011536ae03:   ret    
  0x000000011536ae04:   movabs r10,0x12b0088a8              ;   {metadata({method} {0x000000012b0088a8} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011536ae0e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536ae13:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536ae1b:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536ae20:   jmp    0x000000011536ade3
  0x000000011536ae22:   movabs r10,0x11536adf6              ;   {internal_word}
  0x000000011536ae2c:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536ae33:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536ae38:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536ae3f:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536ae4a:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536ae55:   add    rsp,0x30
  0x000000011536ae59:   pop    rbp
  0x000000011536ae5a:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536ae5f:   hlt    
[Exception Handler]
  0x000000011536ae60:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536ae65:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536ae6f:   and    rsp,0xfffffffffffffff0
  0x000000011536ae73:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536ae78:   hlt    
[Deopt Handler Code]
  0x000000011536ae79:   movabs r10,0x11536ae79              ;   {section_word}
  0x000000011536ae83:   push   r10
  0x000000011536ae85:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536ae8a:   hlt    
  0x000000011536ae8b:   hlt    
  0x000000011536ae8c:   hlt    
  0x000000011536ae8d:   hlt    
  0x000000011536ae8e:   hlt    
  0x000000011536ae8f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='37' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce34520' size='872' address='0x000000011ce34390' relocation_offset='328' insts_offset='400' method='java.lang.Class isPrimitive ()Z' bytes='0' count='256' iicount='256' stamp='0.914'/>

Compiled method (n/a)     913   37     n 0       java.lang.Class::isPrimitive (native)
 total in heap  [0x000000011ce34390,0x000000011ce346f8] = 872
 relocation     [0x000000011ce344d8,0x000000011ce34508] = 48
 main code      [0x000000011ce34520,0x000000011ce346f8] = 472

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac082c0} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ce34520:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce34524:   movabs r11,0x12ac00000
  0x000000011ce3452e:   add    r10,r11
  0x000000011ce34531:   cmp    rax,r10
  0x000000011ce34534:   je     0x000000011ce34540
  0x000000011ce3453a:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3453f:   nop
[Verified Entry Point]
  0x000000011ce34540:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce34547:   push   rbp
  0x000000011ce34548:   mov    rbp,rsp
  0x000000011ce3454b:   sub    rsp,0x40
  0x000000011ce3454f:   nop
  0x000000011ce34550:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce34558:   je     0x000000011ce3455f
  0x000000011ce3455a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3455f:   mov    QWORD PTR [rsp],rsi
  0x000000011ce34563:   cmp    rsi,0x0
  0x000000011ce34567:   lea    rsi,[rsp]
  0x000000011ce3456b:   cmove  rsi,QWORD PTR [rsp]
  0x000000011ce34570:   vzeroupper 
  0x000000011ce34573:   movabs r10,0x11ce34570              ;   {internal_word}
  0x000000011ce3457d:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce34584:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce3458b:   cmp    BYTE PTR [rip+0xffffffffefeaa5c7],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce34592:   je     0x000000011ce345c8
  0x000000011ce34598:   push   rsi
  0x000000011ce34599:   movabs rsi,0x12ac082c0              ;   {metadata({method} {0x000000012ac082c0} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000000011ce345a3:   mov    rdi,r15
  0x000000011ce345a6:   test   spl,0xf
  0x000000011ce345aa:   je     0x000000011ce345c2
  0x000000011ce345b0:   sub    rsp,0x8
  0x000000011ce345b4:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce345b9:   add    rsp,0x8
  0x000000011ce345bd:   jmp    0x000000011ce345c7
  0x000000011ce345c2:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce345c7:   pop    rsi
  0x000000011ce345c8:   lea    rdi,[r15+0x2e0]
  0x000000011ce345cf:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce345da:   call   0x000000010c4e0df0           ;   {runtime_call JVM_IsPrimitiveClass}
  0x000000011ce345df:   vzeroupper 
  0x000000011ce345e2:   and    eax,0xff
  0x000000011ce345e7:   setne  al
  0x000000011ce345ea:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce345f5:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce345fb:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce34602:   ja     0x000000011ce34616
  0x000000011ce34608:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce34610:   je     0x000000011ce3463a
  0x000000011ce34616:   vzeroupper 
  0x000000011ce34619:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3461d:   mov    rdi,r15
  0x000000011ce34620:   mov    r12,rsp
  0x000000011ce34623:   sub    rsp,0x0
  0x000000011ce34627:   and    rsp,0xfffffffffffffff0
  0x000000011ce3462b:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce34630:   mov    rsp,r12
  0x000000011ce34633:   xor    r12,r12
  0x000000011ce34636:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3463a:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce34645:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce3464d:   je     0x000000011ce346d2
  0x000000011ce34653:   cmp    BYTE PTR [rip+0xffffffffefeaa4ff],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3465a:   je     0x000000011ce34696
  0x000000011ce34660:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce34664:   movabs rsi,0x12ac082c0              ;   {metadata({method} {0x000000012ac082c0} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000000011ce3466e:   mov    rdi,r15
  0x000000011ce34671:   test   spl,0xf
  0x000000011ce34675:   je     0x000000011ce3468d
  0x000000011ce3467b:   sub    rsp,0x8
  0x000000011ce3467f:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce34684:   add    rsp,0x8
  0x000000011ce34688:   jmp    0x000000011ce34692
  0x000000011ce3468d:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce34692:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce34696:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce346a1:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce346ac:   vzeroupper 
  0x000000011ce346af:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce346b6:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce346c0:   leave  
  0x000000011ce346c1:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce346c6:   jne    0x000000011ce346cd
  0x000000011ce346cc:   ret    
  0x000000011ce346cd:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce346d2:   vzeroupper 
  0x000000011ce346d5:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce346d9:   mov    r12,rsp
  0x000000011ce346dc:   sub    rsp,0x0
  0x000000011ce346e0:   and    rsp,0xfffffffffffffff0
  0x000000011ce346e4:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce346e9:   mov    rsp,r12
  0x000000011ce346ec:   xor    r12,r12
  0x000000011ce346ef:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce346f3:   jmp    0x000000011ce34653
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='38' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce34860' size='368' address='0x000000011ce34710' relocation_offset='328' insts_offset='336' stub_offset='365' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.919'/>

Compiled method (n/a)     919   38     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)
 total in heap  [0x000000011ce34710,0x000000011ce34880] = 368
 relocation     [0x000000011ce34858,0x000000011ce34860] = 8
 main code      [0x000000011ce34860,0x000000011ce3487d] = 29
 stub code      [0x000000011ce3487d,0x000000011ce34880] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc16c48} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce34860:   mov    ebx,DWORD PTR [r8+0x24]
  0x000000011ce34864:   shl    rbx,0x3
  0x000000011ce34868:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3486c:   test   rbx,rbx
  0x000000011ce3486f:   je     0x000000011ce34878
  0x000000011ce34875:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce34878:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3487d:   hlt    
  0x000000011ce3487e:   hlt    
  0x000000011ce3487f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='39' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='384' iicount='384' level='3' stamp='0.921' comment='tiered' hot_count='384'/>
<nmethod compile_id='40' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce34b60' size='384' address='0x000000011ce34a10' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.921'/>

Compiled method (n/a)     921   40     n 0       java.lang.invoke.MethodHandle::invokeBasic(LJ)L (native)
 total in heap  [0x000000011ce34a10,0x000000011ce34b90] = 384
 relocation     [0x000000011ce34b58,0x000000011ce34b60] = 8
 main code      [0x000000011ce34b60,0x000000011ce34b8a] = 42
 stub code      [0x000000011ce34b8a,0x000000011ce34b90] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc17330} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x0]  (sp of caller)
  0x000000011ce34b60:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce34b63:   shl    rbx,0x3
  0x000000011ce34b67:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce34b6a:   shl    rbx,0x3
  0x000000011ce34b6e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce34b71:   shl    rbx,0x3
  0x000000011ce34b75:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce34b79:   test   rbx,rbx
  0x000000011ce34b7c:   je     0x000000011ce34b85
  0x000000011ce34b82:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce34b85:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce34b8a:   hlt    
  0x000000011ce34b8b:   hlt    
  0x000000011ce34b8c:   hlt    
  0x000000011ce34b8d:   hlt    
  0x000000011ce34b8e:   hlt    
  0x000000011ce34b8f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='39' compiler='c1' level='3' entry='0x000000011536b0a0' size='1152' address='0x000000011536af10' relocation_offset='328' insts_offset='400' stub_offset='832' scopes_data_offset='904' scopes_pcs_offset='968' dependencies_offset='1144' metadata_offset='896' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='399' iicount='399' stamp='0.923'/>
<print_nmethod compile_id='39' compiler='c1' level='3' stamp='0.923'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     922   39       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x000000011536af10,0x000000011536b390] = 1152
 relocation     [0x000000011536b058,0x000000011536b0a0] = 72
 main code      [0x000000011536b0a0,0x000000011536b250] = 432
 stub code      [0x000000011536b250,0x000000011536b290] = 64
 metadata       [0x000000011536b290,0x000000011536b298] = 8
 scopes data    [0x000000011536b298,0x000000011536b2d8] = 64
 scopes pcs     [0x000000011536b2d8,0x000000011536b388] = 176
 dependencies   [0x000000011536b388,0x000000011536b390] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ac57b20} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011536b0a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536b0a7:   push   rbp
  0x000000011536b0a8:   sub    rsp,0x30
  0x000000011536b0ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536b0b4:   je     0x000000011536b0bb
  0x000000011536b0b6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536b0bb:   movabs rax,0x16bc17398              ;   {metadata(method data for {method} {0x000000012ac57b20} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011536b0c5:   mov    edx,DWORD PTR [rax+0xac]
  0x000000011536b0cb:   add    edx,0x2
  0x000000011536b0ce:   mov    DWORD PTR [rax+0xac],edx
  0x000000011536b0d4:   and    edx,0x7fe
  0x000000011536b0da:   cmp    edx,0x0
  0x000000011536b0dd:   je     0x000000011536b1c6           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@0 (line 232)
  0x000000011536b0e3:   cmp    rsi,0x0
  0x000000011536b0e7:   movabs rax,0x16bc17398              ;   {metadata(method data for {method} {0x000000012ac57b20} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011536b0f1:   movabs rdx,0x100
  0x000000011536b0fb:   je     0x000000011536b10b
  0x000000011536b101:   movabs rdx,0xf0
  0x000000011536b10b:   mov    rdi,QWORD PTR [rax+rdx*1]
  0x000000011536b10f:   lea    rdi,[rdi+0x1]
  0x000000011536b113:   mov    QWORD PTR [rax+rdx*1],rdi
  0x000000011536b117:   je     0x000000011536b133           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 232)
  0x000000011536b11d:   mov    rax,rsi
  0x000000011536b120:   add    rsp,0x30
  0x000000011536b124:   pop    rbp
  0x000000011536b125:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536b12c:   ja     0x000000011536b1e7
  0x000000011536b132:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@13 (line 234)
  0x000000011536b133:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011536b138:   jmp    0x000000011536b20c           ;   {no_reloc}
  0x000000011536b13d:   add    BYTE PTR [rax],al
  0x000000011536b13f:   add    BYTE PTR [rax],al
  0x000000011536b141:   add    BYTE PTR [rcx-0x75],cl
  0x000000011536b144:   xchg   eax,edi
  0x000000011536b146:   add    BYTE PTR [rax],al
  0x000000011536b148:   add    BYTE PTR [rax-0x73],cl
  0x000000011536b14b:   js     0x000000011536b17d
  0x000000011536b14d:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011536b154:   ja     0x000000011536b216
  0x000000011536b15a:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011536b161:   mov    QWORD PTR [rax],0x1
  0x000000011536b168:   mov    rcx,rdx
  0x000000011536b16b:   movabs r10,0x12ac00000
  0x000000011536b175:   sub    rcx,r10
  0x000000011536b178:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011536b17b:   xor    rcx,rcx
  0x000000011536b17e:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011536b181:   xor    rcx,rcx
  0x000000011536b184:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011536b188:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011536b18c:   mov    QWORD PTR [rax+0x20],rcx
  0x000000011536b190:   mov    QWORD PTR [rax+0x28],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 233)
  0x000000011536b194:   mov    rsi,rax
  0x000000011536b197:   movabs rdi,0x16bc17398              ;   {metadata(method data for {method} {0x000000012ac57b20} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011536b1a1:   add    QWORD PTR [rdi+0x110],0x1
  0x000000011536b1a9:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 233)
  0x000000011536b1ac:   mov    QWORD PTR [rsp+0x20],rax
  0x000000011536b1b1:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536b1b7:   call   0x000000011c900600           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 233)
                                                            ;   {optimized virtual_call}
  0x000000011536b1bc:   mov    rax,QWORD PTR [rsp+0x20]
  0x000000011536b1c1:   jmp    0x000000011536b240
  0x000000011536b1c6:   movabs r10,0x12ac57b20              ;   {metadata({method} {0x000000012ac57b20} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011536b1d0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536b1d5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536b1dd:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 232)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536b1e2:   jmp    0x000000011536b0e3
  0x000000011536b1e7:   movabs r10,0x11536b125              ;   {internal_word}
  0x000000011536b1f1:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536b1f8:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536b1fd:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011536b207:   mov    eax,0xa050f00
  0x000000011536b20c:   call   0x000000011c9c0580           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 233)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011536b211:   jmp    0x000000011536b138
  0x000000011536b216:   mov    rdx,rdx
  0x000000011536b219:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 233)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536b21e:   jmp    0x000000011536b194
  0x000000011536b223:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536b22a:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536b235:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536b240:   add    rsp,0x30
  0x000000011536b244:   pop    rbp
  0x000000011536b245:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536b24a:   hlt    
  0x000000011536b24b:   hlt    
  0x000000011536b24c:   hlt    
  0x000000011536b24d:   hlt    
  0x000000011536b24e:   hlt    
  0x000000011536b24f:   hlt    
[Exception Handler]
  0x000000011536b250:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536b255:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536b25f:   and    rsp,0xfffffffffffffff0
  0x000000011536b263:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536b268:   hlt    
[Deopt Handler Code]
  0x000000011536b269:   movabs r10,0x11536b269              ;   {section_word}
  0x000000011536b273:   push   r10
  0x000000011536b275:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536b27a:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536b284:   jmp    0x000000011536b284           ;   {runtime_call}
  0x000000011536b289:   hlt    
  0x000000011536b28a:   hlt    
  0x000000011536b28b:   hlt    
  0x000000011536b28c:   hlt    
  0x000000011536b28d:   hlt    
  0x000000011536b28e:   hlt    
  0x000000011536b28f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='41' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce34e60' size='368' address='0x000000011ce34d10' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.928'/>

Compiled method (n/a)     928   41     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLJL)L (native)
 total in heap  [0x000000011ce34d10,0x000000011ce34e80] = 368
 relocation     [0x000000011ce34e58,0x000000011ce34e60] = 8
 main code      [0x000000011ce34e60,0x000000011ce34e80] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc176c8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = long
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce34e60:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce34e63:   mov    ebx,DWORD PTR [r8+0x24]
  0x000000011ce34e67:   shl    rbx,0x3
  0x000000011ce34e6b:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce34e6f:   test   rbx,rbx
  0x000000011ce34e72:   je     0x000000011ce34e7b
  0x000000011ce34e78:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce34e7b:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='42' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.930' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='42' compiler='c1' level='1' entry='0x000000011ce35180' size='664' address='0x000000011ce35010' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='130' iicount='130' stamp='0.930'/>
<print_nmethod compile_id='42' compiler='c1' level='1' stamp='0.930'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     930   42       1       java.lang.invoke.MethodType::returnType (5 bytes)
 total in heap  [0x000000011ce35010,0x000000011ce352a8] = 664
 relocation     [0x000000011ce35158,0x000000011ce35180] = 40
 main code      [0x000000011ce35180,0x000000011ce35218] = 152
 stub code      [0x000000011ce35218,0x000000011ce35248] = 48
 metadata       [0x000000011ce35248,0x000000011ce35250] = 8
 scopes data    [0x000000011ce35250,0x000000011ce35260] = 16
 scopes pcs     [0x000000011ce35260,0x000000011ce352a0] = 64
 dependencies   [0x000000011ce352a0,0x000000011ce352a8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b00e8a8} &apos;returnType&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce35180:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce35184:   movabs r11,0x12ac00000
  0x000000011ce3518e:   add    r10,r11
  0x000000011ce35191:   cmp    r10,rax
  0x000000011ce35194:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3519a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce351a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce351a7:   push   rbp
  0x000000011ce351a8:   sub    rsp,0x30
  0x000000011ce351ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce351b4:   je     0x000000011ce351bb
  0x000000011ce351b6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::returnType@0 (line 838)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce351bb:   mov    eax,DWORD PTR [rsi+0xc]
  0x000000011ce351be:   shl    rax,0x3                      ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::returnType@1 (line 838)
  0x000000011ce351c2:   add    rsp,0x30
  0x000000011ce351c6:   pop    rbp
  0x000000011ce351c7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce351ce:   ja     0x000000011ce351d5
  0x000000011ce351d4:   ret    
  0x000000011ce351d5:   movabs r10,0x11ce351c7              ;   {internal_word}
  0x000000011ce351df:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce351e6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce351eb:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce351f2:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce351fd:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce35208:   add    rsp,0x30
  0x000000011ce3520c:   pop    rbp
  0x000000011ce3520d:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce35212:   hlt    
  0x000000011ce35213:   hlt    
  0x000000011ce35214:   hlt    
  0x000000011ce35215:   hlt    
  0x000000011ce35216:   hlt    
  0x000000011ce35217:   hlt    
[Exception Handler]
  0x000000011ce35218:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3521d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce35227:   and    rsp,0xfffffffffffffff0
  0x000000011ce3522b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce35230:   hlt    
[Deopt Handler Code]
  0x000000011ce35231:   movabs r10,0x11ce35231              ;   {section_word}
  0x000000011ce3523b:   push   r10
  0x000000011ce3523d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce35242:   hlt    
  0x000000011ce35243:   hlt    
  0x000000011ce35244:   hlt    
  0x000000011ce35245:   hlt    
  0x000000011ce35246:   hlt    
  0x000000011ce35247:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='43' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='256' iicount='256' level='3' stamp='0.933' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='43' compiler='c1' level='3' entry='0x000000011536b5a0' size='896' address='0x000000011536b410' relocation_offset='328' insts_offset='400' stub_offset='680' scopes_data_offset='736' scopes_pcs_offset='776' dependencies_offset='888' metadata_offset='728' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='262' iicount='262' stamp='0.933'/>
<print_nmethod compile_id='43' compiler='c1' level='3' stamp='0.933'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     933   43       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x000000011536b410,0x000000011536b790] = 896
 relocation     [0x000000011536b558,0x000000011536b588] = 48
 main code      [0x000000011536b5a0,0x000000011536b6b8] = 280
 stub code      [0x000000011536b6b8,0x000000011536b6e8] = 48
 metadata       [0x000000011536b6e8,0x000000011536b6f0] = 8
 scopes data    [0x000000011536b6f0,0x000000011536b718] = 40
 scopes pcs     [0x000000011536b718,0x000000011536b788] = 112
 dependencies   [0x000000011536b788,0x000000011536b790] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ac25350} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011536b5a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536b5a7:   push   rbp
  0x000000011536b5a8:   sub    rsp,0x30
  0x000000011536b5ac:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011536b5b4:   je     0x000000011536b5bb
  0x000000011536b5b6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536b5bb:   movabs rax,0x16bc18840              ;   {metadata(method data for {method} {0x000000012ac25350} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536b5c5:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536b5cb:   add    edi,0x2
  0x000000011536b5ce:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536b5d4:   and    edi,0x7fe
  0x000000011536b5da:   cmp    edi,0x0
  0x000000011536b5dd:   je     0x000000011536b654           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@0 (line 51)
  0x000000011536b5e3:   shr    esi,0x8
  0x000000011536b5e6:   cmp    esi,0x0
  0x000000011536b5e9:   movabs rax,0x16bc18840              ;   {metadata(method data for {method} {0x000000012ac25350} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536b5f3:   movabs rsi,0xf0
  0x000000011536b5fd:   jne    0x000000011536b60d
  0x000000011536b603:   movabs rsi,0x100
  0x000000011536b60d:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011536b611:   lea    rdi,[rdi+0x1]
  0x000000011536b615:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011536b619:   jne    0x000000011536b639           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@4 (line 51)
  0x000000011536b61f:   movabs rax,0x16bc18840              ;   {metadata(method data for {method} {0x000000012ac25350} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536b629:   inc    DWORD PTR [rax+0x110]
  0x000000011536b62f:   mov    eax,0x1
  0x000000011536b634:   jmp    0x000000011536b63e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@8 (line 51)
  0x000000011536b639:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@12 (line 51)
  0x000000011536b63e:   and    eax,0x1
  0x000000011536b641:   add    rsp,0x30
  0x000000011536b645:   pop    rbp
  0x000000011536b646:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536b64d:   ja     0x000000011536b675
  0x000000011536b653:   ret    
  0x000000011536b654:   movabs r10,0x12ac25350              ;   {metadata({method} {0x000000012ac25350} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536b65e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536b663:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536b66b:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::canEncode@-1 (line 51)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536b670:   jmp    0x000000011536b5e3
  0x000000011536b675:   movabs r10,0x11536b646              ;   {internal_word}
  0x000000011536b67f:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536b686:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536b68b:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536b692:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536b69d:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536b6a8:   add    rsp,0x30
  0x000000011536b6ac:   pop    rbp
  0x000000011536b6ad:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536b6b2:   hlt    
  0x000000011536b6b3:   hlt    
  0x000000011536b6b4:   hlt    
  0x000000011536b6b5:   hlt    
  0x000000011536b6b6:   hlt    
  0x000000011536b6b7:   hlt    
[Exception Handler]
  0x000000011536b6b8:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536b6bd:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536b6c7:   and    rsp,0xfffffffffffffff0
  0x000000011536b6cb:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536b6d0:   hlt    
[Deopt Handler Code]
  0x000000011536b6d1:   movabs r10,0x11536b6d1              ;   {section_word}
  0x000000011536b6db:   push   r10
  0x000000011536b6dd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536b6e2:   hlt    
  0x000000011536b6e3:   hlt    
  0x000000011536b6e4:   hlt    
  0x000000011536b6e5:   hlt    
  0x000000011536b6e6:   hlt    
  0x000000011536b6e7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='44' method='java.lang.String hashCode ()I' bytes='60' count='384' iicount='384' level='3' stamp='0.937' comment='tiered' hot_count='384'/>
<writer thread='23555'/>
<nmethod compile_id='44' compiler='c1' level='3' entry='0x000000011536b9c0' size='1936' address='0x000000011536b810' relocation_offset='328' insts_offset='432' stub_offset='1216' scopes_data_offset='1312' scopes_pcs_offset='1496' dependencies_offset='1928' metadata_offset='1296' method='java.lang.String hashCode ()I' bytes='60' count='389' iicount='389' stamp='0.937'/>
<print_nmethod compile_id='44' compiler='c1' level='3' stamp='0.937'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     937   44       3       java.lang.String::hashCode (60 bytes)
 total in heap  [0x000000011536b810,0x000000011536bfa0] = 1936
 relocation     [0x000000011536b958,0x000000011536b9b8] = 96
 main code      [0x000000011536b9c0,0x000000011536bcd0] = 784
 stub code      [0x000000011536bcd0,0x000000011536bd20] = 80
 metadata       [0x000000011536bd20,0x000000011536bd30] = 16
 scopes data    [0x000000011536bd30,0x000000011536bde8] = 184
 scopes pcs     [0x000000011536bde8,0x000000011536bf98] = 432
 dependencies   [0x000000011536bf98,0x000000011536bfa0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011536b9c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536b9c4:   movabs r11,0x12ac00000
  0x000000011536b9ce:   add    r10,r11
  0x000000011536b9d1:   cmp    r10,rax
  0x000000011536b9d4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536b9da:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536b9e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536b9e7:   push   rbp
  0x000000011536b9e8:   sub    rsp,0x40
  0x000000011536b9ec:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536b9f4:   je     0x000000011536b9fb
  0x000000011536b9f6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536b9fb:   mov    QWORD PTR [rsp+0x28],rsi
  0x000000011536ba00:   movabs rdi,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536ba0a:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536ba10:   add    ebx,0x2
  0x000000011536ba13:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536ba19:   and    ebx,0x7fe
  0x000000011536ba1f:   cmp    ebx,0x0
  0x000000011536ba22:   je     0x000000011536bc4a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@0 (line 2353)
  0x000000011536ba28:   mov    edi,DWORD PTR [rsi+0xc]      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@1 (line 2353)
  0x000000011536ba2b:   cmp    edi,0x0
  0x000000011536ba2e:   movabs rbx,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536ba38:   movabs rax,0xf0
  0x000000011536ba42:   jne    0x000000011536ba52
  0x000000011536ba48:   movabs rax,0x100
  0x000000011536ba52:   mov    rdx,QWORD PTR [rbx+rax*1]
  0x000000011536ba56:   lea    rdx,[rdx+0x1]
  0x000000011536ba5a:   mov    QWORD PTR [rbx+rax*1],rdx
  0x000000011536ba5e:   jne    0x000000011536bc34           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@6 (line 2354)
  0x000000011536ba64:   movsx  ebx,BYTE PTR [rsi+0x11]      ;*getfield hashIsZero {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@10 (line 2354)
  0x000000011536ba68:   cmp    ebx,0x0
  0x000000011536ba6b:   movabs rbx,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536ba75:   movabs rax,0x110
  0x000000011536ba7f:   jne    0x000000011536ba8f
  0x000000011536ba85:   movabs rax,0x120
  0x000000011536ba8f:   mov    rdx,QWORD PTR [rbx+rax*1]
  0x000000011536ba93:   lea    rdx,[rdx+0x1]
  0x000000011536ba97:   mov    QWORD PTR [rbx+rax*1],rdx
  0x000000011536ba9b:   jne    0x000000011536bc34           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@13 (line 2354)
  0x000000011536baa1:   mov    rdi,rsi
  0x000000011536baa4:   movabs rbx,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536baae:   add    QWORD PTR [rbx+0x130],0x1
  0x000000011536bab6:   movabs rdi,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bac0:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536bac6:   add    ebx,0x2
  0x000000011536bac9:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536bacf:   and    ebx,0x1ffffe
  0x000000011536bad5:   cmp    ebx,0x0
  0x000000011536bad8:   je     0x000000011536bc6b
  0x000000011536bade:   movabs rdi,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bae8:   inc    DWORD PTR [rdi+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
  0x000000011536baee:   movsx  edi,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
  0x000000011536baf2:   cmp    edi,0x0
  0x000000011536baf5:   movabs rdi,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536baff:   movabs rbx,0x110
  0x000000011536bb09:   jne    0x000000011536bb19
  0x000000011536bb0f:   movabs rbx,0x120
  0x000000011536bb19:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536bb1d:   lea    rax,[rax+0x1]
  0x000000011536bb21:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536bb25:   jne    0x000000011536bb45           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
  0x000000011536bb2b:   movabs rdi,0x16bc0fc18              ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bb35:   inc    DWORD PTR [rdi+0x130]
  0x000000011536bb3b:   mov    edi,0x1
  0x000000011536bb40:   jmp    0x000000011536bb4a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
  0x000000011536bb45:   mov    edi,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
  0x000000011536bb4a:   and    edi,0x1
  0x000000011536bb4d:   cmp    edi,0x0
  0x000000011536bb50:   movabs rdi,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bb5a:   movabs rbx,0x168
  0x000000011536bb64:   je     0x000000011536bb74
  0x000000011536bb6a:   movabs rbx,0x178
  0x000000011536bb74:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536bb78:   lea    rax,[rax+0x1]
  0x000000011536bb7c:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536bb80:   je     0x000000011536bbc1           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@20 (line 2355)
  0x000000011536bb86:   mov    edi,DWORD PTR [rsi+0x14]
  0x000000011536bb89:   shl    rdi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@24 (line 2355)
  0x000000011536bb8d:   movabs rbx,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bb97:   add    QWORD PTR [rbx+0x188],0x1
  0x000000011536bb9f:   mov    rsi,rdi                      ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@27 (line 2355)
  0x000000011536bba2:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011536bba7:   call   0x000000011c900c00           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@27 (line 2355)
                                                            ;   {static_call}
  0x000000011536bbac:   movabs rsi,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bbb6:   inc    DWORD PTR [rsi+0x198]
  0x000000011536bbbc:   jmp    0x000000011536bbd4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@30 (line 2355)
  0x000000011536bbc1:   mov    edi,DWORD PTR [rsi+0x14]
  0x000000011536bbc4:   shl    rdi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@34 (line 2356)
  0x000000011536bbc8:   mov    rsi,rdi                      ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@37 (line 2356)
  0x000000011536bbcb:   nop    DWORD PTR [rax+0x0]
  0x000000011536bbcf:   call   0x000000011c900c00           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@37 (line 2356)
                                                            ;   {static_call}
  0x000000011536bbd4:   cmp    eax,0x0
  0x000000011536bbd7:   movabs rsi,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bbe1:   movabs rdi,0x1c0
  0x000000011536bbeb:   jne    0x000000011536bbfb
  0x000000011536bbf1:   movabs rdi,0x1d0
  0x000000011536bbfb:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011536bbff:   lea    rbx,[rbx+0x1]
  0x000000011536bc03:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011536bc07:   mov    rsi,QWORD PTR [rsp+0x28]
  0x000000011536bc0c:   jne    0x000000011536bc2e           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@42 (line 2357)
  0x000000011536bc12:   mov    BYTE PTR [rsi+0x11],0x1      ;*putfield hashIsZero {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@47 (line 2358)
  0x000000011536bc16:   movabs rsi,0x16bc1a0f0              ;   {metadata(method data for {method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bc20:   inc    DWORD PTR [rsi+0x1e0]
  0x000000011536bc26:   mov    rdi,rax
  0x000000011536bc29:   jmp    0x000000011536bc34           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@50 (line 2358)
  0x000000011536bc2e:   mov    DWORD PTR [rsi+0xc],eax      ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@55 (line 2360)
  0x000000011536bc31:   mov    rdi,rax                      ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@58 (line 2363)
  0x000000011536bc34:   mov    rax,rdi
  0x000000011536bc37:   add    rsp,0x40
  0x000000011536bc3b:   pop    rbp
  0x000000011536bc3c:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536bc43:   ja     0x000000011536bc8c
  0x000000011536bc49:   ret    
  0x000000011536bc4a:   movabs r10,0x12ac0ee70              ;   {metadata({method} {0x000000012ac0ee70} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bc54:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536bc59:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536bc61:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::hashCode@-1 (line 2353)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536bc66:   jmp    0x000000011536ba28
  0x000000011536bc6b:   movabs r10,0x12b053320              ;   {metadata({method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536bc75:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536bc7a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536bc82:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4564)
                                                            ; - java.lang.String::hashCode@17 (line 2355)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536bc87:   jmp    0x000000011536bade
  0x000000011536bc8c:   movabs r10,0x11536bc3c              ;   {internal_word}
  0x000000011536bc96:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536bc9d:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536bca2:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536bca9:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536bcb4:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536bcbf:   add    rsp,0x40
  0x000000011536bcc3:   pop    rbp
  0x000000011536bcc4:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536bcc9:   hlt    
  0x000000011536bcca:   hlt    
  0x000000011536bccb:   hlt    
  0x000000011536bccc:   hlt    
  0x000000011536bccd:   hlt    
  0x000000011536bcce:   hlt    
  0x000000011536bccf:   hlt    
[Stub Code]
  0x000000011536bcd0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011536bcd5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536bcdf:   jmp    0x000000011536bcdf           ;   {runtime_call}
[Exception Handler]
  0x000000011536bce4:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011536bce9:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536bcf3:   and    rsp,0xfffffffffffffff0
  0x000000011536bcf7:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536bcfc:   hlt    
[Deopt Handler Code]
  0x000000011536bcfd:   movabs r10,0x11536bcfd              ;   {section_word}
  0x000000011536bd07:   push   r10
  0x000000011536bd09:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536bd0e:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536bd18:   jmp    0x000000011536bd18           ;   {runtime_call}
  0x000000011536bd1d:   hlt    
  0x000000011536bd1e:   hlt    
  0x000000011536bd1f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='45' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='74' count='256' iicount='256' level='3' stamp='0.946' comment='tiered' hot_count='256'/>
<task_queued compile_id='46' method='java.lang.StringLatin1 indexOfChar ([BIII)I' bytes='33' count='128' backedge_count='4084' iicount='128' level='3' stamp='0.946' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='45' compiler='c1' level='3' entry='0x000000011536c220' size='2920' address='0x000000011536c010' relocation_offset='328' insts_offset='528' stub_offset='1912' scopes_data_offset='2048' scopes_pcs_offset='2336' dependencies_offset='2880' nul_chk_table_offset='2888' metadata_offset='2016' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='74' count='280' iicount='280' stamp='0.947'/>
<print_nmethod compile_id='45' compiler='c1' level='3' stamp='0.947'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     946   45       3       java.lang.invoke.MethodTypeForm::canonicalize (74 bytes)
 total in heap  [0x000000011536c010,0x000000011536cb78] = 2920
 relocation     [0x000000011536c158,0x000000011536c218] = 192
 main code      [0x000000011536c220,0x000000011536c788] = 1384
 stub code      [0x000000011536c788,0x000000011536c7f0] = 104
 metadata       [0x000000011536c7f0,0x000000011536c810] = 32
 scopes data    [0x000000011536c810,0x000000011536c930] = 288
 scopes pcs     [0x000000011536c930,0x000000011536cb50] = 544
 dependencies   [0x000000011536cb50,0x000000011536cb58] = 8
 nul chk table  [0x000000011536cb58,0x000000011536cb78] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Class&apos;
  # parm1:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011536c220:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536c227:   push   rbp
  0x000000011536c228:   sub    rsp,0x50
  0x000000011536c22c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011536c234:   je     0x000000011536c23b
  0x000000011536c236:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536c23b:   mov    QWORD PTR [rsp+0x40],rsi
  0x000000011536c240:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c24a:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536c250:   add    ebx,0x2
  0x000000011536c253:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536c259:   and    ebx,0x7fe
  0x000000011536c25f:   cmp    ebx,0x0
  0x000000011536c262:   je     0x000000011536c667           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@0 (line 260)
  0x000000011536c268:   movabs rdi,0x7ffd00958              ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd00958} = &apos;java/lang/Object&apos;)}
  0x000000011536c272:   cmp    rsi,rdi
  0x000000011536c275:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c27f:   movabs rbx,0x100
  0x000000011536c289:   je     0x000000011536c299
  0x000000011536c28f:   movabs rbx,0xf0
  0x000000011536c299:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536c29d:   lea    rax,[rax+0x1]
  0x000000011536c2a1:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536c2a5:   je     0x000000011536c63a           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@3 (line 260)
  0x000000011536c2ab:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011536c688
  0x000000011536c2ae:   mov    rdi,rsi
  0x000000011536c2b1:   movabs rbx,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c2bb:   add    QWORD PTR [rbx+0x128],0x1
  0x000000011536c2c3:   mov    rdi,QWORD PTR [rsi+0x10]
  0x000000011536c2c7:   cmp    rdi,0x0
  0x000000011536c2cb:   mov    edi,0x0
  0x000000011536c2d0:   jne    0x000000011536c2db
  0x000000011536c2d6:   mov    edi,0x1                      ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 262)
  0x000000011536c2db:   cmp    edi,0x0
  0x000000011536c2de:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c2e8:   movabs rbx,0x160
  0x000000011536c2f2:   jne    0x000000011536c302
  0x000000011536c2f8:   movabs rbx,0x170
  0x000000011536c302:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536c306:   lea    rax,[rax+0x1]
  0x000000011536c30a:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536c30e:   jne    0x000000011536c4a7           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@13 (line 262)
  0x000000011536c314:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c31e:   movabs rbx,0x188
  0x000000011536c328:   cmp    edx,0x1
  0x000000011536c32b:   mov    rax,rbx
  0x000000011536c32e:   movabs rbx,0x198
  0x000000011536c338:   cmovne rbx,rax
  0x000000011536c33c:   cmp    edx,0x3
  0x000000011536c33f:   mov    rax,rbx
  0x000000011536c342:   movabs rbx,0x1a8
  0x000000011536c34c:   cmovne rbx,rax
  0x000000011536c350:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536c354:   movabs r10,0x1
  0x000000011536c35e:   add    rax,r10
  0x000000011536c361:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536c365:   cmp    edx,0x1
  0x000000011536c368:   je     0x000000011536c61d
  0x000000011536c36e:   cmp    edx,0x3
  0x000000011536c371:   jne    0x000000011536c5f5           ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@17 (line 263)
  0x000000011536c377:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c381:   add    QWORD PTR [rdi+0x1c0],0x1
  0x000000011536c389:   movabs rdi,0x16bc1b300              ;   {metadata(method data for {method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c393:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536c399:   add    ebx,0x2
  0x000000011536c39c:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536c3a2:   and    ebx,0x1ffffe
  0x000000011536c3a8:   cmp    ebx,0x0
  0x000000011536c3ab:   je     0x000000011536c68d
  0x000000011536c3b1:   movabs rdi,0x16bc1b300              ;   {metadata(method data for {method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c3bb:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011536c3c3:   mov    rdi,rsi
  0x000000011536c3c6:   mov    rsi,rdi                      ;*invokestatic findWrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 415)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
  0x000000011536c3c9:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536c3cf:   call   0x000000011c900c00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokestatic findWrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 415)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
                                                            ;   {static_call}
  0x000000011536c3d4:   cmp    rax,0x0
  0x000000011536c3d8:   movabs rsi,0x16bc1b300              ;   {metadata(method data for {method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c3e2:   movabs rdx,0x100
  0x000000011536c3ec:   je     0x000000011536c3fc
  0x000000011536c3f2:   movabs rdx,0x110
  0x000000011536c3fc:   mov    rdi,QWORD PTR [rsi+rdx*1]
  0x000000011536c400:   lea    rdi,[rdi+0x1]
  0x000000011536c404:   mov    QWORD PTR [rsi+rdx*1],rdi
  0x000000011536c408:   je     0x000000011536c451           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@6 (line 416)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
  0x000000011536c40e:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011536c6ae
                                                            ;*invokevirtual primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 417)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
  0x000000011536c411:   mov    rsi,rax
  0x000000011536c414:   movabs rdx,0x16bc1b300              ;   {metadata(method data for {method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c41e:   add    QWORD PTR [rdx+0x120],0x1
  0x000000011536c426:   mov    esi,DWORD PTR [rax+0x20]
  0x000000011536c429:   shl    rsi,0x3                      ;*getfield primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::primitiveType@1 (line 374)
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 417)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
  0x000000011536c42d:   movabs rdx,0x16bc1b300              ;   {metadata(method data for {method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c437:   add    QWORD PTR [rdx+0x158],0x1
  0x000000011536c43f:   mov    rdx,QWORD PTR [rsp+0x40]     ;*invokestatic forceType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 417)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
  0x000000011536c444:   data16 xchg ax,ax
  0x000000011536c447:   call   0x000000011c900c00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokestatic forceType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 417)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
                                                            ;   {static_call}
  0x000000011536c44c:   jmp    0x000000011536c456
  0x000000011536c451:   mov    rax,QWORD PTR [rsp+0x40]     ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@48 (line 265)
  0x000000011536c456:   mov    rsi,QWORD PTR [rsp+0x40]
  0x000000011536c45b:   cmp    rax,rsi
  0x000000011536c45e:   movabs rsi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c468:   movabs rdi,0x1d0
  0x000000011536c472:   je     0x000000011536c482
  0x000000011536c478:   movabs rdi,0x1e0
  0x000000011536c482:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011536c486:   lea    rbx,[rbx+0x1]
  0x000000011536c48a:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011536c48e:   je     0x000000011536c5f5           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@51 (line 266)
  0x000000011536c494:   add    rsp,0x50
  0x000000011536c498:   pop    rbp
  0x000000011536c499:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c4a0:   ja     0x000000011536c6b3
  0x000000011536c4a6:   ret    
  0x000000011536c4a7:   cmp    edx,0x2
  0x000000011536c4aa:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c4b4:   movabs rbx,0x208
  0x000000011536c4be:   jne    0x000000011536c4ce
  0x000000011536c4c4:   movabs rbx,0x218
  0x000000011536c4ce:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536c4d2:   lea    rax,[rax+0x1]
  0x000000011536c4d6:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536c4da:   jne    0x000000011536c64a           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@64 (line 271)
  0x000000011536c4e0:   movabs rdi,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c4ea:   add    QWORD PTR [rdi+0x228],0x1
  0x000000011536c4f2:   movabs rdi,0x16bc1ba78              ;   {metadata(method data for {method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c4fc:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536c502:   add    ebx,0x2
  0x000000011536c505:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536c50b:   and    ebx,0x1ffffe
  0x000000011536c511:   cmp    ebx,0x0
  0x000000011536c514:   je     0x000000011536c6c9
  0x000000011536c51a:   mov    rdi,rsi
  0x000000011536c51d:   movabs rbx,0x16bc1ba78              ;   {metadata(method data for {method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c527:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011536c52f:   mov    rdi,QWORD PTR [rsi+0x10]
  0x000000011536c533:   cmp    rdi,0x0
  0x000000011536c537:   mov    edi,0x0
  0x000000011536c53c:   jne    0x000000011536c547
  0x000000011536c542:   mov    edi,0x1                      ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 405)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
  0x000000011536c547:   cmp    edi,0x0
  0x000000011536c54a:   movabs rdi,0x16bc1ba78              ;   {metadata(method data for {method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c554:   movabs rbx,0x128
  0x000000011536c55e:   je     0x000000011536c56e
  0x000000011536c564:   movabs rbx,0x138
  0x000000011536c56e:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011536c572:   lea    rax,[rax+0x1]
  0x000000011536c576:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011536c57a:   je     0x000000011536c5df           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@4 (line 405)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
  0x000000011536c580:   movabs rdi,0x16bc1ba78              ;   {metadata(method data for {method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c58a:   add    QWORD PTR [rdi+0x148],0x1
  0x000000011536c592:   mov    rdi,rsi
  0x000000011536c595:   mov    rsi,rdi                      ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 406)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
  0x000000011536c598:   nop    DWORD PTR [rax+0x0]
  0x000000011536c59f:   call   0x000000011c900c00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 406)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
                                                            ;   {static_call}
  0x000000011536c5a4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011536c6ea
  0x000000011536c5a7:   mov    rdx,rax
  0x000000011536c5aa:   movabs rsi,0x16bc1ba78              ;   {metadata(method data for {method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c5b4:   add    QWORD PTR [rsi+0x158],0x1
  0x000000011536c5bc:   mov    rdx,QWORD PTR [rsp+0x40]
  0x000000011536c5c1:   mov    rsi,rax                      ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 406)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
  0x000000011536c5c4:   data16 xchg ax,ax
  0x000000011536c5c7:   call   0x000000011c900600           ; ImmutableOopMap {}
                                                            ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 406)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
                                                            ;   {optimized virtual_call}
  0x000000011536c5cc:   add    rsp,0x50
  0x000000011536c5d0:   pop    rbp
  0x000000011536c5d1:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c5d8:   ja     0x000000011536c6ef
  0x000000011536c5de:   ret    
  0x000000011536c5df:   mov    rax,rsi
  0x000000011536c5e2:   add    rsp,0x50
  0x000000011536c5e6:   pop    rbp
  0x000000011536c5e7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c5ee:   ja     0x000000011536c705
  0x000000011536c5f4:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@71 (line 272)
  0x000000011536c5f5:   movabs rax,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c5ff:   inc    DWORD PTR [rax+0x1f0]
  0x000000011536c605:   jmp    0x000000011536c64a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@59 (line 269)
  0x000000011536c60a:   add    rsp,0x50
  0x000000011536c60e:   pop    rbp
  0x000000011536c60f:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c616:   ja     0x000000011536c71b
  0x000000011536c61c:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@55 (line 266)
  0x000000011536c61d:   movabs rax,0x7ffd00958              ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd00958} = &apos;java/lang/Object&apos;)}
  0x000000011536c627:   add    rsp,0x50
  0x000000011536c62b:   pop    rbp
  0x000000011536c62c:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c633:   ja     0x000000011536c731
  0x000000011536c639:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@58 (line 269)
  0x000000011536c63a:   movabs rax,0x16bc1b080              ;   {metadata(method data for {method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c644:   inc    DWORD PTR [rax+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@6 (line 260)
  0x000000011536c64a:   movabs rax,0x0                      ;   {oop(NULL)}
  0x000000011536c654:   add    rsp,0x50
  0x000000011536c658:   pop    rbp
  0x000000011536c659:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536c660:   ja     0x000000011536c747
  0x000000011536c666:   ret    
  0x000000011536c667:   movabs r10,0x12affa110              ;   {metadata({method} {0x000000012affa110} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011536c671:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536c676:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536c67e:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@-1 (line 260)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536c683:   jmp    0x000000011536c268
  0x000000011536c688:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 262)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536c68d:   movabs r10,0x12ad03650              ;   {metadata({method} {0x000000012ad03650} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c697:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536c69c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536c6a4:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@-1 (line 415)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536c6a9:   jmp    0x000000011536c3b1
  0x000000011536c6ae:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [64]=Oop }
                                                            ;*invokevirtual primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 417)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@45 (line 265)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536c6b3:   movabs r10,0x11536c499              ;   {internal_word}
  0x000000011536c6bd:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c6c4:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c6c9:   movabs r10,0x12ad036a8              ;   {metadata({method} {0x000000012ad036a8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011536c6d3:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536c6d8:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536c6e0:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@-1 (line 405)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536c6e5:   jmp    0x000000011536c51a
  0x000000011536c6ea:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [64]=Oop }
                                                            ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 406)
                                                            ; - java.lang.invoke.MethodTypeForm::canonicalize@68 (line 272)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536c6ef:   movabs r10,0x11536c5d1              ;   {internal_word}
  0x000000011536c6f9:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c700:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c705:   movabs r10,0x11536c5e7              ;   {internal_word}
  0x000000011536c70f:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c716:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c71b:   movabs r10,0x11536c60f              ;   {internal_word}
  0x000000011536c725:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c72c:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c731:   movabs r10,0x11536c62c              ;   {internal_word}
  0x000000011536c73b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c742:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c747:   movabs r10,0x11536c659              ;   {internal_word}
  0x000000011536c751:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536c758:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536c75d:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536c764:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536c76f:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536c77a:   add    rsp,0x50
  0x000000011536c77e:   pop    rbp
  0x000000011536c77f:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536c784:   hlt    
  0x000000011536c785:   hlt    
  0x000000011536c786:   hlt    
  0x000000011536c787:   hlt    
[Exception Handler]
  0x000000011536c788:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536c78d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536c797:   and    rsp,0xfffffffffffffff0
  0x000000011536c79b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536c7a0:   hlt    
[Deopt Handler Code]
  0x000000011536c7a1:   movabs r10,0x11536c7a1              ;   {section_word}
  0x000000011536c7ab:   push   r10
  0x000000011536c7ad:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536c7b2:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536c7bc:   jmp    0x000000011536c7bc           ;   {runtime_call}
  0x000000011536c7c1:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536c7cb:   jmp    0x000000011536c7cb           ;   {runtime_call}
  0x000000011536c7d0:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536c7da:   jmp    0x000000011536c7da           ;   {runtime_call}
  0x000000011536c7df:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536c7e9:   jmp    0x000000011536c7e9           ;   {runtime_call}
  0x000000011536c7ee:   hlt    
  0x000000011536c7ef:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='47' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce35460' size='368' address='0x000000011ce35310' relocation_offset='328' insts_offset='336' stub_offset='365' method='java.lang.invoke.MethodHandle linkToStatic (JLjava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.963'/>

Compiled method (n/a)     962   47     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLJLL)J (native)
 total in heap  [0x000000011ce35310,0x000000011ce35480] = 368
 relocation     [0x000000011ce35458,0x000000011ce35460] = 8
 main code      [0x000000011ce35460,0x000000011ce3547d] = 29
 stub code      [0x000000011ce3547d,0x000000011ce35480] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1c2e0} &apos;linkToStatic&apos; &apos;(JLjava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = long
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce35460:   mov    ebx,DWORD PTR [r9+0x24]
  0x000000011ce35464:   shl    rbx,0x3
  0x000000011ce35468:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3546c:   test   rbx,rbx
  0x000000011ce3546f:   je     0x000000011ce35478
  0x000000011ce35475:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce35478:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3547d:   hlt    
  0x000000011ce3547e:   hlt    
  0x000000011ce3547f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='46' compiler='c1' level='3' entry='0x000000011536cd20' size='1352' address='0x000000011536cb90' relocation_offset='328' insts_offset='400' stub_offset='904' scopes_data_offset='960' scopes_pcs_offset='1064' dependencies_offset='1320' nul_chk_table_offset='1328' metadata_offset='952' method='java.lang.StringLatin1 indexOfChar ([BIII)I' bytes='33' count='142' backedge_count='4310' iicount='142' stamp='0.964'/>
<print_nmethod compile_id='46' compiler='c1' level='3' stamp='0.964'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     964   46       3       java.lang.StringLatin1::indexOfChar (33 bytes)
 total in heap  [0x000000011536cb90,0x000000011536d0d8] = 1352
 relocation     [0x000000011536ccd8,0x000000011536cd20] = 72
 main code      [0x000000011536cd20,0x000000011536cf18] = 504
 stub code      [0x000000011536cf18,0x000000011536cf48] = 48
 metadata       [0x000000011536cf48,0x000000011536cf50] = 8
 scopes data    [0x000000011536cf50,0x000000011536cfb8] = 104
 scopes pcs     [0x000000011536cfb8,0x000000011536d0b8] = 256
 dependencies   [0x000000011536d0b8,0x000000011536d0c0] = 8
 nul chk table  [0x000000011536d0c0,0x000000011536d0d8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000000011536cd20:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536cd27:   push   rbp
  0x000000011536cd28:   sub    rsp,0x30
  0x000000011536cd2c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536cd34:   je     0x000000011536cd3b
  0x000000011536cd36:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536cd3b:   movabs rax,0x16bc1c348              ;   {metadata(method data for {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536cd45:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536cd4b:   add    edi,0x2
  0x000000011536cd4e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536cd54:   and    edi,0x7fe
  0x000000011536cd5a:   cmp    edi,0x0
  0x000000011536cd5d:   je     0x000000011536ce69           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@0 (line 215)
  0x000000011536cd63:   movsx  edx,dl
  0x000000011536cd66:   jmp    0x000000011536cdfd           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@7 (line 216)
  0x000000011536cd6b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011536cd70:   cmp    ecx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011536ce8a
  0x000000011536cd73:   jae    0x000000011536ce94
  0x000000011536cd79:   movsxd rax,ecx
  0x000000011536cd7c:   movsx  eax,BYTE PTR [rsi+rax*1+0x10];*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 217)
  0x000000011536cd81:   cmp    eax,edx
  0x000000011536cd83:   movabs rax,0x16bc1c348              ;   {metadata(method data for {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536cd8d:   movabs rdi,0x120
  0x000000011536cd97:   je     0x000000011536cda7
  0x000000011536cd9d:   movabs rdi,0x110
  0x000000011536cda7:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011536cdab:   lea    rbx,[rbx+0x1]
  0x000000011536cdaf:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011536cdb3:   je     0x000000011536ce3b           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@19 (line 217)
  0x000000011536cdb9:   inc    ecx
  0x000000011536cdbb:   movabs rax,0x16bc1c348              ;   {metadata(method data for {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536cdc5:   mov    edi,DWORD PTR [rax+0xb0]
  0x000000011536cdcb:   add    edi,0x2
  0x000000011536cdce:   mov    DWORD PTR [rax+0xb0],edi
  0x000000011536cdd4:   and    edi,0x3ffe
  0x000000011536cdda:   cmp    edi,0x0
  0x000000011536cddd:   je     0x000000011536cea2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@28 (line 216)
  0x000000011536cde3:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::indexOfChar@28 (line 216)
  0x000000011536cdea:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011536cded:   movabs rax,0x16bc1c348              ;   {metadata(method data for {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536cdf7:   inc    DWORD PTR [rax+0x130]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@28 (line 216)
  0x000000011536cdfd:   cmp    ecx,r8d
  0x000000011536ce00:   movabs rax,0x16bc1c348              ;   {metadata(method data for {method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ce0a:   movabs rdi,0xf0
  0x000000011536ce14:   jge    0x000000011536ce24
  0x000000011536ce1a:   movabs rdi,0x100
  0x000000011536ce24:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011536ce28:   lea    rbx,[rbx+0x1]
  0x000000011536ce2c:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011536ce30:   jge    0x000000011536ce51
  0x000000011536ce36:   jmp    0x000000011536cd70           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@10 (line 216)
  0x000000011536ce3b:   mov    rax,rcx
  0x000000011536ce3e:   add    rsp,0x30
  0x000000011536ce42:   pop    rbp
  0x000000011536ce43:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ce4a:   ja     0x000000011536cec3
  0x000000011536ce50:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@24 (line 218)
  0x000000011536ce51:   mov    eax,0xffffffff
  0x000000011536ce56:   add    rsp,0x30
  0x000000011536ce5a:   pop    rbp
  0x000000011536ce5b:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ce62:   ja     0x000000011536ced9
  0x000000011536ce68:   ret    
  0x000000011536ce69:   movabs r10,0x12ac24ab8              ;   {metadata({method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ce73:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536ce78:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536ce80:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::indexOfChar@-1 (line 215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536ce85:   jmp    0x000000011536cd63
  0x000000011536ce8a:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 217)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536ce8f:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 217)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536ce94:   mov    QWORD PTR [rsp],rcx
  0x000000011536ce98:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011536ce9d:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 217)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011536cea2:   movabs r10,0x12ac24ab8              ;   {metadata({method} {0x000000012ac24ab8} &apos;indexOfChar&apos; &apos;([BIII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ceac:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536ceb1:   mov    QWORD PTR [rsp],0x1c
  0x000000011536ceb9:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::indexOfChar@28 (line 216)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536cebe:   jmp    0x000000011536cde3
  0x000000011536cec3:   movabs r10,0x11536ce43              ;   {internal_word}
  0x000000011536cecd:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536ced4:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536ced9:   movabs r10,0x11536ce5b              ;   {internal_word}
  0x000000011536cee3:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536ceea:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536ceef:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536cef6:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536cf01:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536cf0c:   add    rsp,0x30
  0x000000011536cf10:   pop    rbp
  0x000000011536cf11:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536cf16:   hlt    
  0x000000011536cf17:   hlt    
[Exception Handler]
  0x000000011536cf18:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536cf1d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536cf27:   and    rsp,0xfffffffffffffff0
  0x000000011536cf2b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536cf30:   hlt    
[Deopt Handler Code]
  0x000000011536cf31:   movabs r10,0x11536cf31              ;   {section_word}
  0x000000011536cf3b:   push   r10
  0x000000011536cf3d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536cf42:   hlt    
  0x000000011536cf43:   hlt    
  0x000000011536cf44:   hlt    
  0x000000011536cf45:   hlt    
  0x000000011536cf46:   hlt    
  0x000000011536cf47:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='48' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce35760' size='384' address='0x000000011ce35610' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JLjava/lang/Object;JLjava/lang/Object;)J' bytes='0' count='0' iicount='0' stamp='0.971'/>

Compiled method (n/a)     970   48     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLJL)J (native)
 total in heap  [0x000000011ce35610,0x000000011ce35790] = 384
 relocation     [0x000000011ce35758,0x000000011ce35760] = 8
 main code      [0x000000011ce35760,0x000000011ce3578a] = 42
 stub code      [0x000000011ce3578a,0x000000011ce35790] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1c588} &apos;invokeBasic&apos; &apos;(JLjava/lang/Object;JLjava/lang/Object;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce35760:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce35763:   shl    rbx,0x3
  0x000000011ce35767:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3576a:   shl    rbx,0x3
  0x000000011ce3576e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce35771:   shl    rbx,0x3
  0x000000011ce35775:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce35779:   test   rbx,rbx
  0x000000011ce3577c:   je     0x000000011ce35785
  0x000000011ce35782:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce35785:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3578a:   hlt    
  0x000000011ce3578b:   hlt    
  0x000000011ce3578c:   hlt    
  0x000000011ce3578d:   hlt    
  0x000000011ce3578e:   hlt    
  0x000000011ce3578f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='49' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce35a60' size='368' address='0x000000011ce35910' relocation_offset='328' insts_offset='336' stub_offset='367' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.972'/>

Compiled method (n/a)     972   49     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLJLL)J (native)
 total in heap  [0x000000011ce35910,0x000000011ce35a80] = 368
 relocation     [0x000000011ce35a58,0x000000011ce35a60] = 8
 main code      [0x000000011ce35a60,0x000000011ce35a7f] = 31
 stub code      [0x000000011ce35a7f,0x000000011ce35a80] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1c6a0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = long
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce35a60:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce35a63:   mov    ebx,DWORD PTR [rdi+0x24]
  0x000000011ce35a66:   shl    rbx,0x3
  0x000000011ce35a6a:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce35a6e:   test   rbx,rbx
  0x000000011ce35a71:   je     0x000000011ce35a7a
  0x000000011ce35a77:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce35a7a:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce35a7f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='50' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce35d60' size='368' address='0x000000011ce35c10' relocation_offset='328' insts_offset='336' stub_offset='365' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.974'/>

Compiled method (n/a)     974   50     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)
 total in heap  [0x000000011ce35c10,0x000000011ce35d80] = 368
 relocation     [0x000000011ce35d58,0x000000011ce35d60] = 8
 main code      [0x000000011ce35d60,0x000000011ce35d7d] = 29
 stub code      [0x000000011ce35d7d,0x000000011ce35d80] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1cae8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce35d60:   mov    ebx,DWORD PTR [r9+0x24]
  0x000000011ce35d64:   shl    rbx,0x3
  0x000000011ce35d68:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce35d6c:   test   rbx,rbx
  0x000000011ce35d6f:   je     0x000000011ce35d78
  0x000000011ce35d75:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce35d78:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce35d7d:   hlt    
  0x000000011ce35d7e:   hlt    
  0x000000011ce35d7f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='51' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce36060' size='384' address='0x000000011ce35f10' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.976'/>

Compiled method (n/a)     976   51     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)
 total in heap  [0x000000011ce35f10,0x000000011ce36090] = 384
 relocation     [0x000000011ce36058,0x000000011ce36060] = 8
 main code      [0x000000011ce36060,0x000000011ce3608a] = 42
 stub code      [0x000000011ce3608a,0x000000011ce36090] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1cd80} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce36060:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce36063:   shl    rbx,0x3
  0x000000011ce36067:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3606a:   shl    rbx,0x3
  0x000000011ce3606e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce36071:   shl    rbx,0x3
  0x000000011ce36075:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce36079:   test   rbx,rbx
  0x000000011ce3607c:   je     0x000000011ce36085
  0x000000011ce36082:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce36085:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3608a:   hlt    
  0x000000011ce3608b:   hlt    
  0x000000011ce3608c:   hlt    
  0x000000011ce3608d:   hlt    
  0x000000011ce3608e:   hlt    
  0x000000011ce3608f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='52' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='256' iicount='256' level='3' stamp='0.978' comment='tiered' hot_count='256'/>
<nmethod compile_id='53' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce36360' size='384' address='0x000000011ce36210' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JLjava/lang/Object;J)J' bytes='0' count='0' iicount='0' stamp='0.978'/>

Compiled method (n/a)     978   53     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLJ)J (native)
 total in heap  [0x000000011ce36210,0x000000011ce36390] = 384
 relocation     [0x000000011ce36358,0x000000011ce36360] = 8
 main code      [0x000000011ce36360,0x000000011ce3638a] = 42
 stub code      [0x000000011ce3638a,0x000000011ce36390] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1d5d8} &apos;invokeBasic&apos; &apos;(JLjava/lang/Object;J)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = long
  #           [sp+0x0]  (sp of caller)
  0x000000011ce36360:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce36363:   shl    rbx,0x3
  0x000000011ce36367:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3636a:   shl    rbx,0x3
  0x000000011ce3636e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce36371:   shl    rbx,0x3
  0x000000011ce36375:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce36379:   test   rbx,rbx
  0x000000011ce3637c:   je     0x000000011ce36385
  0x000000011ce36382:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce36385:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3638a:   hlt    
  0x000000011ce3638b:   hlt    
  0x000000011ce3638c:   hlt    
  0x000000011ce3638d:   hlt    
  0x000000011ce3638e:   hlt    
  0x000000011ce3638f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='52' compiler='c1' level='3' entry='0x000000011536d2c0' size='1376' address='0x000000011536d110' relocation_offset='328' insts_offset='432' stub_offset='912' scopes_data_offset='992' scopes_pcs_offset='1112' dependencies_offset='1352' nul_chk_table_offset='1360' metadata_offset='984' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='267' iicount='267' stamp='0.980'/>
<print_nmethod compile_id='52' compiler='c1' level='3' stamp='0.980'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     979   52       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x000000011536d110,0x000000011536d670] = 1376
 relocation     [0x000000011536d258,0x000000011536d2a8] = 80
 main code      [0x000000011536d2c0,0x000000011536d4a0] = 480
 stub code      [0x000000011536d4a0,0x000000011536d4e8] = 72
 metadata       [0x000000011536d4e8,0x000000011536d4f0] = 8
 scopes data    [0x000000011536d4f0,0x000000011536d568] = 120
 scopes pcs     [0x000000011536d568,0x000000011536d658] = 240
 dependencies   [0x000000011536d658,0x000000011536d660] = 8
 nul chk table  [0x000000011536d660,0x000000011536d670] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011536d2c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536d2c4:   movabs r11,0x12ac00000
  0x000000011536d2ce:   add    r10,r11
  0x000000011536d2d1:   cmp    r10,rax
  0x000000011536d2d4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536d2da:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536d2e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536d2e7:   push   rbp
  0x000000011536d2e8:   sub    rsp,0x40
  0x000000011536d2ec:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536d2f4:   je     0x000000011536d2fb
  0x000000011536d2f6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536d2fb:   mov    QWORD PTR [rsp+0x28],rsi
  0x000000011536d300:   movabs rcx,0x16bc1ced8              ;   {metadata(method data for {method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011536d30a:   mov    edi,DWORD PTR [rcx+0xac]
  0x000000011536d310:   add    edi,0x2
  0x000000011536d313:   mov    DWORD PTR [rcx+0xac],edi
  0x000000011536d319:   and    edi,0x7fe
  0x000000011536d31f:   cmp    edi,0x0
  0x000000011536d322:   je     0x000000011536d411           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 239)
  0x000000011536d328:   mov    edi,DWORD PTR [rsi+0x14]
  0x000000011536d32b:   shl    rdi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 239)
  0x000000011536d32f:   mov    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011536d432
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 239)
  0x000000011536d332:   movsx  ecx,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 239)
  0x000000011536d336:   sar    ebx,cl
  0x000000011536d338:   mov    rax,rdx
  0x000000011536d33b:   sub    eax,ebx
  0x000000011536d33d:   cmp    eax,0x0
  0x000000011536d340:   movabs rbx,0x16bc1ced8              ;   {metadata(method data for {method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011536d34a:   movabs rax,0xf0
  0x000000011536d354:   jle    0x000000011536d364
  0x000000011536d35a:   movabs rax,0x100
  0x000000011536d364:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x000000011536d368:   lea    rcx,[rcx+0x1]
  0x000000011536d36c:   mov    QWORD PTR [rbx+rax*1],rcx
  0x000000011536d370:   jle    0x000000011536d3fe           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 240)
  0x000000011536d376:   mov    QWORD PTR [rsp+0x30],rdi
  0x000000011536d37b:   mov    rbx,rsi
  0x000000011536d37e:   movabs rax,0x16bc1ced8              ;   {metadata(method data for {method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011536d388:   add    QWORD PTR [rax+0x110],0x1
  0x000000011536d390:   mov    rbx,rsi
  0x000000011536d393:   mov    rsi,rbx                      ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 242)
  0x000000011536d396:   nop
  0x000000011536d397:   call   0x000000011c900600           ; ImmutableOopMap {[40]=Oop [48]=Oop }
                                                            ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 242)
                                                            ;   {optimized virtual_call}
  0x000000011536d39c:   mov    rsi,QWORD PTR [rsp+0x28]
  0x000000011536d3a1:   movsx  ecx,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 242)
  0x000000011536d3a5:   movabs rdx,0x16bc1ced8              ;   {metadata(method data for {method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011536d3af:   add    QWORD PTR [rdx+0x148],0x1
  0x000000011536d3b7:   shl    eax,cl
  0x000000011536d3b9:   mov    rsi,QWORD PTR [rsp+0x30]
  0x000000011536d3be:   mov    rdx,rax                      ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 241)
  0x000000011536d3c1:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536d3c7:   call   0x000000011c900c00           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 241)
                                                            ;   {static_call}
  0x000000011536d3cc:   movsx  esi,BYTE PTR [r15+0x40]
  0x000000011536d3d1:   cmp    esi,0x0
  0x000000011536d3d4:   mov    rsi,QWORD PTR [rsp+0x28]
  0x000000011536d3d9:   jne    0x000000011536d437
  0x000000011536d3df:   mov    r10,rax
  0x000000011536d3e2:   shr    r10,0x3
  0x000000011536d3e6:   mov    DWORD PTR [rsi+0x14],r10d
  0x000000011536d3ea:   mov    rdi,rsi
  0x000000011536d3ed:   xor    rdi,rax
  0x000000011536d3f0:   shr    rdi,0x15
  0x000000011536d3f4:   cmp    rdi,0x0
  0x000000011536d3f8:   jne    0x000000011536d44f           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 241)
  0x000000011536d3fe:   add    rsp,0x40
  0x000000011536d402:   pop    rbp
  0x000000011536d403:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536d40a:   ja     0x000000011536d460
  0x000000011536d410:   ret    
  0x000000011536d411:   movabs r10,0x12b064348              ;   {metadata({method} {0x000000012b064348} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011536d41b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536d420:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536d428:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 239)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536d42d:   jmp    0x000000011536d328
  0x000000011536d432:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [40]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 239)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536d437:   mov    edi,DWORD PTR [rsi+0x14]
  0x000000011536d43a:   shl    rdi,0x3
  0x000000011536d43e:   cmp    rdi,0x0
  0x000000011536d442:   je     0x000000011536d3df
  0x000000011536d444:   mov    QWORD PTR [rsp],rdi
  0x000000011536d448:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x000000011536d44d:   jmp    0x000000011536d3df
  0x000000011536d44f:   cmp    rax,0x0
  0x000000011536d453:   je     0x000000011536d3fe
  0x000000011536d455:   mov    QWORD PTR [rsp],rsi
  0x000000011536d459:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x000000011536d45e:   jmp    0x000000011536d3fe
  0x000000011536d460:   movabs r10,0x11536d403              ;   {internal_word}
  0x000000011536d46a:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536d471:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536d476:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536d47d:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536d488:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536d493:   add    rsp,0x40
  0x000000011536d497:   pop    rbp
  0x000000011536d498:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536d49d:   hlt    
  0x000000011536d49e:   hlt    
  0x000000011536d49f:   hlt    
[Exception Handler]
  0x000000011536d4a0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536d4a5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536d4af:   and    rsp,0xfffffffffffffff0
  0x000000011536d4b3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536d4b8:   hlt    
[Deopt Handler Code]
  0x000000011536d4b9:   movabs r10,0x11536d4b9              ;   {section_word}
  0x000000011536d4c3:   push   r10
  0x000000011536d4c5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536d4ca:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536d4d4:   jmp    0x000000011536d4d4           ;   {runtime_call}
  0x000000011536d4d9:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536d4e3:   jmp    0x000000011536d4e3           ;   {runtime_call}
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='54' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce36660' size='368' address='0x000000011ce36510' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.987'/>

Compiled method (n/a)     986   54     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLJL)J (native)
 total in heap  [0x000000011ce36510,0x000000011ce36680] = 368
 relocation     [0x000000011ce36658,0x000000011ce36660] = 8
 main code      [0x000000011ce36660,0x000000011ce36680] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1d6f0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;JLjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = long
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce36660:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce36663:   mov    ebx,DWORD PTR [r9+0x24]
  0x000000011ce36667:   shl    rbx,0x3
  0x000000011ce3666b:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3666f:   test   rbx,rbx
  0x000000011ce36672:   je     0x000000011ce3667b
  0x000000011ce36678:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3667b:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='55' method='jdk.internal.org.objectweb.asm.SymbolTable get (I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='13' count='256' iicount='256' level='3' stamp='0.988' comment='tiered' hot_count='256'/>
<task_queued compile_id='56' method='java.lang.invoke.MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.988' comment='tiered' hot_count='128'/>
<nmethod compile_id='57' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce36960' size='368' address='0x000000011ce36810' relocation_offset='328' insts_offset='336' stub_offset='365' method='java.lang.invoke.MethodHandle linkToStatic (JLjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.988'/>

Compiled method (n/a)     988   57     n 0       java.lang.invoke.MethodHandle::linkToStatic(JLILL)J (native)
 total in heap  [0x000000011ce36810,0x000000011ce36980] = 368
 relocation     [0x000000011ce36958,0x000000011ce36960] = 8
 main code      [0x000000011ce36960,0x000000011ce3697d] = 29
 stub code      [0x000000011ce3697d,0x000000011ce36980] = 3

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1da80} &apos;linkToStatic&apos; &apos;(JLjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce36960:   mov    ebx,DWORD PTR [r9+0x24]
  0x000000011ce36964:   shl    rbx,0x3
  0x000000011ce36968:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3696c:   test   rbx,rbx
  0x000000011ce3696f:   je     0x000000011ce36978
  0x000000011ce36975:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce36978:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3697d:   hlt    
  0x000000011ce3697e:   hlt    
  0x000000011ce3697f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='55' compiler='c1' level='3' entry='0x000000011536d820' size='1032' address='0x000000011536d690' relocation_offset='328' insts_offset='400' stub_offset='696' scopes_data_offset='752' scopes_pcs_offset='824' dependencies_offset='1000' nul_chk_table_offset='1008' metadata_offset='744' method='jdk.internal.org.objectweb.asm.SymbolTable get (I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='13' count='263' iicount='263' stamp='0.990'/>
<print_nmethod compile_id='55' compiler='c1' level='3' stamp='0.990'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     990   55       3       jdk.internal.org.objectweb.asm.SymbolTable::get (13 bytes)
 total in heap  [0x000000011536d690,0x000000011536da98] = 1032
 relocation     [0x000000011536d7d8,0x000000011536d810] = 56
 main code      [0x000000011536d820,0x000000011536d948] = 296
 stub code      [0x000000011536d948,0x000000011536d978] = 48
 metadata       [0x000000011536d978,0x000000011536d980] = 8
 scopes data    [0x000000011536d980,0x000000011536d9c8] = 72
 scopes pcs     [0x000000011536d9c8,0x000000011536da78] = 176
 dependencies   [0x000000011536da78,0x000000011536da80] = 8
 nul chk table  [0x000000011536da80,0x000000011536da98] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6f8c8} &apos;get&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011536d820:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536d824:   movabs r11,0x12ac00000
  0x000000011536d82e:   add    r10,r11
  0x000000011536d831:   cmp    r10,rax
  0x000000011536d834:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536d83a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536d840:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536d847:   push   rbp
  0x000000011536d848:   sub    rsp,0x30
  0x000000011536d84c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536d854:   je     0x000000011536d85b
  0x000000011536d856:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536d85b:   movabs rax,0x16bc1d8a8              ;   {metadata(method data for {method} {0x000000012af6f8c8} &apos;get&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011536d865:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536d86b:   add    edi,0x2
  0x000000011536d86e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536d874:   and    edi,0x7fe
  0x000000011536d87a:   cmp    edi,0x0
  0x000000011536d87d:   je     0x000000011536d8d0           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@0 (line 426)
  0x000000011536d883:   mov    esi,DWORD PTR [rsi+0x2c]
  0x000000011536d886:   shl    rsi,0x3                      ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@1 (line 426)
  0x000000011536d88a:   mov    edi,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011536d8ee
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@9 (line 426)
  0x000000011536d88d:   mov    rax,rdx
  0x000000011536d890:   cmp    eax,0x80000000
  0x000000011536d895:   jne    0x000000011536d8a6
  0x000000011536d89b:   xor    edx,edx
  0x000000011536d89d:   cmp    edi,0xffffffff
  0x000000011536d8a0:   je     0x000000011536d8a9
  0x000000011536d8a6:   cdq    
  0x000000011536d8a7:   idiv   edi                          ; implicit exception: dispatches to 0x000000011536d8f3
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@10 (line 426)
  0x000000011536d8a9:   cmp    edx,DWORD PTR [rsi+0xc]
  0x000000011536d8ac:   jae    0x000000011536d8f8
  0x000000011536d8b2:   movsxd rdx,edx
  0x000000011536d8b5:   mov    eax,DWORD PTR [rsi+rdx*4+0x10]
  0x000000011536d8b9:   shl    rax,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@11 (line 426)
  0x000000011536d8bd:   add    rsp,0x30
  0x000000011536d8c1:   pop    rbp
  0x000000011536d8c2:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536d8c9:   ja     0x000000011536d906
  0x000000011536d8cf:   ret    
  0x000000011536d8d0:   movabs r10,0x12af6f8c8              ;   {metadata({method} {0x000000012af6f8c8} &apos;get&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011536d8da:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536d8df:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536d8e7:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@-1 (line 426)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536d8ec:   jmp    0x000000011536d883
  0x000000011536d8ee:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@9 (line 426)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536d8f3:   call   0x000000011c9bbe00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@10 (line 426)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011536d8f8:   mov    QWORD PTR [rsp],rdx
  0x000000011536d8fc:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011536d901:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@11 (line 426)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011536d906:   movabs r10,0x11536d8c2              ;   {internal_word}
  0x000000011536d910:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536d917:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536d91c:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536d923:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536d92e:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536d939:   add    rsp,0x30
  0x000000011536d93d:   pop    rbp
  0x000000011536d93e:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536d943:   hlt    
  0x000000011536d944:   hlt    
  0x000000011536d945:   hlt    
  0x000000011536d946:   hlt    
  0x000000011536d947:   hlt    
[Exception Handler]
  0x000000011536d948:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536d94d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536d957:   and    rsp,0xfffffffffffffff0
  0x000000011536d95b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536d960:   hlt    
[Deopt Handler Code]
  0x000000011536d961:   movabs r10,0x11536d961              ;   {section_word}
  0x000000011536d96b:   push   r10
  0x000000011536d96d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536d972:   hlt    
  0x000000011536d973:   hlt    
  0x000000011536d974:   hlt    
  0x000000011536d975:   hlt    
  0x000000011536d976:   hlt    
  0x000000011536d977:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='58' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce36c60' size='384' address='0x000000011ce36b10' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JLjava/lang/Object;ILjava/lang/Object;)J' bytes='0' count='0' iicount='0' stamp='0.995'/>

Compiled method (n/a)     995   58     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLIL)J (native)
 total in heap  [0x000000011ce36b10,0x000000011ce36c90] = 384
 relocation     [0x000000011ce36c58,0x000000011ce36c60] = 8
 main code      [0x000000011ce36c60,0x000000011ce36c8a] = 42
 stub code      [0x000000011ce36c8a,0x000000011ce36c90] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1db98} &apos;invokeBasic&apos; &apos;(JLjava/lang/Object;ILjava/lang/Object;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce36c60:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce36c63:   shl    rbx,0x3
  0x000000011ce36c67:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce36c6a:   shl    rbx,0x3
  0x000000011ce36c6e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce36c71:   shl    rbx,0x3
  0x000000011ce36c75:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce36c79:   test   rbx,rbx
  0x000000011ce36c7c:   je     0x000000011ce36c85
  0x000000011ce36c82:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce36c85:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce36c8a:   hlt    
  0x000000011ce36c8b:   hlt    
  0x000000011ce36c8c:   hlt    
  0x000000011ce36c8d:   hlt    
  0x000000011ce36c8e:   hlt    
  0x000000011ce36c8f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='56' compiler='c1' level='1' entry='0x000000011ce36f80' size='664' address='0x000000011ce36e10' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.lang.invoke.MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='136' iicount='136' stamp='0.997'/>
<print_nmethod compile_id='56' compiler='c1' level='1' stamp='0.997'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     996   56       1       java.lang.invoke.MethodType::ptypes (5 bytes)
 total in heap  [0x000000011ce36e10,0x000000011ce370a8] = 664
 relocation     [0x000000011ce36f58,0x000000011ce36f80] = 40
 main code      [0x000000011ce36f80,0x000000011ce37018] = 152
 stub code      [0x000000011ce37018,0x000000011ce37048] = 48
 metadata       [0x000000011ce37048,0x000000011ce37050] = 8
 scopes data    [0x000000011ce37050,0x000000011ce37060] = 16
 scopes pcs     [0x000000011ce37060,0x000000011ce370a0] = 64
 dependencies   [0x000000011ce370a0,0x000000011ce370a8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b00deb0} &apos;ptypes&apos; &apos;()[Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce36f80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce36f84:   movabs r11,0x12ac00000
  0x000000011ce36f8e:   add    r10,r11
  0x000000011ce36f91:   cmp    r10,rax
  0x000000011ce36f94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce36f9a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce36fa0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce36fa7:   push   rbp
  0x000000011ce36fa8:   sub    rsp,0x30
  0x000000011ce36fac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce36fb4:   je     0x000000011ce36fbb
  0x000000011ce36fb6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::ptypes@0 (line 166)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce36fbb:   mov    eax,DWORD PTR [rsi+0x10]
  0x000000011ce36fbe:   shl    rax,0x3                      ;*getfield ptypes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::ptypes@1 (line 166)
  0x000000011ce36fc2:   add    rsp,0x30
  0x000000011ce36fc6:   pop    rbp
  0x000000011ce36fc7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce36fce:   ja     0x000000011ce36fd5
  0x000000011ce36fd4:   ret    
  0x000000011ce36fd5:   movabs r10,0x11ce36fc7              ;   {internal_word}
  0x000000011ce36fdf:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce36fe6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce36feb:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce36ff2:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce36ffd:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce37008:   add    rsp,0x30
  0x000000011ce3700c:   pop    rbp
  0x000000011ce3700d:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce37012:   hlt    
  0x000000011ce37013:   hlt    
  0x000000011ce37014:   hlt    
  0x000000011ce37015:   hlt    
  0x000000011ce37016:   hlt    
  0x000000011ce37017:   hlt    
[Exception Handler]
  0x000000011ce37018:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3701d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce37027:   and    rsp,0xfffffffffffffff0
  0x000000011ce3702b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce37030:   hlt    
[Deopt Handler Code]
  0x000000011ce37031:   movabs r10,0x11ce37031              ;   {section_word}
  0x000000011ce3703b:   push   r10
  0x000000011ce3703d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce37042:   hlt    
  0x000000011ce37043:   hlt    
  0x000000011ce37044:   hlt    
  0x000000011ce37045:   hlt    
  0x000000011ce37046:   hlt    
  0x000000011ce37047:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='59' method='java.lang.invoke.MethodType checkSlotCount (I)V' bytes='33' count='256' iicount='256' level='3' stamp='0.999' comment='tiered' hot_count='256'/>
<nmethod compile_id='60' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce37260' size='368' address='0x000000011ce37110' relocation_offset='328' insts_offset='336' stub_offset='367' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.999'/>

Compiled method (n/a)     999   60     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLILL)J (native)
 total in heap  [0x000000011ce37110,0x000000011ce37280] = 368
 relocation     [0x000000011ce37258,0x000000011ce37260] = 8
 main code      [0x000000011ce37260,0x000000011ce3727f] = 31
 stub code      [0x000000011ce3727f,0x000000011ce37280] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1dec8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;ILjava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce37260:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce37263:   mov    ebx,DWORD PTR [rdi+0x24]
  0x000000011ce37266:   shl    rbx,0x3
  0x000000011ce3726a:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3726e:   test   rbx,rbx
  0x000000011ce37271:   je     0x000000011ce3727a
  0x000000011ce37277:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3727a:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3727f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='59' compiler='c1' level='3' entry='0x000000011536dd20' size='2888' address='0x000000011536db10' relocation_offset='328' insts_offset='528' stub_offset='1912' scopes_data_offset='2104' scopes_pcs_offset='2416' dependencies_offset='2880' oops_offset='2040' metadata_offset='2048' method='java.lang.invoke.MethodType checkSlotCount (I)V' bytes='33' count='264' iicount='264' stamp='1.001'/>
<print_nmethod compile_id='59' compiler='c1' level='3' stamp='1.001'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1001   59       3       java.lang.invoke.MethodType::checkSlotCount (33 bytes)
 total in heap  [0x000000011536db10,0x000000011536e658] = 2888
 relocation     [0x000000011536dc58,0x000000011536dd10] = 184
 main code      [0x000000011536dd20,0x000000011536e288] = 1384
 stub code      [0x000000011536e288,0x000000011536e308] = 128
 oops           [0x000000011536e308,0x000000011536e310] = 8
 metadata       [0x000000011536e310,0x000000011536e348] = 56
 scopes data    [0x000000011536e348,0x000000011536e480] = 312
 scopes pcs     [0x000000011536e480,0x000000011536e650] = 464
 dependencies   [0x000000011536e650,0x000000011536e658] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;
  # parm0:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x000000011536dd20:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536dd27:   push   rbp
  0x000000011536dd28:   sub    rsp,0x80
  0x000000011536dd2f:   nop
  0x000000011536dd30:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536dd38:   je     0x000000011536dd3f
  0x000000011536dd3a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536dd3f:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536dd49:   mov    edi,DWORD PTR [rdx+0xac]
  0x000000011536dd4f:   add    edi,0x2
  0x000000011536dd52:   mov    DWORD PTR [rdx+0xac],edi
  0x000000011536dd58:   and    edi,0x7fe
  0x000000011536dd5e:   cmp    edi,0x0
  0x000000011536dd61:   je     0x000000011536e11e           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@0 (line 223)
  0x000000011536dd67:   mov    rdx,rsi
  0x000000011536dd6a:   and    edx,0xff
  0x000000011536dd70:   cmp    edx,esi
  0x000000011536dd72:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536dd7c:   movabs rdi,0x100
  0x000000011536dd86:   jne    0x000000011536dd96
  0x000000011536dd8c:   movabs rdi,0xf0
  0x000000011536dd96:   mov    rax,QWORD PTR [rdx+rdi*1]
  0x000000011536dd9a:   lea    rax,[rax+0x1]
  0x000000011536dd9e:   mov    QWORD PTR [rdx+rdi*1],rax
  0x000000011536dda2:   jne    0x000000011536ddbe           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@6 (line 223)
  0x000000011536dda8:   add    rsp,0x80
  0x000000011536ddaf:   pop    rbp
  0x000000011536ddb0:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ddb7:   ja     0x000000011536e13f
  0x000000011536ddbd:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@32 (line 225)
  0x000000011536ddbe:   mov    DWORD PTR [rsp+0x60],esi
  0x000000011536ddc2:   movabs rdx,0x12ac08438              ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000011536ddcc:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011536ddd3:   lea    rdi,[rax+0x18]
  0x000000011536ddd7:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011536ddde:   ja     0x000000011536e155
  0x000000011536dde4:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011536ddeb:   mov    QWORD PTR [rax],0x1
  0x000000011536ddf2:   mov    rcx,rdx
  0x000000011536ddf5:   movabs r10,0x12ac00000
  0x000000011536ddff:   sub    rcx,r10
  0x000000011536de02:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011536de05:   xor    rcx,rcx
  0x000000011536de08:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011536de0b:   xor    rcx,rcx
  0x000000011536de0e:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 224)
  0x000000011536de12:   mov    rdx,rax
  0x000000011536de15:   movabs rsi,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536de1f:   add    QWORD PTR [rsi+0x110],0x1
  0x000000011536de27:   movabs rdx,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536de31:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011536de37:   add    esi,0x2
  0x000000011536de3a:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011536de40:   and    esi,0x1ffffe
  0x000000011536de46:   cmp    esi,0x0
  0x000000011536de49:   je     0x000000011536e162
  0x000000011536de4f:   mov    rdx,rax
  0x000000011536de52:   movabs rsi,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536de5c:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011536de64:   mov    edx,0x10
  0x000000011536de69:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 224)
  0x000000011536de6c:   mov    QWORD PTR [rsp+0x58],rax
  0x000000011536de71:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536de77:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 224)
                                                            ;   {optimized virtual_call}
  0x000000011536de7c:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011536de81:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536de8b:   add    QWORD PTR [rdx+0x120],0x1
  0x000000011536de93:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536de9d:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011536dea3:   add    esi,0x2
  0x000000011536dea6:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011536deac:   and    esi,0x1ffffe
  0x000000011536deb2:   cmp    esi,0x0
  0x000000011536deb5:   je     0x000000011536e183
  0x000000011536debb:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011536dec0:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536deca:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011536ded2:   movabs rdx,0x7ffe27188              ;   {oop(&quot;bad parameter count &quot;{0x00000007ffe27188})}
  0x000000011536dedc:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 224)
  0x000000011536dee1:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536dee7:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 224)
                                                            ;   {optimized virtual_call}
  0x000000011536deec:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011536def1:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536defb:   add    QWORD PTR [rdx+0x158],0x1
  0x000000011536df03:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536df0d:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011536df13:   add    esi,0x2
  0x000000011536df16:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011536df1c:   and    esi,0x1ffffe
  0x000000011536df22:   cmp    esi,0x0
  0x000000011536df25:   je     0x000000011536e1a4
  0x000000011536df2b:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011536df30:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536df3a:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011536df42:   mov    edx,DWORD PTR [rsp+0x60]
  0x000000011536df46:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 224)
  0x000000011536df4b:   nop    DWORD PTR [rax+0x0]
  0x000000011536df4f:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 224)
                                                            ;   {optimized virtual_call}
  0x000000011536df54:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011536df59:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536df63:   add    QWORD PTR [rdx+0x190],0x1
  0x000000011536df6b:   movabs rdx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536df75:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011536df7b:   add    esi,0x2
  0x000000011536df7e:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011536df84:   and    esi,0x1ffffe
  0x000000011536df8a:   cmp    esi,0x0
  0x000000011536df8d:   je     0x000000011536e1c5
  0x000000011536df93:   movabs rdx,0x12ac0eb30              ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011536df9d:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011536dfa4:   lea    rdi,[rax+0x18]
  0x000000011536dfa8:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011536dfaf:   ja     0x000000011536e1e6
  0x000000011536dfb5:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011536dfbc:   mov    QWORD PTR [rax],0x1
  0x000000011536dfc3:   mov    rcx,rdx
  0x000000011536dfc6:   movabs r10,0x12ac00000
  0x000000011536dfd0:   sub    rcx,r10
  0x000000011536dfd3:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011536dfd6:   xor    rcx,rcx
  0x000000011536dfd9:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011536dfdc:   xor    rcx,rcx
  0x000000011536dfdf:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
  0x000000011536dfe3:   mov    rdx,rax
  0x000000011536dfe6:   movabs rcx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536dff0:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011536dff8:   movabs rdx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011536e002:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011536e008:   add    ecx,0x2
  0x000000011536e00b:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011536e011:   and    ecx,0x1ffffe
  0x000000011536e017:   cmp    ecx,0x0
  0x000000011536e01a:   je     0x000000011536e1f3
  0x000000011536e020:   mov    rdx,rax
  0x000000011536e023:   movabs rcx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011536e02d:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011536e035:   mov    rdx,QWORD PTR [rsp+0x58]
  0x000000011536e03a:   movabs rcx,0x0                      ;   {oop(NULL)}
  0x000000011536e044:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
  0x000000011536e047:   mov    QWORD PTR [rsp+0x68],rax
  0x000000011536e04c:   data16 xchg ax,ax
  0x000000011536e04f:   call   0x000000011c900600           ; ImmutableOopMap {[104]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
                                                            ;   {optimized virtual_call}
  0x000000011536e054:   movabs rdx,0x16bc1dc00              ;   {metadata(method data for {method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536e05e:   add    QWORD PTR [rdx+0x1c8],0x1
  0x000000011536e066:   movabs rdx,0x16bc1ed98              ;   {metadata(method data for {method} {0x000000012b005de0} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000000011536e070:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011536e076:   add    esi,0x2
  0x000000011536e079:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011536e07f:   and    esi,0x1ffffe
  0x000000011536e085:   cmp    esi,0x0
  0x000000011536e088:   je     0x000000011536e214
  0x000000011536e08e:   xchg   ax,ax
  0x000000011536e090:   jmp    0x000000011536e244           ;   {no_reloc}
  0x000000011536e095:   add    BYTE PTR [rax],al
  0x000000011536e097:   add    BYTE PTR [rax],al
  0x000000011536e099:   add    BYTE PTR [rcx-0x75],cl
  0x000000011536e09c:   xchg   eax,edi
  0x000000011536e09e:   add    BYTE PTR [rax],al
  0x000000011536e0a0:   add    BYTE PTR [rax-0x73],cl
  0x000000011536e0a3:   js     0x000000011536e0cd
  0x000000011536e0a5:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011536e0ac:   ja     0x000000011536e24e
  0x000000011536e0b2:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011536e0b9:   mov    QWORD PTR [rax],0x1
  0x000000011536e0c0:   mov    rcx,rdx
  0x000000011536e0c3:   movabs r10,0x12ac00000
  0x000000011536e0cd:   sub    rcx,r10
  0x000000011536e0d0:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011536e0d3:   xor    rcx,rcx
  0x000000011536e0d6:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011536e0d9:   xor    rcx,rcx
  0x000000011536e0dc:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011536e0e0:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011536e0e4:   mov    QWORD PTR [rax+0x20],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
  0x000000011536e0e8:   mov    rdx,rax
  0x000000011536e0eb:   movabs rsi,0x16bc1ed98              ;   {metadata(method data for {method} {0x000000012b005de0} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000000011536e0f5:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011536e0fd:   mov    rdx,QWORD PTR [rsp+0x68]
  0x000000011536e102:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
  0x000000011536e105:   mov    QWORD PTR [rsp+0x70],rax
  0x000000011536e10a:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011536e10f:   call   0x000000011c900600           ; ImmutableOopMap {[112]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
                                                            ;   {optimized virtual_call}
  0x000000011536e114:   mov    rax,QWORD PTR [rsp+0x70]
  0x000000011536e119:   jmp    0x000000011536e278
  0x000000011536e11e:   movabs r10,0x12b00dae8              ;   {metadata({method} {0x000000012b00dae8} &apos;checkSlotCount&apos; &apos;(I)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536e128:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e12d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e135:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@-1 (line 223)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e13a:   jmp    0x000000011536dd67
  0x000000011536e13f:   movabs r10,0x11536ddb0              ;   {internal_word}
  0x000000011536e149:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536e150:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536e155:   mov    rdx,rdx
  0x000000011536e158:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 224)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536e15d:   jmp    0x000000011536de12
  0x000000011536e162:   movabs r10,0x12b0609c0              ;   {metadata({method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536e16c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e171:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e179:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 106)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e17e:   jmp    0x000000011536de4f
  0x000000011536e183:   movabs r10,0x12b0607b0              ;   {metadata({method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536e18d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e192:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e19a:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e19f:   jmp    0x000000011536debb
  0x000000011536e1a4:   movabs r10,0x12b060548              ;   {metadata({method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536e1ae:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e1b3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e1bb:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 253)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e1c0:   jmp    0x000000011536df2b
  0x000000011536e1c5:   movabs r10,0x12ac08ce8              ;   {metadata({method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011536e1cf:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e1d4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e1dc:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::toString@-1 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e1e1:   jmp    0x000000011536df93
  0x000000011536e1e6:   mov    rdx,rdx
  0x000000011536e1e9:   call   0x000000011c9bca00           ; ImmutableOopMap {[88]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536e1ee:   jmp    0x000000011536dfe3
  0x000000011536e1f3:   movabs r10,0x12b054be0              ;   {metadata({method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011536e1fd:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e202:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e20a:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::&lt;init&gt;@-1 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e20f:   jmp    0x000000011536e020
  0x000000011536e214:   movabs r10,0x12b005de0              ;   {metadata({method} {0x000000012b005de0} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x000000011536e21e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e223:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e22b:   call   0x000000011c9c1480           ; ImmutableOopMap {[104]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e230:   jmp    0x000000011536e08e
  0x000000011536e235:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011536e23f:   mov    eax,0xa050f00
  0x000000011536e244:   call   0x000000011c9c0580           ; ImmutableOopMap {[104]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011536e249:   jmp    0x000000011536e090
  0x000000011536e24e:   mov    rdx,rdx
  0x000000011536e251:   call   0x000000011c9bca00           ; ImmutableOopMap {[104]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 169)
                                                            ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 224)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011536e256:   jmp    0x000000011536e0e8
  0x000000011536e25b:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536e262:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536e26d:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536e278:   add    rsp,0x80
  0x000000011536e27f:   pop    rbp
  0x000000011536e280:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536e285:   hlt    
  0x000000011536e286:   hlt    
  0x000000011536e287:   hlt    
[Stub Code]
  0x000000011536e288:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011536e28d:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536e297:   jmp    0x000000011536e297           ;   {runtime_call}
  0x000000011536e29c:   nop
  0x000000011536e29d:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536e2a7:   jmp    0x000000011536e2a7           ;   {runtime_call}
[Exception Handler]
  0x000000011536e2ac:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011536e2b1:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536e2bb:   and    rsp,0xfffffffffffffff0
  0x000000011536e2bf:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536e2c4:   hlt    
[Deopt Handler Code]
  0x000000011536e2c5:   movabs r10,0x11536e2c5              ;   {section_word}
  0x000000011536e2cf:   push   r10
  0x000000011536e2d1:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536e2d6:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536e2e0:   jmp    0x000000011536e2e0           ;   {runtime_call}
  0x000000011536e2e5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536e2ef:   jmp    0x000000011536e2ef           ;   {runtime_call}
  0x000000011536e2f4:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536e2fe:   jmp    0x000000011536e2fe           ;   {runtime_call}
  0x000000011536e303:   hlt    
  0x000000011536e304:   hlt    
  0x000000011536e305:   hlt    
  0x000000011536e306:   hlt    
  0x000000011536e307:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='61' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='1.017' comment='tiered' hot_count='128'/>
<task_queued compile_id='62' method='java.lang.ref.ReferenceQueue headIsNull ()Z' bytes='13' count='256' iicount='256' level='3' stamp='1.017' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='61' compiler='c1' level='1' entry='0x000000011ce37580' size='664' address='0x000000011ce37410' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='130' iicount='130' stamp='1.017'/>
<print_nmethod compile_id='61' compiler='c1' level='1' stamp='1.017'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1016   61       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
 total in heap  [0x000000011ce37410,0x000000011ce376a8] = 664
 relocation     [0x000000011ce37558,0x000000011ce37580] = 40
 main code      [0x000000011ce37580,0x000000011ce37618] = 152
 stub code      [0x000000011ce37618,0x000000011ce37648] = 48
 metadata       [0x000000011ce37648,0x000000011ce37650] = 8
 scopes data    [0x000000011ce37650,0x000000011ce37660] = 16
 scopes pcs     [0x000000011ce37660,0x000000011ce376a0] = 64
 dependencies   [0x000000011ce376a0,0x000000011ce376a8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac95d08} &apos;getDeclaringClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce37580:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce37584:   movabs r11,0x12ac00000
  0x000000011ce3758e:   add    r10,r11
  0x000000011ce37591:   cmp    r10,rax
  0x000000011ce37594:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3759a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce375a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce375a7:   push   rbp
  0x000000011ce375a8:   sub    rsp,0x30
  0x000000011ce375ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce375b4:   je     0x000000011ce375bb
  0x000000011ce375b6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::getDeclaringClass@0 (line 88)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce375bb:   mov    eax,DWORD PTR [rsi+0x18]
  0x000000011ce375be:   shl    rax,0x3                      ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::getDeclaringClass@1 (line 88)
  0x000000011ce375c2:   add    rsp,0x30
  0x000000011ce375c6:   pop    rbp
  0x000000011ce375c7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce375ce:   ja     0x000000011ce375d5
  0x000000011ce375d4:   ret    
  0x000000011ce375d5:   movabs r10,0x11ce375c7              ;   {internal_word}
  0x000000011ce375df:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce375e6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce375eb:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce375f2:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce375fd:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce37608:   add    rsp,0x30
  0x000000011ce3760c:   pop    rbp
  0x000000011ce3760d:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce37612:   hlt    
  0x000000011ce37613:   hlt    
  0x000000011ce37614:   hlt    
  0x000000011ce37615:   hlt    
  0x000000011ce37616:   hlt    
  0x000000011ce37617:   hlt    
[Exception Handler]
  0x000000011ce37618:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3761d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce37627:   and    rsp,0xfffffffffffffff0
  0x000000011ce3762b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce37630:   hlt    
[Deopt Handler Code]
  0x000000011ce37631:   movabs r10,0x11ce37631              ;   {section_word}
  0x000000011ce3763b:   push   r10
  0x000000011ce3763d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce37642:   hlt    
  0x000000011ce37643:   hlt    
  0x000000011ce37644:   hlt    
  0x000000011ce37645:   hlt    
  0x000000011ce37646:   hlt    
  0x000000011ce37647:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='63' method='java.lang.String getBytes ([BIB)V' bytes='44' count='256' iicount='256' level='3' stamp='1.019' comment='tiered' hot_count='256'/>
<task_queued compile_id='64' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='136' backedge_count='2838' iicount='136' level='3' stamp='1.020' comment='tiered' hot_count='136'/>
<writer thread='23555'/>
<nmethod compile_id='62' compiler='c1' level='3' entry='0x000000011536e820' size='952' address='0x000000011536e690' relocation_offset='328' insts_offset='400' stub_offset='712' scopes_data_offset='768' scopes_pcs_offset='816' dependencies_offset='944' metadata_offset='760' method='java.lang.ref.ReferenceQueue headIsNull ()Z' bytes='13' count='260' iicount='260' stamp='1.020'/>
<print_nmethod compile_id='62' compiler='c1' level='3' stamp='1.020'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1019   62       3       java.lang.ref.ReferenceQueue::headIsNull (13 bytes)
 total in heap  [0x000000011536e690,0x000000011536ea48] = 952
 relocation     [0x000000011536e7d8,0x000000011536e808] = 48
 main code      [0x000000011536e820,0x000000011536e958] = 312
 stub code      [0x000000011536e958,0x000000011536e988] = 48
 metadata       [0x000000011536e988,0x000000011536e990] = 8
 scopes data    [0x000000011536e990,0x000000011536e9c0] = 48
 scopes pcs     [0x000000011536e9c0,0x000000011536ea40] = 128
 dependencies   [0x000000011536ea40,0x000000011536ea48] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011536e820:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536e824:   movabs r11,0x12ac00000
  0x000000011536e82e:   add    r10,r11
  0x000000011536e831:   cmp    r10,rax
  0x000000011536e834:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536e83a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536e840:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536e847:   push   rbp
  0x000000011536e848:   sub    rsp,0x30
  0x000000011536e84c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536e854:   je     0x000000011536e85b
  0x000000011536e856:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536e85b:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011536e865:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536e86b:   add    edi,0x2
  0x000000011536e86e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536e874:   and    edi,0x7fe
  0x000000011536e87a:   cmp    edi,0x0
  0x000000011536e87d:   je     0x000000011536e8f9           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@0 (line 111)
  0x000000011536e883:   mov    eax,DWORD PTR [rsi+0xc]
  0x000000011536e886:   shl    rax,0x3                      ;*getfield head {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@1 (line 111)
  0x000000011536e88a:   cmp    rax,0x0
  0x000000011536e88e:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011536e898:   movabs rsi,0xf0
  0x000000011536e8a2:   jne    0x000000011536e8b2
  0x000000011536e8a8:   movabs rsi,0x100
  0x000000011536e8b2:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011536e8b6:   lea    rdi,[rdi+0x1]
  0x000000011536e8ba:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011536e8be:   jne    0x000000011536e8de           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@4 (line 111)
  0x000000011536e8c4:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011536e8ce:   inc    DWORD PTR [rax+0x110]
  0x000000011536e8d4:   mov    eax,0x1
  0x000000011536e8d9:   jmp    0x000000011536e8e3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@8 (line 111)
  0x000000011536e8de:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@12 (line 111)
  0x000000011536e8e3:   and    eax,0x1
  0x000000011536e8e6:   add    rsp,0x30
  0x000000011536e8ea:   pop    rbp
  0x000000011536e8eb:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536e8f2:   ja     0x000000011536e91a
  0x000000011536e8f8:   ret    
  0x000000011536e8f9:   movabs r10,0x12b012f28              ;   {metadata({method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011536e903:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536e908:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536e910:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@-1 (line 111)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536e915:   jmp    0x000000011536e883
  0x000000011536e91a:   movabs r10,0x11536e8eb              ;   {internal_word}
  0x000000011536e924:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536e92b:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536e930:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536e937:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536e942:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536e94d:   add    rsp,0x30
  0x000000011536e951:   pop    rbp
  0x000000011536e952:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536e957:   hlt    
[Exception Handler]
  0x000000011536e958:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536e95d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536e967:   and    rsp,0xfffffffffffffff0
  0x000000011536e96b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536e970:   hlt    
[Deopt Handler Code]
  0x000000011536e971:   movabs r10,0x11536e971              ;   {section_word}
  0x000000011536e97b:   push   r10
  0x000000011536e97d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536e982:   hlt    
  0x000000011536e983:   hlt    
  0x000000011536e984:   hlt    
  0x000000011536e985:   hlt    
  0x000000011536e986:   hlt    
  0x000000011536e987:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='65' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce37860' size='384' address='0x000000011ce37710' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JLjava/lang/Object;I)J' bytes='0' count='0' iicount='0' stamp='1.023'/>

Compiled method (n/a)    1023   65     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLI)J (native)
 total in heap  [0x000000011ce37710,0x000000011ce37890] = 384
 relocation     [0x000000011ce37858,0x000000011ce37860] = 8
 main code      [0x000000011ce37860,0x000000011ce3788a] = 42
 stub code      [0x000000011ce3788a,0x000000011ce37890] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1f200} &apos;invokeBasic&apos; &apos;(JLjava/lang/Object;I)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = int
  #           [sp+0x0]  (sp of caller)
  0x000000011ce37860:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce37863:   shl    rbx,0x3
  0x000000011ce37867:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3786a:   shl    rbx,0x3
  0x000000011ce3786e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce37871:   shl    rbx,0x3
  0x000000011ce37875:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce37879:   test   rbx,rbx
  0x000000011ce3787c:   je     0x000000011ce37885
  0x000000011ce37882:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce37885:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3788a:   hlt    
  0x000000011ce3788b:   hlt    
  0x000000011ce3788c:   hlt    
  0x000000011ce3788d:   hlt    
  0x000000011ce3788e:   hlt    
  0x000000011ce3788f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='64' compiler='c1' level='3' entry='0x000000011536ec20' size='1184' address='0x000000011536ea90' relocation_offset='328' insts_offset='400' stub_offset='792' scopes_data_offset='848' scopes_pcs_offset='952' dependencies_offset='1160' nul_chk_table_offset='1168' metadata_offset='840' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='146' backedge_count='3070' iicount='146' stamp='1.025'/>
<print_nmethod compile_id='64' compiler='c1' level='3' stamp='1.025'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1024   64       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000000011536ea90,0x000000011536ef30] = 1184
 relocation     [0x000000011536ebd8,0x000000011536ec10] = 56
 main code      [0x000000011536ec20,0x000000011536eda8] = 392
 stub code      [0x000000011536eda8,0x000000011536edd8] = 48
 metadata       [0x000000011536edd8,0x000000011536ede0] = 8
 scopes data    [0x000000011536ede0,0x000000011536ee48] = 104
 scopes pcs     [0x000000011536ee48,0x000000011536ef18] = 208
 dependencies   [0x000000011536ef18,0x000000011536ef20] = 8
 nul chk table  [0x000000011536ef20,0x000000011536ef30] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011536ec20:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536ec27:   push   rbp
  0x000000011536ec28:   sub    rsp,0x30
  0x000000011536ec2c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536ec34:   je     0x000000011536ec3b
  0x000000011536ec36:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536ec3b:   movabs rax,0x16bc1a808              ;   {metadata(method data for {method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ec45:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011536ec4b:   add    edi,0x2
  0x000000011536ec4e:   mov    DWORD PTR [rax+0xac],edi
  0x000000011536ec54:   and    edi,0x7fe
  0x000000011536ec5a:   cmp    edi,0x0
  0x000000011536ec5d:   je     0x000000011536ed22           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@0 (line 192)
  0x000000011536ec63:   mov    eax,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011536ed43
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 193)
  0x000000011536ec66:   mov    edi,0x0
  0x000000011536ec6b:   mov    ebx,0x0
  0x000000011536ec70:   jmp    0x000000011536ecd4           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@10 (line 193)
  0x000000011536ec75:   data16 xchg ax,ax
  0x000000011536ec78:   movsxd rdx,edi
  0x000000011536ec7b:   movsx  edx,BYTE PTR [rsi+rdx*1+0x10];*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@19 (line 193)
  0x000000011536ec80:   mov    rcx,rbx
  0x000000011536ec83:   shl    ebx,0x5
  0x000000011536ec86:   sub    ebx,ecx
  0x000000011536ec88:   and    edx,0xff
  0x000000011536ec8e:   add    ebx,edx
  0x000000011536ec90:   inc    edi
  0x000000011536ec92:   movabs rdx,0x16bc1a808              ;   {metadata(method data for {method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ec9c:   mov    ecx,DWORD PTR [rdx+0xb0]
  0x000000011536eca2:   add    ecx,0x2
  0x000000011536eca5:   mov    DWORD PTR [rdx+0xb0],ecx
  0x000000011536ecab:   and    ecx,0x3ffe
  0x000000011536ecb1:   cmp    ecx,0x0
  0x000000011536ecb4:   je     0x000000011536ed48           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@37 (line 193)
  0x000000011536ecba:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@37 (line 193)
  0x000000011536ecc1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011536ecc4:   movabs rdx,0x16bc1a808              ;   {metadata(method data for {method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ecce:   inc    DWORD PTR [rdx+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@37 (line 193)
  0x000000011536ecd4:   cmp    edi,eax
  0x000000011536ecd6:   movabs rdx,0x16bc1a808              ;   {metadata(method data for {method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ece0:   movabs rcx,0x100
  0x000000011536ecea:   jl     0x000000011536ecfa
  0x000000011536ecf0:   movabs rcx,0xf0
  0x000000011536ecfa:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011536ecfe:   lea    r8,[r8+0x1]
  0x000000011536ed02:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011536ed06:   jl     0x000000011536ec78           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@13 (line 193)
  0x000000011536ed0c:   mov    rax,rbx
  0x000000011536ed0f:   add    rsp,0x30
  0x000000011536ed13:   pop    rbp
  0x000000011536ed14:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ed1b:   ja     0x000000011536ed69
  0x000000011536ed21:   ret    
  0x000000011536ed22:   movabs r10,0x12ac245e8              ;   {metadata({method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ed2c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536ed31:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536ed39:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::hashCode@-1 (line 192)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536ed3e:   jmp    0x000000011536ec63
  0x000000011536ed43:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 193)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536ed48:   movabs r10,0x12ac245e8              ;   {metadata({method} {0x000000012ac245e8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536ed52:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536ed57:   mov    QWORD PTR [rsp],0x25
  0x000000011536ed5f:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@37 (line 193)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536ed64:   jmp    0x000000011536ecba
  0x000000011536ed69:   movabs r10,0x11536ed14              ;   {internal_word}
  0x000000011536ed73:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536ed7a:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536ed7f:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536ed86:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536ed91:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536ed9c:   add    rsp,0x30
  0x000000011536eda0:   pop    rbp
  0x000000011536eda1:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536eda6:   hlt    
  0x000000011536eda7:   hlt    
[Exception Handler]
  0x000000011536eda8:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011536edad:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536edb7:   and    rsp,0xfffffffffffffff0
  0x000000011536edbb:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536edc0:   hlt    
[Deopt Handler Code]
  0x000000011536edc1:   movabs r10,0x11536edc1              ;   {section_word}
  0x000000011536edcb:   push   r10
  0x000000011536edcd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536edd2:   hlt    
  0x000000011536edd3:   hlt    
  0x000000011536edd4:   hlt    
  0x000000011536edd5:   hlt    
  0x000000011536edd6:   hlt    
  0x000000011536edd7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='66' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='256' backedge_count='922' iicount='256' level='3' stamp='1.030' comment='tiered' hot_count='256'/>
<nmethod compile_id='67' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce37b60' size='368' address='0x000000011ce37a10' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/Object;ILjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.030'/>

Compiled method (n/a)    1029   67     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLIL)J (native)
 total in heap  [0x000000011ce37a10,0x000000011ce37b80] = 368
 relocation     [0x000000011ce37b58,0x000000011ce37b60] = 8
 main code      [0x000000011ce37b60,0x000000011ce37b80] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1f318} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;ILjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce37b60:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce37b63:   mov    ebx,DWORD PTR [r9+0x24]
  0x000000011ce37b67:   shl    rbx,0x3
  0x000000011ce37b6b:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce37b6f:   test   rbx,rbx
  0x000000011ce37b72:   je     0x000000011ce37b7b
  0x000000011ce37b78:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce37b7b:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='66' compiler='c1' level='3' entry='0x000000011536f140' size='1896' address='0x000000011536ef90' relocation_offset='328' insts_offset='432' stub_offset='1248' scopes_data_offset='1336' scopes_pcs_offset='1520' dependencies_offset='1856' nul_chk_table_offset='1864' metadata_offset='1328' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='264' backedge_count='966' iicount='264' stamp='1.031'/>
<print_nmethod compile_id='66' compiler='c1' level='3' stamp='1.031'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1031   66       3       java.lang.invoke.MethodType::hashCode (53 bytes)
 total in heap  [0x000000011536ef90,0x000000011536f6f8] = 1896
 relocation     [0x000000011536f0d8,0x000000011536f138] = 96
 main code      [0x000000011536f140,0x000000011536f470] = 816
 stub code      [0x000000011536f470,0x000000011536f4c0] = 80
 metadata       [0x000000011536f4c0,0x000000011536f4c8] = 8
 scopes data    [0x000000011536f4c8,0x000000011536f580] = 184
 scopes pcs     [0x000000011536f580,0x000000011536f6d0] = 336
 dependencies   [0x000000011536f6d0,0x000000011536f6d8] = 8
 nul chk table  [0x000000011536f6d8,0x000000011536f6f8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000011536f140:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536f144:   movabs r11,0x12ac00000
  0x000000011536f14e:   add    r10,r11
  0x000000011536f151:   cmp    r10,rax
  0x000000011536f154:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536f15a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536f160:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536f167:   push   rbp
  0x000000011536f168:   sub    rsp,0x50
  0x000000011536f16c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011536f174:   je     0x000000011536f17b
  0x000000011536f176:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536f17b:   movabs rdi,0x16bc1f380              ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f185:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011536f18b:   add    ebx,0x2
  0x000000011536f18e:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011536f194:   and    ebx,0x7fe
  0x000000011536f19a:   cmp    ebx,0x0
  0x000000011536f19d:   je     0x000000011536f3e1           ;*bipush {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@0 (line 925)
  0x000000011536f1a3:   mov    edi,DWORD PTR [rsi+0xc]
  0x000000011536f1a6:   shl    rdi,0x3                      ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@3 (line 925)
  0x000000011536f1aa:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x000000011536f402
  0x000000011536f1ad:   mov    rbx,rdi
  0x000000011536f1b0:   movabs rax,0x16bc1f380              ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f1ba:   mov    ebx,DWORD PTR [rbx+0x8]
  0x000000011536f1bd:   movabs r10,0x12ac00000
  0x000000011536f1c7:   add    rbx,r10
  0x000000011536f1ca:   cmp    rbx,QWORD PTR [rax+0x100]
  0x000000011536f1d1:   jne    0x000000011536f1e0
  0x000000011536f1d3:   add    QWORD PTR [rax+0x108],0x1
  0x000000011536f1db:   jmp    0x000000011536f240
  0x000000011536f1e0:   cmp    rbx,QWORD PTR [rax+0x110]
  0x000000011536f1e7:   jne    0x000000011536f1f6
  0x000000011536f1e9:   add    QWORD PTR [rax+0x118],0x1
  0x000000011536f1f1:   jmp    0x000000011536f240
  0x000000011536f1f6:   cmp    QWORD PTR [rax+0x100],0x0
  0x000000011536f1fe:   jne    0x000000011536f217
  0x000000011536f200:   mov    QWORD PTR [rax+0x100],rbx
  0x000000011536f207:   mov    QWORD PTR [rax+0x108],0x1
  0x000000011536f212:   jmp    0x000000011536f240
  0x000000011536f217:   cmp    QWORD PTR [rax+0x110],0x0
  0x000000011536f21f:   jne    0x000000011536f238
  0x000000011536f221:   mov    QWORD PTR [rax+0x110],rbx
  0x000000011536f228:   mov    QWORD PTR [rax+0x118],0x1
  0x000000011536f233:   jmp    0x000000011536f240
  0x000000011536f238:   add    QWORD PTR [rax+0xf0],0x1
  0x000000011536f240:   mov    QWORD PTR [rsp+0x20],rsi
  0x000000011536f245:   mov    rsi,rdi                      ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@6 (line 925)
  0x000000011536f248:   nop    DWORD PTR [rax+0x0]
  0x000000011536f24f:   call   0x000000011ce33440           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@6 (line 925)
                                                            ;   {optimized virtual_call}
  0x000000011536f254:   add    eax,0x1f
  0x000000011536f257:   mov    rsi,QWORD PTR [rsp+0x20]
  0x000000011536f25c:   mov    edi,DWORD PTR [rsi+0x10]
  0x000000011536f25f:   shl    rdi,0x3                      ;*getfield ptypes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@12 (line 926)
  0x000000011536f263:   mov    QWORD PTR [rsp+0x38],rdi
  0x000000011536f268:   mov    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011536f407
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@17 (line 926)
  0x000000011536f26b:   mov    DWORD PTR [rsp+0x30],ebx
  0x000000011536f26f:   mov    edx,0x0
  0x000000011536f274:   jmp    0x000000011536f396           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@22 (line 926)
  0x000000011536f279:   nop    DWORD PTR [rax+0x0]
  0x000000011536f280:   movsxd rsi,edx
  0x000000011536f283:   mov    esi,DWORD PTR [rdi+rsi*4+0x10]
  0x000000011536f287:   shl    rsi,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@31 (line 926)
  0x000000011536f28b:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011536f40c
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@40 (line 927)
  0x000000011536f28e:   mov    rcx,rsi
  0x000000011536f291:   movabs r8,0x16bc1f380               ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f29b:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011536f29e:   movabs r10,0x12ac00000
  0x000000011536f2a8:   add    rcx,r10
  0x000000011536f2ab:   cmp    rcx,QWORD PTR [r8+0x158]
  0x000000011536f2b2:   jne    0x000000011536f2c1
  0x000000011536f2b4:   add    QWORD PTR [r8+0x160],0x1
  0x000000011536f2bc:   jmp    0x000000011536f321
  0x000000011536f2c1:   cmp    rcx,QWORD PTR [r8+0x168]
  0x000000011536f2c8:   jne    0x000000011536f2d7
  0x000000011536f2ca:   add    QWORD PTR [r8+0x170],0x1
  0x000000011536f2d2:   jmp    0x000000011536f321
  0x000000011536f2d7:   cmp    QWORD PTR [r8+0x158],0x0
  0x000000011536f2df:   jne    0x000000011536f2f8
  0x000000011536f2e1:   mov    QWORD PTR [r8+0x158],rcx
  0x000000011536f2e8:   mov    QWORD PTR [r8+0x160],0x1
  0x000000011536f2f3:   jmp    0x000000011536f321
  0x000000011536f2f8:   cmp    QWORD PTR [r8+0x168],0x0
  0x000000011536f300:   jne    0x000000011536f319
  0x000000011536f302:   mov    QWORD PTR [r8+0x168],rcx
  0x000000011536f309:   mov    QWORD PTR [r8+0x170],0x1
  0x000000011536f314:   jmp    0x000000011536f321
  0x000000011536f319:   add    QWORD PTR [r8+0x148],0x1
  0x000000011536f321:   mov    rcx,rax
  0x000000011536f324:   shl    eax,0x5
  0x000000011536f327:   sub    eax,ecx
  0x000000011536f329:   mov    DWORD PTR [rsp+0x2c],edx
  0x000000011536f32d:   mov    DWORD PTR [rsp+0x28],eax
  0x000000011536f331:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536f337:   call   0x000000011ce33440           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@40 (line 927)
                                                            ;   {optimized virtual_call}
  0x000000011536f33c:   mov    esi,DWORD PTR [rsp+0x28]
  0x000000011536f340:   add    esi,eax
  0x000000011536f342:   mov    edx,DWORD PTR [rsp+0x2c]
  0x000000011536f346:   inc    edx
  0x000000011536f348:   movabs rax,0x16bc1f380              ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f352:   mov    edi,DWORD PTR [rax+0xb0]
  0x000000011536f358:   add    edi,0x2
  0x000000011536f35b:   mov    DWORD PTR [rax+0xb0],edi
  0x000000011536f361:   and    edi,0x3ffe
  0x000000011536f367:   cmp    edi,0x0
  0x000000011536f36a:   je     0x000000011536f411           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@48 (line 926)
  0x000000011536f370:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.MethodType::hashCode@48 (line 926)
  0x000000011536f377:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011536f37a:   movabs rax,0x16bc1f380              ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f384:   inc    DWORD PTR [rax+0x180]
  0x000000011536f38a:   mov    rax,rsi                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@48 (line 926)
  0x000000011536f38d:   mov    ebx,DWORD PTR [rsp+0x30]
  0x000000011536f391:   mov    rdi,QWORD PTR [rsp+0x38]
  0x000000011536f396:   cmp    edx,ebx
  0x000000011536f398:   movabs rsi,0x16bc1f380              ;   {metadata(method data for {method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f3a2:   movabs rcx,0x138
  0x000000011536f3ac:   jl     0x000000011536f3bc
  0x000000011536f3b2:   movabs rcx,0x128
  0x000000011536f3bc:   mov    r8,QWORD PTR [rsi+rcx*1]
  0x000000011536f3c0:   lea    r8,[r8+0x1]
  0x000000011536f3c4:   mov    QWORD PTR [rsi+rcx*1],r8
  0x000000011536f3c8:   jl     0x000000011536f280           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@25 (line 926)
  0x000000011536f3ce:   add    rsp,0x50
  0x000000011536f3d2:   pop    rbp
  0x000000011536f3d3:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536f3da:   ja     0x000000011536f432
  0x000000011536f3e0:   ret    
  0x000000011536f3e1:   movabs r10,0x12ac60230              ;   {metadata({method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f3eb:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536f3f0:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011536f3f8:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodType::hashCode@-1 (line 925)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536f3fd:   jmp    0x000000011536f1a3
  0x000000011536f402:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@6 (line 925)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536f407:   call   0x000000011c9bc100           ; ImmutableOopMap {rdi=Oop [56]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@17 (line 926)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536f40c:   call   0x000000011c9bc100           ; ImmutableOopMap {rdi=Oop rsi=Oop [56]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::hashCode@40 (line 927)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011536f411:   movabs r10,0x12ac60230              ;   {metadata({method} {0x000000012ac60230} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011536f41b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536f420:   mov    QWORD PTR [rsp],0x30
  0x000000011536f428:   call   0x000000011c9c1480           ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.MethodType::hashCode@48 (line 926)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536f42d:   jmp    0x000000011536f370
  0x000000011536f432:   movabs r10,0x11536f3d3              ;   {internal_word}
  0x000000011536f43c:   mov    QWORD PTR [r15+0x390],r10
  0x000000011536f443:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011536f448:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536f44f:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011536f45a:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011536f465:   add    rsp,0x50
  0x000000011536f469:   pop    rbp
  0x000000011536f46a:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536f46f:   hlt    
[Stub Code]
  0x000000011536f470:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011536f475:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536f47f:   jmp    0x000000011536f47f           ;   {runtime_call}
  0x000000011536f484:   nop
  0x000000011536f485:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011536f48f:   jmp    0x000000011536f48f           ;   {runtime_call}
[Exception Handler]
  0x000000011536f494:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011536f499:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536f4a3:   and    rsp,0xfffffffffffffff0
  0x000000011536f4a7:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011536f4ac:   hlt    
[Deopt Handler Code]
  0x000000011536f4ad:   movabs r10,0x11536f4ad              ;   {section_word}
  0x000000011536f4b7:   push   r10
  0x000000011536f4b9:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536f4be:   hlt    
  0x000000011536f4bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='68' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='144' count='142' backedge_count='3072' iicount='142' level='3' stamp='1.040' comment='tiered' hot_count='142'/>
<task_queued compile_id='69' method='jdk.internal.org.objectweb.asm.Symbol &lt;init&gt; (IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V' bytes='38' count='256' iicount='256' level='3' stamp='1.040' comment='tiered' hot_count='256'/>
<nmethod compile_id='70' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce37e60' size='384' address='0x000000011ce37d10' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JLjava/lang/Object;JI)J' bytes='0' count='0' iicount='0' stamp='1.041'/>

Compiled method (n/a)    1040   70     n 0       java.lang.invoke.MethodHandle::invokeBasic(JLJI)J (native)
 total in heap  [0x000000011ce37d10,0x000000011ce37e90] = 384
 relocation     [0x000000011ce37e58,0x000000011ce37e60] = 8
 main code      [0x000000011ce37e60,0x000000011ce37e8a] = 42
 stub code      [0x000000011ce37e8a,0x000000011ce37e90] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc1ff40} &apos;invokeBasic&apos; &apos;(JLjava/lang/Object;JI)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = long
  # parm3:    r9        = int
  #           [sp+0x0]  (sp of caller)
  0x000000011ce37e60:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce37e63:   shl    rbx,0x3
  0x000000011ce37e67:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce37e6a:   shl    rbx,0x3
  0x000000011ce37e6e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce37e71:   shl    rbx,0x3
  0x000000011ce37e75:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce37e79:   test   rbx,rbx
  0x000000011ce37e7c:   je     0x000000011ce37e85
  0x000000011ce37e82:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce37e85:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce37e8a:   hlt    
  0x000000011ce37e8b:   hlt    
  0x000000011ce37e8c:   hlt    
  0x000000011ce37e8d:   hlt    
  0x000000011ce37e8e:   hlt    
  0x000000011ce37e8f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='68' compiler='c1' level='3' entry='0x000000011536f940' size='4968' address='0x000000011536f710' relocation_offset='328' insts_offset='560' stub_offset='2864' scopes_data_offset='3048' scopes_pcs_offset='3720' dependencies_offset='4904' nul_chk_table_offset='4912' oops_offset='2976' metadata_offset='2984' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='144' count='167' backedge_count='3598' iicount='167' stamp='1.042'/>
<print_nmethod compile_id='68' compiler='c1' level='3' stamp='1.042'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1042   68       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (144 bytes)
 total in heap  [0x000000011536f710,0x0000000115370a78] = 4968
 relocation     [0x000000011536f858,0x000000011536f940] = 232
 main code      [0x000000011536f940,0x0000000115370240] = 2304
 stub code      [0x0000000115370240,0x00000001153702b0] = 112
 oops           [0x00000001153702b0,0x00000001153702b8] = 8
 metadata       [0x00000001153702b8,0x00000001153702f8] = 64
 scopes data    [0x00000001153702f8,0x0000000115370598] = 672
 scopes pcs     [0x0000000115370598,0x0000000115370a38] = 1184
 dependencies   [0x0000000115370a38,0x0000000115370a40] = 8
 nul chk table  [0x0000000115370a40,0x0000000115370a78] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xc0]  (sp of caller)
  0x000000011536f940:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011536f944:   movabs r11,0x12ac00000
  0x000000011536f94e:   add    r10,r11
  0x000000011536f951:   cmp    r10,rax
  0x000000011536f954:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011536f95a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011536f960:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011536f967:   push   rbp
  0x000000011536f968:   sub    rsp,0xb0
  0x000000011536f96f:   nop
  0x000000011536f970:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011536f978:   je     0x000000011536f97f
  0x000000011536f97a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011536f97f:   mov    QWORD PTR [rsp+0x78],rsi
  0x000000011536f984:   mov    QWORD PTR [rsp+0x88],rdx
  0x000000011536f98c:   movabs rcx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536f996:   mov    edi,DWORD PTR [rcx+0xac]
  0x000000011536f99c:   add    edi,0x2
  0x000000011536f99f:   mov    DWORD PTR [rcx+0xac],edi
  0x000000011536f9a5:   and    edi,0x7fe
  0x000000011536f9ab:   cmp    edi,0x0
  0x000000011536f9ae:   je     0x0000000115370049           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@0 (line 285)
  0x000000011536f9b4:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x000000011537006a
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536f9b7:   mov    rcx,rdx
  0x000000011536f9ba:   movabs rdi,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536f9c4:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011536f9cc:   movabs rcx,0x16bc0fab0              ;   {metadata(method data for {method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536f9d6:   mov    edi,DWORD PTR [rcx+0xac]
  0x000000011536f9dc:   add    edi,0x2
  0x000000011536f9df:   mov    DWORD PTR [rcx+0xac],edi
  0x000000011536f9e5:   and    edi,0x1ffffe
  0x000000011536f9eb:   cmp    edi,0x0
  0x000000011536f9ee:   je     0x000000011537006f
  0x000000011536f9f4:   mov    ecx,DWORD PTR [rdx+0x14]
  0x000000011536f9f7:   shl    rcx,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@1 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536f9fb:   mov    edi,DWORD PTR [rcx+0xc]      ; implicit exception: dispatches to 0x0000000115370090
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536f9fe:   mov    rcx,rdx
  0x000000011536fa01:   movabs rbx,0x16bc0fab0              ;   {metadata(method data for {method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fa0b:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011536fa13:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fa1d:   mov    ebx,DWORD PTR [rcx+0xac]
  0x000000011536fa23:   add    ebx,0x2
  0x000000011536fa26:   mov    DWORD PTR [rcx+0xac],ebx
  0x000000011536fa2c:   and    ebx,0x1ffffe
  0x000000011536fa32:   cmp    ebx,0x0
  0x000000011536fa35:   je     0x0000000115370095
  0x000000011536fa3b:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fa45:   inc    DWORD PTR [rcx+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536fa4b:   movsx  ecx,BYTE PTR [rdx+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536fa4f:   movabs rbx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fa59:   inc    DWORD PTR [rbx+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
  0x000000011536fa5f:   shl    ecx,0x18
  0x000000011536fa62:   sar    ecx,0x18
  0x000000011536fa65:   sar    edi,cl
  0x000000011536fa67:   mov    DWORD PTR [rsp+0x80],edi
  0x000000011536fa6e:   cmp    edi,0xffff
  0x000000011536fa74:   movabs rbx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fa7e:   movabs rax,0x138
  0x000000011536fa88:   jg     0x000000011536fa98
  0x000000011536fa8e:   movabs rax,0x128
  0x000000011536fa98:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x000000011536fa9c:   lea    rcx,[rcx+0x1]
  0x000000011536faa0:   mov    QWORD PTR [rbx+rax*1],rcx
  0x000000011536faa4:   jg     0x000000011536ffaa           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 286)
  0x000000011536faaa:   mov    ebx,DWORD PTR [rsi+0xc]      ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@22 (line 289)
  0x000000011536faad:   mov    eax,DWORD PTR [rsi+0x10]
  0x000000011536fab0:   shl    rax,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@32 (line 290)
  0x000000011536fab4:   mov    eax,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x00000001153700b6
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@35 (line 290)
  0x000000011536fab7:   mov    rcx,rbx
  0x000000011536faba:   add    ecx,0x2
  0x000000011536fabd:   add    ecx,edi
  0x000000011536fabf:   cmp    ecx,eax
  0x000000011536fac1:   movabs rax,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536facb:   movabs rcx,0x158
  0x000000011536fad5:   jle    0x000000011536fae5
  0x000000011536fadb:   movabs rcx,0x168
  0x000000011536fae5:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011536fae9:   lea    r8,[r8+0x1]
  0x000000011536faed:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011536faf1:   jle    0x000000011536fb38           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@36 (line 290)
  0x000000011536faf7:   mov    DWORD PTR [rsp+0x84],ebx
  0x000000011536fafe:   mov    rax,rsi
  0x000000011536fb01:   movabs rcx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fb0b:   add    QWORD PTR [rcx+0x178],0x1
  0x000000011536fb13:   mov    rax,rdi
  0x000000011536fb16:   add    eax,0x2
  0x000000011536fb19:   mov    rdx,rax
  0x000000011536fb1c:   mov    rax,rsi
  0x000000011536fb1f:   mov    rsi,rax                      ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@43 (line 291)
  0x000000011536fb22:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011536fb27:   call   0x000000011c900600           ; ImmutableOopMap {[120]=Oop [136]=Oop }
                                                            ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@43 (line 291)
                                                            ;   {optimized virtual_call}
  0x000000011536fb2c:   mov    ebx,DWORD PTR [rsp+0x84]
  0x000000011536fb33:   mov    rsi,QWORD PTR [rsp+0x78]
  0x000000011536fb38:   mov    edi,DWORD PTR [rsi+0x10]
  0x000000011536fb3b:   shl    rdi,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@47 (line 293)
  0x000000011536fb3f:   mov    QWORD PTR [rsp+0x98],rdi
  0x000000011536fb47:   mov    edx,DWORD PTR [rsp+0x80]
  0x000000011536fb4e:   shr    edx,0x8
  0x000000011536fb51:   cmp    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x00000001153700bb
  0x000000011536fb54:   jae    0x00000001153700c5
  0x000000011536fb5a:   movsxd rax,ebx
  0x000000011536fb5d:   mov    BYTE PTR [rdi+rax*1+0x10],dl ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@63 (line 298)
  0x000000011536fb61:   inc    ebx
  0x000000011536fb63:   mov    rdx,rbx
  0x000000011536fb66:   inc    edx
  0x000000011536fb68:   mov    eax,DWORD PTR [rsp+0x80]
  0x000000011536fb6f:   cmp    ebx,DWORD PTR [rdi+0xc]
  0x000000011536fb72:   jae    0x00000001153700d3
  0x000000011536fb78:   movsxd rbx,ebx
  0x000000011536fb7b:   mov    BYTE PTR [rdi+rbx*1+0x10],al ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@72 (line 299)
  0x000000011536fb7f:   mov    ebx,0x0                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@76 (line 300)
  0x000000011536fb84:   nop    DWORD PTR [rax+0x0]
  0x000000011536fb88:   mov    DWORD PTR [rsp+0x90],edx
  0x000000011536fb8f:   mov    edi,DWORD PTR [rsp+0x80]
  0x000000011536fb96:   mov    rdx,QWORD PTR [rsp+0x88]
  0x000000011536fb9e:   cmp    ebx,edi
  0x000000011536fba0:   movabs r8,0x16bc1f558               ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fbaa:   movabs r9,0x1b0
  0x000000011536fbb4:   jge    0x000000011536fbc4
  0x000000011536fbba:   movabs r9,0x1c0
  0x000000011536fbc4:   mov    r11,QWORD PTR [r8+r9*1]
  0x000000011536fbc8:   lea    r11,[r11+0x1]
  0x000000011536fbcc:   mov    QWORD PTR [r8+r9*1],r11
  0x000000011536fbd0:   jge    0x000000011536ff82           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@79 (line 300)
  0x000000011536fbd6:   mov    r8,rdx
  0x000000011536fbd9:   movabs r9,0x16bc1f558               ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fbe3:   add    QWORD PTR [r9+0x1d0],0x1
  0x000000011536fbeb:   movabs r8,0x16bc10010               ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fbf5:   mov    r9d,DWORD PTR [r8+0xac]
  0x000000011536fbfc:   add    r9d,0x2
  0x000000011536fc00:   mov    DWORD PTR [r8+0xac],r9d
  0x000000011536fc07:   and    r9d,0x1ffffe
  0x000000011536fc0e:   cmp    r9d,0x0
  0x000000011536fc12:   je     0x00000001153700e1
  0x000000011536fc18:   mov    r8,rdx
  0x000000011536fc1b:   movabs r9,0x16bc10010               ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fc25:   add    QWORD PTR [r9+0xf0],0x1
  0x000000011536fc2d:   movabs r8,0x16bc0fc18               ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fc37:   mov    r9d,DWORD PTR [r8+0xac]
  0x000000011536fc3e:   add    r9d,0x2
  0x000000011536fc42:   mov    DWORD PTR [r8+0xac],r9d
  0x000000011536fc49:   and    r9d,0x1ffffe
  0x000000011536fc50:   cmp    r9d,0x0
  0x000000011536fc54:   je     0x0000000115370102
  0x000000011536fc5a:   movabs r8,0x16bc0fc18               ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fc64:   inc    DWORD PTR [r8+0x100]         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fc6b:   movsx  r8d,BYTE PTR [rdx+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fc70:   cmp    r8d,0x0
  0x000000011536fc74:   movabs r8,0x16bc0fc18               ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fc7e:   movabs r9,0x110
  0x000000011536fc88:   jne    0x000000011536fc98
  0x000000011536fc8e:   movabs r9,0x120
  0x000000011536fc98:   mov    r11,QWORD PTR [r8+r9*1]
  0x000000011536fc9c:   lea    r11,[r11+0x1]
  0x000000011536fca0:   mov    QWORD PTR [r8+r9*1],r11
  0x000000011536fca4:   jne    0x000000011536fcc6           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fcaa:   movabs r8,0x16bc0fc18               ;   {metadata(method data for {method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fcb4:   inc    DWORD PTR [r8+0x130]
  0x000000011536fcbb:   mov    r8d,0x1
  0x000000011536fcc1:   jmp    0x000000011536fccc           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fcc6:   mov    r8d,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fccc:   and    r8d,0x1
  0x000000011536fcd0:   cmp    r8d,0x0
  0x000000011536fcd4:   movabs r8,0x16bc10010               ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fcde:   movabs r9,0x128
  0x000000011536fce8:   je     0x000000011536fcf8
  0x000000011536fcee:   movabs r9,0x138
  0x000000011536fcf8:   mov    r11,QWORD PTR [r8+r9*1]
  0x000000011536fcfc:   lea    r11,[r11+0x1]
  0x000000011536fd00:   mov    QWORD PTR [r8+r9*1],r11
  0x000000011536fd04:   je     0x000000011536fdfe           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@4 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fd0a:   mov    r8d,DWORD PTR [rdx+0x14]
  0x000000011536fd0e:   shl    r8,0x3                       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@8 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fd12:   movabs r9,0x16bc10010               ;   {metadata(method data for {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fd1c:   add    QWORD PTR [r9+0x148],0x1
  0x000000011536fd24:   movabs r9,0x16bc101c0               ;   {metadata(method data for {method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536fd2e:   mov    r11d,DWORD PTR [r9+0xac]
  0x000000011536fd35:   add    r11d,0x2
  0x000000011536fd39:   mov    DWORD PTR [r9+0xac],r11d
  0x000000011536fd40:   and    r11d,0x1ffffe
  0x000000011536fd47:   cmp    r11d,0x0
  0x000000011536fd4b:   je     0x0000000115370123
  0x000000011536fd51:   mov    r9d,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x0000000115370144
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fd55:   movabs r11,0x16bc101c0              ;   {metadata(method data for {method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011536fd5f:   add    QWORD PTR [r11+0xf0],0x1
  0x000000011536fd67:   movabs r11,0x16bc10308              ;   {metadata(method data for {method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fd71:   mov    r13d,DWORD PTR [r11+0xac]
  0x000000011536fd78:   add    r13d,0x2
  0x000000011536fd7c:   mov    DWORD PTR [r11+0xac],r13d
  0x000000011536fd83:   and    r13d,0x1ffffe
  0x000000011536fd8a:   cmp    r13d,0x0
  0x000000011536fd8e:   je     0x0000000115370149
  0x000000011536fd94:   movabs r11,0x16bc10308              ;   {metadata(method data for {method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011536fd9e:   add    QWORD PTR [r11+0xf0],0x1
  0x000000011536fda6:   movabs r11,0x70391a9d0              ;   {oop(a &apos;jdk/internal/util/Preconditions$4&apos;{0x000000070391a9d0})}
  0x000000011536fdb0:   mov    r11d,0x0
  0x000000011536fdb6:   cmp    ebx,r11d
  0x000000011536fdb9:   jl     0x000000011537016a
  0x000000011536fdbf:   cmp    ebx,r9d
  0x000000011536fdc2:   jge    0x0000000115370177
  0x000000011536fdc8:   mov    r11,rbx                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fdcb:   cmp    r9d,ebx
  0x000000011536fdce:   jbe    0x0000000115370184
  0x000000011536fdd4:   movsxd r9,ebx
  0x000000011536fdd7:   movsx  r8d,BYTE PTR [r8+r9*1+0x10]  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fddd:   and    r8d,0xff
  0x000000011536fde4:   and    r8d,0xffff
  0x000000011536fdeb:   and    r8d,0xffff
  0x000000011536fdf2:   mov    DWORD PTR [rsp+0x94],ebx
  0x000000011536fdf9:   jmp    0x000000011536fe24           ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@88 (line 301)
  0x000000011536fdfe:   mov    r8d,DWORD PTR [rdx+0x14]
  0x000000011536fe02:   shl    r8,0x3                       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@17 (line 1537)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fe06:   mov    rsi,r8
  0x000000011536fe09:   mov    rdx,rbx                      ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@21 (line 1537)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
  0x000000011536fe0c:   mov    DWORD PTR [rsp+0x94],ebx
  0x000000011536fe13:   nop    DWORD PTR [rax+0x0]
  0x000000011536fe17:   call   0x000000011c900c00           ; ImmutableOopMap {[120]=Oop [136]=Oop [152]=Oop }
                                                            ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@21 (line 1537)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {static_call}
  0x000000011536fe1c:   and    eax,0xffff
  0x000000011536fe21:   mov    r8,rax                       ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@88 (line 301)
  0x000000011536fe24:   cmp    r8d,0x1
  0x000000011536fe28:   movabs rdx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fe32:   movabs rcx,0x208
  0x000000011536fe3c:   jl     0x000000011536fe4c
  0x000000011536fe42:   movabs rcx,0x218
  0x000000011536fe4c:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011536fe50:   lea    rsi,[rsi+0x1]
  0x000000011536fe54:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x000000011536fe58:   jl     0x000000011536ff25           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@93 (line 302)
  0x000000011536fe5e:   cmp    r8d,0x7f
  0x000000011536fe62:   movabs rdx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fe6c:   movabs rcx,0x228
  0x000000011536fe76:   jg     0x000000011536fe86
  0x000000011536fe7c:   movabs rcx,0x238
  0x000000011536fe86:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011536fe8a:   lea    rsi,[rsi+0x1]
  0x000000011536fe8e:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x000000011536fe92:   jg     0x000000011536ff25           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@100 (line 302)
  0x000000011536fe98:   mov    edx,DWORD PTR [rsp+0x90]
  0x000000011536fe9f:   mov    rdi,QWORD PTR [rsp+0x98]
  0x000000011536fea7:   mov    rcx,rdx
  0x000000011536feaa:   inc    ecx
  0x000000011536feac:   cmp    edx,DWORD PTR [rdi+0xc]
  0x000000011536feaf:   jae    0x0000000115370192
  0x000000011536feb5:   movsxd rdx,edx
  0x000000011536feb8:   mov    BYTE PTR [rdi+rdx*1+0x10],r8b;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@112 (line 303)
  0x000000011536febd:   movabs rdx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fec7:   inc    DWORD PTR [rdx+0x248]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@113 (line 303)
  0x000000011536fecd:   mov    ebx,DWORD PTR [rsp+0x94]
  0x000000011536fed4:   inc    ebx
  0x000000011536fed6:   movabs rdx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536fee0:   mov    r8d,DWORD PTR [rdx+0xb0]
  0x000000011536fee7:   add    r8d,0x2
  0x000000011536feeb:   mov    DWORD PTR [rdx+0xb0],r8d
  0x000000011536fef2:   and    r8d,0x3ffe
  0x000000011536fef9:   cmp    r8d,0x0
  0x000000011536fefd:   je     0x00000001153701a0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@134 (line 300)
  0x000000011536ff03:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.ByteVector::putUTF8@134 (line 300)
  0x000000011536ff0a:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011536ff0d:   movabs rdx,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536ff17:   inc    DWORD PTR [rdx+0x298]
  0x000000011536ff1d:   mov    rdx,rcx
  0x000000011536ff20:   jmp    0x000000011536fb88           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@134 (line 300)
  0x000000011536ff25:   mov    ebx,DWORD PTR [rsp+0x94]
  0x000000011536ff2c:   mov    edx,DWORD PTR [rsp+0x90]
  0x000000011536ff33:   mov    rcx,QWORD PTR [rsp+0x88]
  0x000000011536ff3b:   mov    rsi,QWORD PTR [rsp+0x78]
  0x000000011536ff40:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@118 (line 305)
  0x000000011536ff43:   mov    rdx,rsi
  0x000000011536ff46:   movabs r8,0x16bc1f558               ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011536ff50:   add    QWORD PTR [r8+0x260],0x1
  0x000000011536ff58:   mov    rdx,rcx
  0x000000011536ff5b:   mov    rcx,rbx
  0x000000011536ff5e:   mov    r8d,0xffff                   ;*invokevirtual encodeUtf8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@127 (line 306)
  0x000000011536ff64:   data16 xchg ax,ax
  0x000000011536ff67:   call   0x000000011c900600           ; ImmutableOopMap {}
                                                            ;*invokevirtual encodeUtf8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@127 (line 306)
                                                            ;   {optimized virtual_call}
  0x000000011536ff6c:   add    rsp,0xb0
  0x000000011536ff73:   pop    rbp
  0x000000011536ff74:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ff7b:   ja     0x00000001153701c1
  0x000000011536ff81:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@130 (line 306)
  0x000000011536ff82:   mov    edx,DWORD PTR [rsp+0x90]
  0x000000011536ff89:   mov    rsi,QWORD PTR [rsp+0x78]
  0x000000011536ff8e:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@139 (line 309)
  0x000000011536ff91:   mov    rax,rsi
  0x000000011536ff94:   add    rsp,0xb0
  0x000000011536ff9b:   pop    rbp
  0x000000011536ff9c:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011536ffa3:   ja     0x00000001153701d7
  0x000000011536ffa9:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@143 (line 310)
  0x000000011536ffaa:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011536ffb0:   jmp    0x00000001153701fc           ;   {no_reloc}
  0x000000011536ffb5:   add    BYTE PTR [rax],al
  0x000000011536ffb7:   add    BYTE PTR [rax],al
  0x000000011536ffb9:   add    BYTE PTR [rcx-0x75],cl
  0x000000011536ffbc:   xchg   eax,edi
  0x000000011536ffbe:   add    BYTE PTR [rax],al
  0x000000011536ffc0:   add    BYTE PTR [rax-0x73],cl
  0x000000011536ffc3:   js     0x000000011536ffed
  0x000000011536ffc5:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011536ffcc:   ja     0x0000000115370206
  0x000000011536ffd2:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011536ffd9:   mov    QWORD PTR [rax],0x1
  0x000000011536ffe0:   mov    rcx,rdx
  0x000000011536ffe3:   movabs r10,0x12ac00000
  0x000000011536ffed:   sub    rcx,r10
  0x000000011536fff0:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011536fff3:   xor    rcx,rcx
  0x000000011536fff6:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011536fff9:   xor    rcx,rcx
  0x000000011536fffc:   mov    QWORD PTR [rax+0x10],rcx
  0x0000000115370000:   mov    QWORD PTR [rax+0x18],rcx
  0x0000000115370004:   mov    QWORD PTR [rax+0x20],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 287)
  0x0000000115370008:   mov    rdx,rax
  0x000000011537000b:   movabs rsi,0x16bc1f558              ;   {metadata(method data for {method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000000115370015:   add    QWORD PTR [rsi+0x148],0x1
  0x000000011537001d:   movabs rdx,0x7ffe62810              ;   {oop(&quot;UTF8 string too large&quot;{0x00000007ffe62810})}
  0x0000000115370027:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@17 (line 287)
  0x000000011537002a:   mov    QWORD PTR [rsp+0xa0],rax
  0x0000000115370032:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000115370037:   call   0x000000011c900600           ; ImmutableOopMap {[160]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@17 (line 287)
                                                            ;   {optimized virtual_call}
  0x000000011537003c:   mov    rax,QWORD PTR [rsp+0xa0]
  0x0000000115370044:   jmp    0x0000000115370230
  0x0000000115370049:   movabs r10,0x12af6d7f8              ;   {metadata({method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000000115370053:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370058:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370060:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 285)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115370065:   jmp    0x000000011536f9b4
  0x000000011537006a:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537006f:   movabs r10,0x12ac0f1a0              ;   {metadata({method} {0x000000012ac0f1a0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000115370079:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537007e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370086:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::length@-1 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537008b:   jmp    0x000000011536f9f4
  0x0000000115370090:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115370095:   movabs r10,0x12b053ed0              ;   {metadata({method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011537009f:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153700a4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153700ac:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4556)
                                                            ; - java.lang.String::length@6 (line 1499)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 285)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153700b1:   jmp    0x000000011536fa3b
  0x00000001153700b6:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop [120]=Oop [136]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@35 (line 290)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153700bb:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@63 (line 298)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153700c0:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@63 (line 298)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153700c5:   mov    QWORD PTR [rsp],rbx
  0x00000001153700c9:   mov    QWORD PTR [rsp+0x8],rdi
  0x00000001153700ce:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@63 (line 298)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153700d3:   mov    QWORD PTR [rsp],rbx
  0x00000001153700d7:   mov    QWORD PTR [rsp+0x8],rdi
  0x00000001153700dc:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@72 (line 299)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153700e1:   movabs r10,0x12ac0f1f8              ;   {metadata({method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000001153700eb:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153700f0:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153700f8:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::charAt@-1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153700fd:   jmp    0x000000011536fc18
  0x0000000115370102:   movabs r10,0x12b053320              ;   {metadata({method} {0x000000012b053320} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011537010c:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370111:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370119:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537011e:   jmp    0x000000011536fc5a
  0x0000000115370123:   movabs r10,0x12ac24c18              ;   {metadata({method} {0x000000012ac24c18} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011537012d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370132:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537013a:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537013f:   jmp    0x000000011536fd51
  0x0000000115370144:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115370149:   movabs r10,0x12b0544a8              ;   {metadata({method} {0x000000012b0544a8} &apos;checkIndex&apos; &apos;(II)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115370153:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370158:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370160:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::checkIndex@-1 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115370165:   jmp    0x000000011536fd94
  0x000000011537016a:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x0000000115370172:   call   0x000000011c9bfe80           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x0000000115370177:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011537017f:   call   0x000000011c9bfe80           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x0000000115370184:   mov    QWORD PTR [rsp],rbx
  0x0000000115370188:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011537018d:   call   0x000000011c9bb800           ; ImmutableOopMap {rdx=Oop r8=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@85 (line 301)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115370192:   mov    QWORD PTR [rsp],rdx
  0x0000000115370196:   mov    QWORD PTR [rsp+0x8],rdi
  0x000000011537019b:   call   0x000000011c9bb800           ; ImmutableOopMap {rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@112 (line 303)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153701a0:   movabs r10,0x12af6d7f8              ;   {metadata({method} {0x000000012af6d7f8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000001153701aa:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153701af:   mov    QWORD PTR [rsp],0x86
  0x00000001153701b7:   call   0x000000011c9c1480           ; ImmutableOopMap {rdi=Oop [120]=Oop [136]=Oop [152]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.ByteVector::putUTF8@134 (line 300)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153701bc:   jmp    0x000000011536ff03
  0x00000001153701c1:   movabs r10,0x11536ff74              ;   {internal_word}
  0x00000001153701cb:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153701d2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153701d7:   movabs r10,0x11536ff9c              ;   {internal_word}
  0x00000001153701e1:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153701e8:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153701ed:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x00000001153701f7:   mov    eax,0xa050f00
  0x00000001153701fc:   call   0x000000011c9c0580           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 287)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000000115370201:   jmp    0x000000011536ffb0
  0x0000000115370206:   mov    rdx,rdx
  0x0000000115370209:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 287)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537020e:   jmp    0x0000000115370008
  0x0000000115370213:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537021a:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115370225:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115370230:   add    rsp,0xb0
  0x0000000115370237:   pop    rbp
  0x0000000115370238:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537023d:   hlt    
  0x000000011537023e:   hlt    
  0x000000011537023f:   hlt    
[Stub Code]
  0x0000000115370240:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x0000000115370245:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537024f:   jmp    0x000000011537024f           ;   {runtime_call}
[Exception Handler]
  0x0000000115370254:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115370259:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115370263:   and    rsp,0xfffffffffffffff0
  0x0000000115370267:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537026c:   hlt    
[Deopt Handler Code]
  0x000000011537026d:   movabs r10,0x11537026d              ;   {section_word}
  0x0000000115370277:   push   r10
  0x0000000115370279:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537027e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115370288:   jmp    0x0000000115370288           ;   {runtime_call}
  0x000000011537028d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115370297:   jmp    0x0000000115370297           ;   {runtime_call}
  0x000000011537029c:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153702a6:   jmp    0x00000001153702a6           ;   {runtime_call}
  0x00000001153702ab:   hlt    
  0x00000001153702ac:   hlt    
  0x00000001153702ad:   hlt    
  0x00000001153702ae:   hlt    
  0x00000001153702af:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='71' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce38160' size='368' address='0x000000011ce38010' relocation_offset='328' insts_offset='336' stub_offset='367' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/Object;JILjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.140'/>

Compiled method (n/a)    1139   71     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJLJIL)J (native)
 total in heap  [0x000000011ce38010,0x000000011ce38180] = 368
 relocation     [0x000000011ce38158,0x000000011ce38160] = 8
 main code      [0x000000011ce38160,0x000000011ce3817f] = 31
 stub code      [0x000000011ce3817f,0x000000011ce38180] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc20058} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;JILjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = long
  # parm4:    r9        = int
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce38160:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce38163:   mov    ebx,DWORD PTR [rdi+0x24]
  0x000000011ce38166:   shl    rbx,0x3
  0x000000011ce3816a:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3816e:   test   rbx,rbx
  0x000000011ce38171:   je     0x000000011ce3817a
  0x000000011ce38177:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3817a:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3817f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='69' compiler='c1' level='3' entry='0x0000000115370c20' size='1400' address='0x0000000115370a90' relocation_offset='328' insts_offset='400' stub_offset='1032' scopes_data_offset='1104' scopes_pcs_offset='1216' dependencies_offset='1392' metadata_offset='1080' method='jdk.internal.org.objectweb.asm.Symbol &lt;init&gt; (IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V' bytes='38' count='292' iicount='292' stamp='1.142'/>
<print_nmethod compile_id='69' compiler='c1' level='3' stamp='1.142'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1142   69       3       jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt; (38 bytes)
 total in heap  [0x0000000115370a90,0x0000000115371008] = 1400
 relocation     [0x0000000115370bd8,0x0000000115370c18] = 64
 main code      [0x0000000115370c20,0x0000000115370e98] = 632
 stub code      [0x0000000115370e98,0x0000000115370ec8] = 48
 metadata       [0x0000000115370ec8,0x0000000115370ee0] = 24
 scopes data    [0x0000000115370ee0,0x0000000115370f50] = 112
 scopes pcs     [0x0000000115370f50,0x0000000115371000] = 176
 dependencies   [0x0000000115371000,0x0000000115371008] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012afb7dc8} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V&apos; in &apos;jdk/internal/org/objectweb/asm/Symbol&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/Symbol&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;java/lang/String&apos;
  # parm3:    r9:r9     = &apos;java/lang/String&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/String&apos;
  # parm5:    [sp+0x40]   = long  (sp of caller)
  0x0000000115370c20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115370c24:   movabs r11,0x12ac00000
  0x0000000115370c2e:   add    r10,r11
  0x0000000115370c31:   cmp    r10,rax
  0x0000000115370c34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115370c3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115370c40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115370c47:   push   rbp
  0x0000000115370c48:   sub    rsp,0x30
  0x0000000115370c4c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115370c54:   je     0x0000000115370c5b
  0x0000000115370c56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115370c5b:   movabs rbx,0x16bc200c0              ;   {metadata(method data for {method} {0x000000012afb7dc8} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V&apos; in &apos;jdk/internal/org/objectweb/asm/Symbol&apos;)}
  0x0000000115370c65:   mov    eax,DWORD PTR [rbx+0xac]
  0x0000000115370c6b:   add    eax,0x2
  0x0000000115370c6e:   mov    DWORD PTR [rbx+0xac],eax
  0x0000000115370c74:   and    eax,0x7fe
  0x0000000115370c79:   cmp    eax,0x0
  0x0000000115370c7c:   je     0x0000000115370d6d           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@0 (line 252)
  0x0000000115370c82:   mov    rbx,QWORD PTR [rsp+0x40]
  0x0000000115370c87:   mov    rax,rsi
  0x0000000115370c8a:   movabs r11,0x16bc200c0              ;   {metadata(method data for {method} {0x000000012afb7dc8} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V&apos; in &apos;jdk/internal/org/objectweb/asm/Symbol&apos;)}
  0x0000000115370c94:   add    QWORD PTR [r11+0xf0],0x1
  0x0000000115370c9c:   movabs rax,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115370ca6:   mov    r11d,DWORD PTR [rax+0xac]
  0x0000000115370cad:   add    r11d,0x2
  0x0000000115370cb1:   mov    DWORD PTR [rax+0xac],r11d
  0x0000000115370cb8:   and    r11d,0x1ffffe
  0x0000000115370cbf:   cmp    r11d,0x0
  0x0000000115370cc3:   je     0x0000000115370d8e
  0x0000000115370cc9:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield index {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@6 (line 253)
  0x0000000115370ccc:   mov    DWORD PTR [rsi+0x18],ecx     ;*putfield tag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@11 (line 254)
  0x0000000115370ccf:   movsx  eax,BYTE PTR [r15+0x40]
  0x0000000115370cd4:   cmp    eax,0x0
  0x0000000115370cd7:   jne    0x0000000115370daf
  0x0000000115370cdd:   mov    r10,r8
  0x0000000115370ce0:   shr    r10,0x3
  0x0000000115370ce4:   mov    DWORD PTR [rsi+0x20],r10d
  0x0000000115370ce8:   mov    rax,rsi
  0x0000000115370ceb:   xor    rax,r8
  0x0000000115370cee:   shr    rax,0x15
  0x0000000115370cf2:   cmp    rax,0x0
  0x0000000115370cf6:   jne    0x0000000115370dce           ;*putfield owner {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@16 (line 255)
  0x0000000115370cfc:   movsx  eax,BYTE PTR [r15+0x40]
  0x0000000115370d01:   cmp    eax,0x0
  0x0000000115370d04:   jne    0x0000000115370de6
  0x0000000115370d0a:   mov    r10,r9
  0x0000000115370d0d:   shr    r10,0x3
  0x0000000115370d11:   mov    DWORD PTR [rsi+0x24],r10d
  0x0000000115370d15:   mov    rax,rsi
  0x0000000115370d18:   xor    rax,r9
  0x0000000115370d1b:   shr    rax,0x15
  0x0000000115370d1f:   cmp    rax,0x0
  0x0000000115370d23:   jne    0x0000000115370e05           ;*putfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@22 (line 256)
  0x0000000115370d29:   movsx  eax,BYTE PTR [r15+0x40]
  0x0000000115370d2e:   cmp    eax,0x0
  0x0000000115370d31:   jne    0x0000000115370e1d
  0x0000000115370d37:   mov    r10,rdi
  0x0000000115370d3a:   shr    r10,0x3
  0x0000000115370d3e:   mov    DWORD PTR [rsi+0x28],r10d
  0x0000000115370d42:   mov    rax,rsi
  0x0000000115370d45:   xor    rax,rdi
  0x0000000115370d48:   shr    rax,0x15
  0x0000000115370d4c:   cmp    rax,0x0
  0x0000000115370d50:   jne    0x0000000115370e3c           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@28 (line 257)
  0x0000000115370d56:   mov    QWORD PTR [rsi+0x10],rbx     ;*putfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@34 (line 258)
  0x0000000115370d5a:   add    rsp,0x30
  0x0000000115370d5e:   pop    rbp
  0x0000000115370d5f:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115370d66:   ja     0x0000000115370e54
  0x0000000115370d6c:   ret    
  0x0000000115370d6d:   movabs r10,0x12afb7dc8              ;   {metadata({method} {0x000000012afb7dc8} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V&apos; in &apos;jdk/internal/org/objectweb/asm/Symbol&apos;)}
  0x0000000115370d77:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370d7c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370d84:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop r8=Oop r9=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@-1 (line 252)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115370d89:   jmp    0x0000000115370c82
  0x0000000115370d8e:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115370d98:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115370d9d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115370da5:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop r8=Oop r9=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - jdk.internal.org.objectweb.asm.Symbol::&lt;init&gt;@1 (line 252)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115370daa:   jmp    0x0000000115370cc9
  0x0000000115370daf:   mov    eax,DWORD PTR [rsi+0x20]
  0x0000000115370db2:   shl    rax,0x3
  0x0000000115370db6:   cmp    rax,0x0
  0x0000000115370dba:   je     0x0000000115370cdd
  0x0000000115370dc0:   mov    QWORD PTR [rsp],rax
  0x0000000115370dc4:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115370dc9:   jmp    0x0000000115370cdd
  0x0000000115370dce:   cmp    r8,0x0
  0x0000000115370dd2:   je     0x0000000115370cfc
  0x0000000115370dd8:   mov    QWORD PTR [rsp],rsi
  0x0000000115370ddc:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115370de1:   jmp    0x0000000115370cfc
  0x0000000115370de6:   mov    eax,DWORD PTR [rsi+0x24]
  0x0000000115370de9:   shl    rax,0x3
  0x0000000115370ded:   cmp    rax,0x0
  0x0000000115370df1:   je     0x0000000115370d0a
  0x0000000115370df7:   mov    QWORD PTR [rsp],rax
  0x0000000115370dfb:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115370e00:   jmp    0x0000000115370d0a
  0x0000000115370e05:   cmp    r9,0x0
  0x0000000115370e09:   je     0x0000000115370d29
  0x0000000115370e0f:   mov    QWORD PTR [rsp],rsi
  0x0000000115370e13:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115370e18:   jmp    0x0000000115370d29
  0x0000000115370e1d:   mov    eax,DWORD PTR [rsi+0x28]
  0x0000000115370e20:   shl    rax,0x3
  0x0000000115370e24:   cmp    rax,0x0
  0x0000000115370e28:   je     0x0000000115370d37
  0x0000000115370e2e:   mov    QWORD PTR [rsp],rax
  0x0000000115370e32:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115370e37:   jmp    0x0000000115370d37
  0x0000000115370e3c:   cmp    rdi,0x0
  0x0000000115370e40:   je     0x0000000115370d56
  0x0000000115370e46:   mov    QWORD PTR [rsp],rsi
  0x0000000115370e4a:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115370e4f:   jmp    0x0000000115370d56
  0x0000000115370e54:   movabs r10,0x115370d5f              ;   {internal_word}
  0x0000000115370e5e:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115370e65:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115370e6a:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115370e71:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115370e7c:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115370e87:   add    rsp,0x30
  0x0000000115370e8b:   pop    rbp
  0x0000000115370e8c:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115370e91:   hlt    
  0x0000000115370e92:   hlt    
  0x0000000115370e93:   hlt    
  0x0000000115370e94:   hlt    
  0x0000000115370e95:   hlt    
  0x0000000115370e96:   hlt    
  0x0000000115370e97:   hlt    
[Exception Handler]
  0x0000000115370e98:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115370e9d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115370ea7:   and    rsp,0xfffffffffffffff0
  0x0000000115370eab:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115370eb0:   hlt    
[Deopt Handler Code]
  0x0000000115370eb1:   movabs r10,0x115370eb1              ;   {section_word}
  0x0000000115370ebb:   push   r10
  0x0000000115370ebd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115370ec2:   hlt    
  0x0000000115370ec3:   hlt    
  0x0000000115370ec4:   hlt    
  0x0000000115370ec5:   hlt    
  0x0000000115370ec6:   hlt    
  0x0000000115370ec7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='72' method='jdk.internal.org.objectweb.asm.SymbolTable$Entry &lt;init&gt; (IILjava/lang/String;I)V' bytes='17' count='256' iicount='256' level='3' stamp='1.153' comment='tiered' hot_count='256'/>
<task_queued compile_id='73' method='jdk.internal.org.objectweb.asm.SymbolTable hash (ILjava/lang/String;)I' bytes='10' count='384' iicount='384' level='3' stamp='1.153' comment='tiered' hot_count='384'/>
<writer thread='23555'/>
<nmethod compile_id='63' compiler='c1' level='3' entry='0x0000000115371240' size='1704' address='0x0000000115371090' relocation_offset='328' insts_offset='432' stub_offset='1104' scopes_data_offset='1200' scopes_pcs_offset='1352' dependencies_offset='1672' nul_chk_table_offset='1680' metadata_offset='1184' method='java.lang.String getBytes ([BIB)V' bytes='44' count='291' iicount='291' stamp='1.154'/>
<print_nmethod compile_id='63' compiler='c1' level='3' stamp='1.154'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1153   63       3       java.lang.String::getBytes (44 bytes)
 total in heap  [0x0000000115371090,0x0000000115371738] = 1704
 relocation     [0x00000001153711d8,0x0000000115371240] = 104
 main code      [0x0000000115371240,0x00000001153714e0] = 672
 stub code      [0x00000001153714e0,0x0000000115371530] = 80
 metadata       [0x0000000115371530,0x0000000115371540] = 16
 scopes data    [0x0000000115371540,0x00000001153715d8] = 152
 scopes pcs     [0x00000001153715d8,0x0000000115371718] = 320
 dependencies   [0x0000000115371718,0x0000000115371720] = 8
 nul chk table  [0x0000000115371720,0x0000000115371738] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = byte
  #           [sp+0x60]  (sp of caller)
  0x0000000115371240:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115371244:   movabs r11,0x12ac00000
  0x000000011537124e:   add    r10,r11
  0x0000000115371251:   cmp    r10,rax
  0x0000000115371254:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537125a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115371260:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115371267:   push   rbp
  0x0000000115371268:   sub    rsp,0x50
  0x000000011537126c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115371274:   je     0x000000011537127b
  0x0000000115371276:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537127b:   mov    rdi,rdx
  0x000000011537127e:   mov    rbx,rcx
  0x0000000115371281:   movabs rcx,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537128b:   mov    edx,DWORD PTR [rcx+0xac]
  0x0000000115371291:   add    edx,0x2
  0x0000000115371294:   mov    DWORD PTR [rcx+0xac],edx
  0x000000011537129a:   and    edx,0x7fe
  0x00000001153712a0:   cmp    edx,0x0
  0x00000001153712a3:   je     0x000000011537142f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@0 (line 4468)
  0x00000001153712a9:   mov    rcx,rsi
  0x00000001153712ac:   movabs rdx,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001153712b6:   add    QWORD PTR [rdx+0xf0],0x1
  0x00000001153712be:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153712c8:   mov    edx,DWORD PTR [rcx+0xac]
  0x00000001153712ce:   add    edx,0x2
  0x00000001153712d1:   mov    DWORD PTR [rcx+0xac],edx
  0x00000001153712d7:   and    edx,0x1ffffe
  0x00000001153712dd:   cmp    edx,0x0
  0x00000001153712e0:   je     0x0000000115371450
  0x00000001153712e6:   movabs rcx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00000001153712f0:   inc    DWORD PTR [rcx+0x100]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4556)
                                                            ; - java.lang.String::getBytes@1 (line 4468)
  0x00000001153712f6:   movsx  ecx,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4556)
                                                            ; - java.lang.String::getBytes@1 (line 4468)
  0x00000001153712fa:   movabs rdx,0x16bc0f5c8              ;   {metadata(method data for {method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x0000000115371304:   inc    DWORD PTR [rdx+0x110]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4556)
                                                            ; - java.lang.String::getBytes@1 (line 4468)
  0x000000011537130a:   shl    ecx,0x18
  0x000000011537130d:   sar    ecx,0x18
  0x0000000115371310:   cmp    ecx,r8d
  0x0000000115371313:   movabs rcx,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537131d:   movabs rdx,0x128
  0x0000000115371327:   jne    0x0000000115371337
  0x000000011537132d:   movabs rdx,0x138
  0x0000000115371337:   mov    r9,QWORD PTR [rcx+rdx*1]
  0x000000011537133b:   lea    r9,[r9+0x1]
  0x000000011537133f:   mov    QWORD PTR [rcx+rdx*1],r9
  0x0000000115371343:   jne    0x00000001153713ec           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@5 (line 4468)
  0x0000000115371349:   mov    esi,DWORD PTR [rsi+0x14]
  0x000000011537134c:   shl    rsi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@9 (line 4469)
  0x0000000115371350:   mov    r9d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000115371471
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@21 (line 4469)
  0x0000000115371354:   movabs rcx,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537135e:   add    QWORD PTR [rcx+0x148],0x1
  0x0000000115371366:   mov    rcx,r8
  0x0000000115371369:   shl    ebx,cl
  0x000000011537136b:   mov    edx,0x0
  0x0000000115371370:   mov    rcx,rdi
  0x0000000115371373:   mov    r8,rbx
  0x0000000115371376:   test   rcx,rcx
  0x0000000115371379:   je     0x0000000115371476
  0x000000011537137f:   test   r8d,r8d
  0x0000000115371382:   jl     0x0000000115371476
  0x0000000115371388:   lea    rdi,[r8+r9*1]
  0x000000011537138c:   cmp    edi,DWORD PTR [rcx+0xc]
  0x000000011537138f:   ja     0x0000000115371476
  0x0000000115371395:   movsxd rdx,edx
  0x0000000115371398:   movsxd r8,r8d
  0x000000011537139b:   lea    rdi,[rsi+rdx*1+0x10]
  0x00000001153713a0:   lea    rsi,[rcx+r8*1+0x10]
  0x00000001153713a5:   mov    rdx,r9
  0x00000001153713a8:   test   spl,0xf
  0x00000001153713ac:   je     0x00000001153713c4
  0x00000001153713b2:   sub    rsp,0x8
  0x00000001153713b6:   call   Stub::jbyte_arraycopy        ;   {runtime_call StubRoutines (2)}
  0x00000001153713bb:   add    rsp,0x8
  0x00000001153713bf:   jmp    0x00000001153713c9
  0x00000001153713c4:   call   Stub::jbyte_arraycopy        ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@22 (line 4469)
                                                            ;   {runtime_call StubRoutines (2)}
  0x00000001153713c9:   movabs rsi,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001153713d3:   inc    DWORD PTR [rsi+0x158]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@25 (line 4469)
  0x00000001153713d9:   add    rsp,0x50
  0x00000001153713dd:   pop    rbp
  0x00000001153713de:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153713e5:   ja     0x0000000115371481
  0x00000001153713eb:   ret    
  0x00000001153713ec:   mov    esi,DWORD PTR [rsi+0x14]
  0x00000001153713ef:   shl    rsi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@29 (line 4471)
  0x00000001153713f3:   mov    r9d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000115371497
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@39 (line 4471)
  0x00000001153713f7:   movabs rdx,0x16bc20288              ;   {metadata(method data for {method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115371401:   add    QWORD PTR [rdx+0x170],0x1
  0x0000000115371409:   mov    edx,0x0
  0x000000011537140e:   mov    rcx,rdi
  0x0000000115371411:   mov    r8,rbx                       ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@40 (line 4471)
  0x0000000115371414:   data16 xchg ax,ax
  0x0000000115371417:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@40 (line 4471)
                                                            ;   {static_call}
  0x000000011537141c:   add    rsp,0x50
  0x0000000115371420:   pop    rbp
  0x0000000115371421:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115371428:   ja     0x000000011537149c
  0x000000011537142e:   ret    
  0x000000011537142f:   movabs r10,0x12b052fb0              ;   {metadata({method} {0x000000012b052fb0} &apos;getBytes&apos; &apos;([BIB)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115371439:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537143e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115371446:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::getBytes@-1 (line 4468)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537144b:   jmp    0x00000001153712a9
  0x0000000115371450:   movabs r10,0x12b053ed0              ;   {metadata({method} {0x000000012b053ed0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011537145a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537145f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115371467:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4556)
                                                            ; - java.lang.String::getBytes@1 (line 4468)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537146c:   jmp    0x00000001153712e6
  0x0000000115371471:   call   0x000000011c9bc100           ; ImmutableOopMap {rdi=Oop rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@21 (line 4469)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115371476:   nop
  0x0000000115371477:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@22 (line 4469)
                                                            ;   {static_call}
  0x000000011537147c:   jmp    0x00000001153713c9
  0x0000000115371481:   movabs r10,0x1153713de              ;   {internal_word}
  0x000000011537148b:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115371492:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115371497:   call   0x000000011c9bc100           ; ImmutableOopMap {rdi=Oop rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@39 (line 4471)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537149c:   movabs r10,0x115371421              ;   {internal_word}
  0x00000001153714a6:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153714ad:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153714b2:   mov    rax,QWORD PTR [r15+0x428]
  0x00000001153714b9:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153714c4:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153714cf:   add    rsp,0x50
  0x00000001153714d3:   pop    rbp
  0x00000001153714d4:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001153714d9:   hlt    
  0x00000001153714da:   hlt    
  0x00000001153714db:   hlt    
  0x00000001153714dc:   hlt    
  0x00000001153714dd:   hlt    
  0x00000001153714de:   hlt    
  0x00000001153714df:   hlt    
[Stub Code]
  0x00000001153714e0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00000001153714e5:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153714ef:   jmp    0x00000001153714ef           ;   {runtime_call}
[Exception Handler]
  0x00000001153714f4:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000001153714f9:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115371503:   and    rsp,0xfffffffffffffff0
  0x0000000115371507:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537150c:   hlt    
[Deopt Handler Code]
  0x000000011537150d:   movabs r10,0x11537150d              ;   {section_word}
  0x0000000115371517:   push   r10
  0x0000000115371519:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537151e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115371528:   jmp    0x0000000115371528           ;   {runtime_call}
  0x000000011537152d:   hlt    
  0x000000011537152e:   hlt    
  0x000000011537152f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='74' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='8' count='256' iicount='256' level='3' stamp='1.189' comment='tiered' hot_count='256'/>
<task_queued compile_id='75' method='sun.invoke.util.Wrapper basicTypeChar ()C' bytes='5' count='128' iicount='128' level='1' stamp='1.189' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='73' compiler='c1' level='3' entry='0x0000000115371920' size='896' address='0x0000000115371790' relocation_offset='328' insts_offset='400' stub_offset='632' scopes_data_offset='704' scopes_pcs_offset='760' dependencies_offset='872' nul_chk_table_offset='880' metadata_offset='696' method='jdk.internal.org.objectweb.asm.SymbolTable hash (ILjava/lang/String;)I' bytes='10' count='421' iicount='421' stamp='1.189'/>
<print_nmethod compile_id='73' compiler='c1' level='3' stamp='1.189'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1189   73       3       jdk.internal.org.objectweb.asm.SymbolTable::hash (10 bytes)
 total in heap  [0x0000000115371790,0x0000000115371b10] = 896
 relocation     [0x00000001153718d8,0x0000000115371918] = 64
 main code      [0x0000000115371920,0x0000000115371a08] = 232
 stub code      [0x0000000115371a08,0x0000000115371a48] = 64
 metadata       [0x0000000115371a48,0x0000000115371a50] = 8
 scopes data    [0x0000000115371a50,0x0000000115371a88] = 56
 scopes pcs     [0x0000000115371a88,0x0000000115371af8] = 112
 dependencies   [0x0000000115371af8,0x0000000115371b00] = 8
 nul chk table  [0x0000000115371b00,0x0000000115371b10] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115371920:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115371927:   push   rbp
  0x0000000115371928:   sub    rsp,0x30
  0x000000011537192c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115371934:   je     0x000000011537193b
  0x0000000115371936:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537193b:   movabs rdi,0x16bc205c0              ;   {metadata(method data for {method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115371945:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537194b:   add    ebx,0x2
  0x000000011537194e:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115371954:   and    ebx,0x7fe
  0x000000011537195a:   cmp    ebx,0x0
  0x000000011537195d:   je     0x00000001153719a8           ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@0 (line 1273)
  0x0000000115371963:   mov    DWORD PTR [rsp+0x20],esi
  0x0000000115371967:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x00000001153719c6
  0x000000011537196a:   mov    rdi,rdx
  0x000000011537196d:   movabs rbx,0x16bc205c0              ;   {metadata(method data for {method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115371977:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011537197f:   mov    rsi,rdx                      ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
  0x0000000115371982:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000115371987:   call   0x000000011536b9e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
                                                            ;   {optimized virtual_call}
  0x000000011537198c:   add    eax,DWORD PTR [rsp+0x20]
  0x0000000115371990:   and    eax,0x7fffffff
  0x0000000115371995:   add    rsp,0x30
  0x0000000115371999:   pop    rbp
  0x000000011537199a:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153719a1:   ja     0x00000001153719cb
  0x00000001153719a7:   ret    
  0x00000001153719a8:   movabs r10,0x12af6fa80              ;   {metadata({method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153719b2:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153719b7:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153719bf:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@-1 (line 1273)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153719c4:   jmp    0x0000000115371963
  0x00000001153719c6:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153719cb:   movabs r10,0x11537199a              ;   {internal_word}
  0x00000001153719d5:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153719dc:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153719e1:   mov    rax,QWORD PTR [r15+0x428]
  0x00000001153719e8:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153719f3:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153719fe:   add    rsp,0x30
  0x0000000115371a02:   pop    rbp
  0x0000000115371a03:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x0000000115371a08:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115371a0d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115371a17:   and    rsp,0xfffffffffffffff0
  0x0000000115371a1b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115371a20:   hlt    
[Deopt Handler Code]
  0x0000000115371a21:   movabs r10,0x115371a21              ;   {section_word}
  0x0000000115371a2b:   push   r10
  0x0000000115371a2d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115371a32:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115371a3c:   jmp    0x0000000115371a3c           ;   {runtime_call}
  0x0000000115371a41:   hlt    
  0x0000000115371a42:   hlt    
  0x0000000115371a43:   hlt    
  0x0000000115371a44:   hlt    
  0x0000000115371a45:   hlt    
  0x0000000115371a46:   hlt    
  0x0000000115371a47:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='76' method='jdk.internal.org.objectweb.asm.SymbolTable put (Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='150' count='384' iicount='384' level='3' stamp='1.193' comment='tiered' hot_count='384'/>
<nmethod compile_id='77' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce38460' size='368' address='0x000000011ce38310' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.194'/>

Compiled method (n/a)    1193   77     n 0       java.lang.invoke.MethodHandle::linkToStatic(JL)L (native)
 total in heap  [0x000000011ce38310,0x000000011ce38480] = 368
 relocation     [0x000000011ce38458,0x000000011ce38460] = 8
 main code      [0x000000011ce38460,0x000000011ce3847c] = 28
 stub code      [0x000000011ce3847c,0x000000011ce38480] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc20960} &apos;linkToStatic&apos; &apos;(JLjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce38460:   mov    ebx,DWORD PTR [rdx+0x24]
  0x000000011ce38463:   shl    rbx,0x3
  0x000000011ce38467:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3846b:   test   rbx,rbx
  0x000000011ce3846e:   je     0x000000011ce38477
  0x000000011ce38474:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce38477:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3847c:   hlt    
  0x000000011ce3847d:   hlt    
  0x000000011ce3847e:   hlt    
  0x000000011ce3847f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='72' compiler='c1' level='3' entry='0x0000000115371d20' size='976' address='0x0000000115371b90' relocation_offset='328' insts_offset='400' stub_offset='712' scopes_data_offset='792' scopes_pcs_offset='856' dependencies_offset='968' metadata_offset='776' method='jdk.internal.org.objectweb.asm.SymbolTable$Entry &lt;init&gt; (IILjava/lang/String;I)V' bytes='17' count='311' iicount='311' stamp='1.195'/>
<print_nmethod compile_id='72' compiler='c1' level='3' stamp='1.195'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1194   72       3       jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt; (17 bytes)
 total in heap  [0x0000000115371b90,0x0000000115371f60] = 976
 relocation     [0x0000000115371cd8,0x0000000115371d18] = 64
 main code      [0x0000000115371d20,0x0000000115371e58] = 312
 stub code      [0x0000000115371e58,0x0000000115371e98] = 64
 metadata       [0x0000000115371e98,0x0000000115371ea8] = 16
 scopes data    [0x0000000115371ea8,0x0000000115371ee8] = 64
 scopes pcs     [0x0000000115371ee8,0x0000000115371f58] = 112
 dependencies   [0x0000000115371f58,0x0000000115371f60] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012afb7878} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;I)V&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;java/lang/String&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000115371d20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115371d24:   movabs r11,0x12ac00000
  0x0000000115371d2e:   add    r10,r11
  0x0000000115371d31:   cmp    r10,rax
  0x0000000115371d34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115371d3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115371d40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115371d47:   push   rbp
  0x0000000115371d48:   sub    rsp,0x60
  0x0000000115371d4c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115371d54:   je     0x0000000115371d5b
  0x0000000115371d56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115371d5b:   mov    rdi,r8
  0x0000000115371d5e:   movabs r8,0x16bc20730               ;   {metadata(method data for {method} {0x000000012afb7878} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;I)V&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;)}
  0x0000000115371d68:   mov    ebx,DWORD PTR [r8+0xac]
  0x0000000115371d6f:   add    ebx,0x2
  0x0000000115371d72:   mov    DWORD PTR [r8+0xac],ebx
  0x0000000115371d79:   and    ebx,0x7fe
  0x0000000115371d7f:   cmp    ebx,0x0
  0x0000000115371d82:   je     0x0000000115371df5           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt;@0 (line 1334)
  0x0000000115371d88:   mov    DWORD PTR [rsp+0x50],r9d
  0x0000000115371d8d:   mov    r8,rsi
  0x0000000115371d90:   movabs rbx,0x16bc20730              ;   {metadata(method data for {method} {0x000000012afb7878} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;I)V&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;)}
  0x0000000115371d9a:   add    QWORD PTR [rbx+0xf0],0x1
  0x0000000115371da2:   movabs r8,0x0                       ;   {oop(NULL)}
  0x0000000115371dac:   movabs r9,0x0                       ;   {oop(NULL)}
  0x0000000115371db6:   movabs r10,0x0
  0x0000000115371dc0:   mov    QWORD PTR [rsp],r10
  0x0000000115371dc4:   mov    rax,rsi
  0x0000000115371dc7:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt;@7 (line 1334)
  0x0000000115371dca:   mov    QWORD PTR [rsp+0x48],rax
  0x0000000115371dcf:   call   0x000000011c900600           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt;@7 (line 1334)
                                                            ;   {optimized virtual_call}
  0x0000000115371dd4:   mov    rsi,QWORD PTR [rsp+0x48]
  0x0000000115371dd9:   mov    r9d,DWORD PTR [rsp+0x50]
  0x0000000115371dde:   mov    DWORD PTR [rsi+0x2c],r9d     ;*putfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt;@13 (line 1335)
  0x0000000115371de2:   add    rsp,0x60
  0x0000000115371de6:   pop    rbp
  0x0000000115371de7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115371dee:   ja     0x0000000115371e16
  0x0000000115371df4:   ret    
  0x0000000115371df5:   movabs r10,0x12afb7878              ;   {metadata({method} {0x000000012afb7878} &apos;&lt;init&gt;&apos; &apos;(IILjava/lang/String;I)V&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;)}
  0x0000000115371dff:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115371e04:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115371e0c:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable$Entry::&lt;init&gt;@-1 (line 1334)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115371e11:   jmp    0x0000000115371d88
  0x0000000115371e16:   movabs r10,0x115371de7              ;   {internal_word}
  0x0000000115371e20:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115371e27:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115371e2c:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115371e33:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115371e3e:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115371e49:   add    rsp,0x60
  0x0000000115371e4d:   pop    rbp
  0x0000000115371e4e:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115371e53:   hlt    
  0x0000000115371e54:   hlt    
  0x0000000115371e55:   hlt    
  0x0000000115371e56:   hlt    
  0x0000000115371e57:   hlt    
[Exception Handler]
  0x0000000115371e58:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115371e5d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115371e67:   and    rsp,0xfffffffffffffff0
  0x0000000115371e6b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115371e70:   hlt    
[Deopt Handler Code]
  0x0000000115371e71:   movabs r10,0x115371e71              ;   {section_word}
  0x0000000115371e7b:   push   r10
  0x0000000115371e7d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115371e82:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115371e8c:   jmp    0x0000000115371e8c           ;   {runtime_call}
  0x0000000115371e91:   hlt    
  0x0000000115371e92:   hlt    
  0x0000000115371e93:   hlt    
  0x0000000115371e94:   hlt    
  0x0000000115371e95:   hlt    
  0x0000000115371e96:   hlt    
  0x0000000115371e97:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='78' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce38760' size='384' address='0x000000011ce38610' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (J)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.200'/>

Compiled method (n/a)    1199   78     n 0       java.lang.invoke.MethodHandle::invokeBasic(J)L (native)
 total in heap  [0x000000011ce38610,0x000000011ce38790] = 384
 relocation     [0x000000011ce38758,0x000000011ce38760] = 8
 main code      [0x000000011ce38760,0x000000011ce3878a] = 42
 stub code      [0x000000011ce3878a,0x000000011ce38790] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc20b68} &apos;invokeBasic&apos; &apos;(J)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  #           [sp+0x0]  (sp of caller)
  0x000000011ce38760:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce38763:   shl    rbx,0x3
  0x000000011ce38767:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3876a:   shl    rbx,0x3
  0x000000011ce3876e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce38771:   shl    rbx,0x3
  0x000000011ce38775:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce38779:   test   rbx,rbx
  0x000000011ce3877c:   je     0x000000011ce38785
  0x000000011ce38782:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce38785:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3878a:   hlt    
  0x000000011ce3878b:   hlt    
  0x000000011ce3878c:   hlt    
  0x000000011ce3878d:   hlt    
  0x000000011ce3878e:   hlt    
  0x000000011ce3878f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='74' compiler='c1' level='3' entry='0x0000000115372120' size='1096' address='0x0000000115371f90' relocation_offset='328' insts_offset='400' stub_offset='808' scopes_data_offset='872' scopes_pcs_offset='944' dependencies_offset='1088' metadata_offset='856' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='8' count='303' iicount='303' stamp='1.201'/>
<print_nmethod compile_id='74' compiler='c1' level='3' stamp='1.201'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1201   74       3       java.lang.invoke.MemberName::isInvocable (8 bytes)
 total in heap  [0x0000000115371f90,0x00000001153723d8] = 1096
 relocation     [0x00000001153720d8,0x0000000115372110] = 56
 main code      [0x0000000115372120,0x00000001153722b8] = 408
 stub code      [0x00000001153722b8,0x00000001153722e8] = 48
 metadata       [0x00000001153722e8,0x00000001153722f8] = 16
 scopes data    [0x00000001153722f8,0x0000000115372340] = 72
 scopes pcs     [0x0000000115372340,0x00000001153723d0] = 144
 dependencies   [0x00000001153723d0,0x00000001153723d8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012afeec28} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000115372120:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115372124:   movabs r11,0x12ac00000
  0x000000011537212e:   add    r10,r11
  0x0000000115372131:   cmp    r10,rax
  0x0000000115372134:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537213a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115372140:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115372147:   push   rbp
  0x0000000115372148:   sub    rsp,0x40
  0x000000011537214c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115372154:   je     0x000000011537215b
  0x0000000115372156:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537215b:   movabs rax,0x16bc20bd0              ;   {metadata(method data for {method} {0x000000012afeec28} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000000115372165:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011537216b:   add    edi,0x2
  0x000000011537216e:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115372174:   and    edi,0x7fe
  0x000000011537217a:   cmp    edi,0x0
  0x000000011537217d:   je     0x0000000115372239           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::isInvocable@0 (line 454)
  0x0000000115372183:   mov    rax,rsi
  0x0000000115372186:   movabs rdi,0x16bc20bd0              ;   {metadata(method data for {method} {0x000000012afeec28} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000000115372190:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115372198:   movabs rax,0x16bc20d38              ;   {metadata(method data for {method} {0x000000012afee548} &apos;anyFlagSet&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000001153721a2:   mov    edi,DWORD PTR [rax+0xac]
  0x00000001153721a8:   add    edi,0x2
  0x00000001153721ab:   mov    DWORD PTR [rax+0xac],edi
  0x00000001153721b1:   and    edi,0x1ffffe
  0x00000001153721b7:   cmp    edi,0x0
  0x00000001153721ba:   je     0x000000011537225a
  0x00000001153721c0:   mov    eax,DWORD PTR [rsi+0xc]      ;*getfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::anyFlagSet@1 (line 340)
                                                            ; - java.lang.invoke.MemberName::isInvocable@4 (line 454)
  0x00000001153721c3:   and    eax,0x30000
  0x00000001153721c8:   cmp    eax,0x0
  0x00000001153721cb:   movabs rax,0x16bc20d38              ;   {metadata(method data for {method} {0x000000012afee548} &apos;anyFlagSet&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x00000001153721d5:   movabs rsi,0xf0
  0x00000001153721df:   je     0x00000001153721ef
  0x00000001153721e5:   movabs rsi,0x100
  0x00000001153721ef:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x00000001153721f3:   lea    rdi,[rdi+0x1]
  0x00000001153721f7:   mov    QWORD PTR [rax+rsi*1],rdi
  0x00000001153721fb:   je     0x000000011537221b           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::anyFlagSet@6 (line 340)
                                                            ; - java.lang.invoke.MemberName::isInvocable@4 (line 454)
  0x0000000115372201:   movabs rax,0x16bc20d38              ;   {metadata(method data for {method} {0x000000012afee548} &apos;anyFlagSet&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011537220b:   inc    DWORD PTR [rax+0x110]
  0x0000000115372211:   mov    eax,0x1
  0x0000000115372216:   jmp    0x0000000115372220           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::anyFlagSet@10 (line 340)
                                                            ; - java.lang.invoke.MemberName::isInvocable@4 (line 454)
  0x000000011537221b:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MemberName::anyFlagSet@14 (line 340)
                                                            ; - java.lang.invoke.MemberName::isInvocable@4 (line 454)
  0x0000000115372220:   and    eax,0x1
  0x0000000115372223:   and    eax,0x1
  0x0000000115372226:   add    rsp,0x40
  0x000000011537222a:   pop    rbp
  0x000000011537222b:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115372232:   ja     0x000000011537227b
  0x0000000115372238:   ret    
  0x0000000115372239:   movabs r10,0x12afeec28              ;   {metadata({method} {0x000000012afeec28} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000000115372243:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115372248:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115372250:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MemberName::isInvocable@-1 (line 454)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115372255:   jmp    0x0000000115372183
  0x000000011537225a:   movabs r10,0x12afee548              ;   {metadata({method} {0x000000012afee548} &apos;anyFlagSet&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x0000000115372264:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115372269:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115372271:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MemberName::anyFlagSet@-1 (line 340)
                                                            ; - java.lang.invoke.MemberName::isInvocable@4 (line 454)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115372276:   jmp    0x00000001153721c0
  0x000000011537227b:   movabs r10,0x11537222b              ;   {internal_word}
  0x0000000115372285:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537228c:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115372291:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115372298:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153722a3:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153722ae:   add    rsp,0x40
  0x00000001153722b2:   pop    rbp
  0x00000001153722b3:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x00000001153722b8:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x00000001153722bd:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x00000001153722c7:   and    rsp,0xfffffffffffffff0
  0x00000001153722cb:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001153722d0:   hlt    
[Deopt Handler Code]
  0x00000001153722d1:   movabs r10,0x1153722d1              ;   {section_word}
  0x00000001153722db:   push   r10
  0x00000001153722dd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153722e2:   hlt    
  0x00000001153722e3:   hlt    
  0x00000001153722e4:   hlt    
  0x00000001153722e5:   hlt    
  0x00000001153722e6:   hlt    
  0x00000001153722e7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='79' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce38a60' size='368' address='0x000000011ce38910' relocation_offset='328' insts_offset='336' stub_offset='367' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.206'/>

Compiled method (n/a)    1205   79     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJL)L (native)
 total in heap  [0x000000011ce38910,0x000000011ce38a80] = 368
 relocation     [0x000000011ce38a58,0x000000011ce38a60] = 8
 main code      [0x000000011ce38a60,0x000000011ce38a7f] = 31
 stub code      [0x000000011ce38a7f,0x000000011ce38a80] = 1

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc20f40} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce38a60:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce38a63:   mov    ebx,DWORD PTR [rcx+0x24]
  0x000000011ce38a66:   shl    rbx,0x3
  0x000000011ce38a6a:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce38a6e:   test   rbx,rbx
  0x000000011ce38a71:   je     0x000000011ce38a7a
  0x000000011ce38a77:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce38a7a:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce38a7f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='76' compiler='c1' level='3' entry='0x0000000115372600' size='4096' address='0x0000000115372410' relocation_offset='328' insts_offset='496' stub_offset='2688' scopes_data_offset='2744' scopes_pcs_offset='3144' dependencies_offset='4008' nul_chk_table_offset='4016' metadata_offset='2736' method='jdk.internal.org.objectweb.asm.SymbolTable put (Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='150' count='387' iicount='387' stamp='1.207'/>
<print_nmethod compile_id='76' compiler='c1' level='3' stamp='1.207'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1207   76       3       jdk.internal.org.objectweb.asm.SymbolTable::put (150 bytes)
 total in heap  [0x0000000115372410,0x0000000115373410] = 4096
 relocation     [0x0000000115372558,0x00000001153725e8] = 144
 main code      [0x0000000115372600,0x0000000115372e90] = 2192
 stub code      [0x0000000115372e90,0x0000000115372ec0] = 48
 metadata       [0x0000000115372ec0,0x0000000115372ec8] = 8
 scopes data    [0x0000000115372ec8,0x0000000115373058] = 400
 scopes pcs     [0x0000000115373058,0x00000001153733b8] = 864
 dependencies   [0x00000001153733b8,0x00000001153733c0] = 8
 nul chk table  [0x00000001153733c0,0x0000000115373410] = 80

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # parm0:    rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000115372600:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115372604:   movabs r11,0x12ac00000
  0x000000011537260e:   add    r10,r11
  0x0000000115372611:   cmp    r10,rax
  0x0000000115372614:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537261a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115372620:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115372627:   push   rbp
  0x0000000115372628:   sub    rsp,0x40
  0x000000011537262c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115372634:   je     0x000000011537263b
  0x0000000115372636:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537263b:   mov    r8,rsi
  0x000000011537263e:   mov    r9,rdx
  0x0000000115372641:   movabs rax,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537264b:   mov    edx,DWORD PTR [rax+0xac]
  0x0000000115372651:   add    edx,0x2
  0x0000000115372654:   mov    DWORD PTR [rax+0xac],edx
  0x000000011537265a:   and    edx,0x7fe
  0x0000000115372660:   cmp    edx,0x0
  0x0000000115372663:   je     0x0000000115372c67           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@0 (line 439)
  0x0000000115372669:   mov    r11d,DWORD PTR [r8+0x10]     ;*getfield entryCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@1 (line 439)
  0x000000011537266d:   mov    DWORD PTR [rsp+0x30],r11d
  0x0000000115372672:   mov    r13d,DWORD PTR [r8+0x2c]
  0x0000000115372676:   shl    r13,0x3                      ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@5 (line 439)
  0x000000011537267a:   mov    r14d,DWORD PTR [r13+0xc]     ; implicit exception: dispatches to 0x0000000115372c88
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@8 (line 439)
  0x000000011537267e:   mov    rax,r14
  0x0000000115372681:   mov    rdx,rax
  0x0000000115372684:   shl    eax,0x2
  0x0000000115372687:   sub    eax,edx
  0x0000000115372689:   mov    ebx,0x4
  0x000000011537268e:   cmp    eax,0x80000000
  0x0000000115372693:   jne    0x00000001153726a4
  0x0000000115372699:   xor    edx,edx
  0x000000011537269b:   cmp    ebx,0xffffffff
  0x000000011537269e:   je     0x00000001153726a7
  0x00000001153726a4:   cdq    
  0x00000001153726a5:   idiv   ebx                          ; implicit exception: dispatches to 0x0000000115372c8d
                                                            ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@12 (line 439)
  0x00000001153726a7:   cmp    r11d,eax
  0x00000001153726aa:   movabs rbx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153726b4:   movabs rdx,0xf0
  0x00000001153726be:   jle    0x00000001153726ce
  0x00000001153726c4:   movabs rdx,0x100
  0x00000001153726ce:   mov    rsi,QWORD PTR [rbx+rdx*1]
  0x00000001153726d2:   lea    rsi,[rsi+0x1]
  0x00000001153726d6:   mov    QWORD PTR [rbx+rdx*1],rsi
  0x00000001153726da:   jle    0x0000000115372a96           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@13 (line 439)
  0x00000001153726e0:   mov    QWORD PTR [rsp+0x28],r9
  0x00000001153726e5:   mov    rbx,r14
  0x00000001153726e8:   shl    ebx,1
  0x00000001153726ea:   inc    ebx
  0x00000001153726ec:   mov    rsi,rbx
  0x00000001153726ef:   mov    rbx,rsi
  0x00000001153726f2:   movabs rdx,0x12af6f610              ;   {metadata(&apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;[])}
  0x00000001153726fc:   mov    r9,rsi
  0x00000001153726ff:   movsxd rbx,ebx
  0x0000000115372702:   mov    rdi,rbx
  0x0000000115372705:   cmp    rbx,0xffffff
  0x000000011537270c:   ja     0x0000000115372c92
  0x0000000115372712:   movabs rsi,0x17
  0x000000011537271c:   lea    rsi,[rsi+rbx*4]
  0x0000000115372720:   and    rsi,0xfffffffffffffff8
  0x0000000115372724:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537272b:   lea    rsi,[rax+rsi*1]
  0x000000011537272f:   cmp    rsi,QWORD PTR [r15+0x108]
  0x0000000115372736:   ja     0x0000000115372c92
  0x000000011537273c:   mov    QWORD PTR [r15+0xf8],rsi
  0x0000000115372743:   sub    rsi,rax
  0x0000000115372746:   mov    QWORD PTR [rax],0x1
  0x000000011537274d:   mov    rcx,rdx
  0x0000000115372750:   movabs r10,0x12ac00000
  0x000000011537275a:   sub    rcx,r10
  0x000000011537275d:   mov    DWORD PTR [rax+0x8],ecx
  0x0000000115372760:   mov    DWORD PTR [rax+0xc],ebx
  0x0000000115372763:   sub    rsi,0x10
  0x0000000115372767:   test   rsi,rsi
  0x000000011537276a:   je     0x0000000115372781
  0x0000000115372770:   xor    rbx,rbx
  0x0000000115372773:   shr    rsi,0x3
  0x0000000115372777:   mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x000000011537277c:   dec    rsi
  0x000000011537277f:   jne    0x0000000115372777
  0x0000000115372781:   mov    rsi,rax                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@29 (line 442)
  0x0000000115372784:   dec    r14d
  0x0000000115372787:   jmp    0x0000000115372a25           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@39 (line 443)
  0x000000011537278c:   nop    DWORD PTR [rax+0x0]
  0x0000000115372790:   cmp    r14d,DWORD PTR [r13+0xc]
  0x0000000115372794:   jae    0x0000000115372c9c
  0x000000011537279a:   movsxd rax,r14d
  0x000000011537279d:   mov    eax,DWORD PTR [r13+rax*4+0x10]
  0x00000001153727a2:   shl    rax,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@50 (line 444)
  0x00000001153727a6:   jmp    0x00000001153729a3           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@53 (line 445)
  0x00000001153727ab:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00000001153727b0:   mov    eax,DWORD PTR [rdi+0x2c]     ; implicit exception: dispatches to 0x0000000115372caa
                                                            ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@60 (line 446)
  0x00000001153727b3:   cmp    eax,0x80000000
  0x00000001153727b8:   jne    0x00000001153727ca
  0x00000001153727be:   xor    edx,edx
  0x00000001153727c0:   cmp    r9d,0xffffffff
  0x00000001153727c4:   je     0x00000001153727ce
  0x00000001153727ca:   cdq    
  0x00000001153727cb:   idiv   r9d                          ; implicit exception: dispatches to 0x0000000115372caf
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@64 (line 446)
  0x00000001153727ce:   mov    eax,DWORD PTR [rdi+0x30]
  0x00000001153727d1:   shl    rax,0x3                      ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@69 (line 447)
  0x00000001153727d5:   cmp    edx,DWORD PTR [rsi+0xc]
  0x00000001153727d8:   jae    0x0000000115372cb4
  0x00000001153727de:   movsxd rbx,edx
  0x00000001153727e1:   mov    ebx,DWORD PTR [rsi+rbx*4+0x10]
  0x00000001153727e5:   shl    rbx,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@80 (line 448)
  0x00000001153727e9:   movsx  ecx,BYTE PTR [r15+0x40]
  0x00000001153727ee:   cmp    ecx,0x0
  0x00000001153727f1:   jne    0x0000000115372cc2
  0x00000001153727f7:   mov    r10,rbx
  0x00000001153727fa:   shr    r10,0x3
  0x00000001153727fe:   mov    DWORD PTR [rdi+0x30],r10d
  0x0000000115372802:   mov    rcx,rdi
  0x0000000115372805:   xor    rcx,rbx
  0x0000000115372808:   shr    rcx,0x15
  0x000000011537280c:   cmp    rcx,0x0
  0x0000000115372810:   jne    0x0000000115372ce1           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@81 (line 448)
  0x0000000115372816:   cmp    rdi,0x0
  0x000000011537281a:   jne    0x0000000115372832
  0x000000011537281c:   movabs rcx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372826:   or     BYTE PTR [rcx+0x149],0x1
  0x000000011537282d:   jmp    0x000000011537292d
  0x0000000115372832:   mov    ebx,DWORD PTR [rsi+0x8]      ; implicit exception: dispatches to 0x0000000115372cf9
  0x0000000115372835:   movabs r10,0x12ac00000
  0x000000011537283f:   add    rbx,r10
  0x0000000115372842:   mov    ecx,DWORD PTR [rdi+0x8]
  0x0000000115372845:   movabs r10,0x12ac00000
  0x000000011537284f:   add    rcx,r10
  0x0000000115372852:   mov    rbx,QWORD PTR [rbx+0xd0]
  0x0000000115372859:   cmp    rcx,rbx
  0x000000011537285c:   je     0x000000011537288c
  0x0000000115372862:   mov    r11d,DWORD PTR [rbx+0x14]
  0x0000000115372866:   cmp    rbx,QWORD PTR [rcx+r11*1]
  0x000000011537286a:   je     0x000000011537288c
  0x0000000115372870:   cmp    r11d,0x20
  0x0000000115372874:   jne    0x0000000115372916
  0x000000011537287a:   push   rcx
  0x000000011537287b:   push   rbx
  0x000000011537287c:   call   0x000000011c9bef80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000000115372881:   pop    rcx
  0x0000000115372882:   pop    rbx
  0x0000000115372883:   cmp    ebx,0x0
  0x0000000115372886:   je     0x0000000115372916
  0x000000011537288c:   movabs rcx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372896:   mov    ebx,DWORD PTR [rdi+0x8]
  0x0000000115372899:   movabs r10,0x12ac00000
  0x00000001153728a3:   add    rbx,r10
  0x00000001153728a6:   cmp    rbx,QWORD PTR [rcx+0x160]
  0x00000001153728ad:   jne    0x00000001153728bc
  0x00000001153728af:   add    QWORD PTR [rcx+0x168],0x1
  0x00000001153728b7:   jmp    0x000000011537292d
  0x00000001153728bc:   cmp    rbx,QWORD PTR [rcx+0x170]
  0x00000001153728c3:   jne    0x00000001153728d2
  0x00000001153728c5:   add    QWORD PTR [rcx+0x178],0x1
  0x00000001153728cd:   jmp    0x000000011537292d
  0x00000001153728d2:   cmp    QWORD PTR [rcx+0x160],0x0
  0x00000001153728da:   jne    0x00000001153728f3
  0x00000001153728dc:   mov    QWORD PTR [rcx+0x160],rbx
  0x00000001153728e3:   mov    QWORD PTR [rcx+0x168],0x1
  0x00000001153728ee:   jmp    0x000000011537292d
  0x00000001153728f3:   cmp    QWORD PTR [rcx+0x170],0x0
  0x00000001153728fb:   jne    0x0000000115372914
  0x00000001153728fd:   mov    QWORD PTR [rcx+0x170],rbx
  0x0000000115372904:   mov    QWORD PTR [rcx+0x178],0x1
  0x000000011537290f:   jmp    0x000000011537292d
  0x0000000115372914:   jmp    0x000000011537292d
  0x0000000115372916:   movabs rcx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372920:   sub    QWORD PTR [rcx+0x150],0x1
  0x0000000115372928:   jmp    0x0000000115372cfe
  0x000000011537292d:   movsxd rdx,edx
  0x0000000115372930:   lea    rdx,[rsi+rdx*4+0x10]
  0x0000000115372935:   movsx  ebx,BYTE PTR [r15+0x40]
  0x000000011537293a:   cmp    ebx,0x0
  0x000000011537293d:   jne    0x0000000115372d07
  0x0000000115372943:   mov    r10,rdi
  0x0000000115372946:   shr    r10,0x3
  0x000000011537294a:   mov    DWORD PTR [rdx],r10d
  0x000000011537294d:   mov    rbx,rdx
  0x0000000115372950:   xor    rbx,rdi
  0x0000000115372953:   shr    rbx,0x15
  0x0000000115372957:   cmp    rbx,0x0
  0x000000011537295b:   jne    0x0000000115372d25           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@90 (line 449)
  0x0000000115372961:   movabs rdx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537296b:   mov    edi,DWORD PTR [rdx+0xb0]
  0x0000000115372971:   add    edi,0x2
  0x0000000115372974:   mov    DWORD PTR [rdx+0xb0],edi
  0x000000011537297a:   and    edi,0x3ffe
  0x0000000115372980:   cmp    edi,0x0
  0x0000000115372983:   je     0x0000000115372d3d           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@95 (line 451)
  0x0000000115372989:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rax=Oop [40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@95 (line 451)
  0x0000000115372990:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000115372993:   movabs rdx,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537299d:   inc    DWORD PTR [rdx+0x188]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@95 (line 451)
  0x00000001153729a3:   mov    rdi,rax                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@53 (line 445)
  0x00000001153729a6:   cmp    rdi,0x0
  0x00000001153729aa:   movabs rax,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153729b4:   movabs rdx,0x140
  0x00000001153729be:   jne    0x00000001153729ce
  0x00000001153729c4:   movabs rdx,0x130
  0x00000001153729ce:   mov    rbx,QWORD PTR [rax+rdx*1]
  0x00000001153729d2:   lea    rbx,[rbx+0x1]
  0x00000001153729d6:   mov    QWORD PTR [rax+rdx*1],rbx
  0x00000001153729da:   jne    0x00000001153727b0           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@55 (line 445)
  0x00000001153729e0:   dec    r14d
  0x00000001153729e3:   movabs rax,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153729ed:   mov    edx,DWORD PTR [rax+0xb0]
  0x00000001153729f3:   add    edx,0x2
  0x00000001153729f6:   mov    DWORD PTR [rax+0xb0],edx
  0x00000001153729fc:   and    edx,0x3ffe
  0x0000000115372a02:   cmp    edx,0x0
  0x0000000115372a05:   je     0x0000000115372d5e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@101 (line 443)
  0x0000000115372a0b:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop [40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@101 (line 443)
  0x0000000115372a12:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000115372a15:   movabs rax,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372a1f:   inc    DWORD PTR [rax+0x1a0]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@101 (line 443)
  0x0000000115372a25:   cmp    r14d,0x0
  0x0000000115372a29:   movabs rax,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372a33:   movabs rdx,0x120
  0x0000000115372a3d:   jge    0x0000000115372a4d
  0x0000000115372a43:   movabs rdx,0x110
  0x0000000115372a4d:   mov    rdi,QWORD PTR [rax+rdx*1]
  0x0000000115372a51:   lea    rdi,[rdi+0x1]
  0x0000000115372a55:   mov    QWORD PTR [rax+rdx*1],rdi
  0x0000000115372a59:   jge    0x0000000115372790           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@41 (line 443)
  0x0000000115372a5f:   movsx  eax,BYTE PTR [r15+0x40]
  0x0000000115372a64:   cmp    eax,0x0
  0x0000000115372a67:   jne    0x0000000115372d7f
  0x0000000115372a6d:   mov    r10,rsi
  0x0000000115372a70:   shr    r10,0x3
  0x0000000115372a74:   mov    DWORD PTR [r8+0x2c],r10d
  0x0000000115372a78:   mov    rax,r8
  0x0000000115372a7b:   xor    rax,rsi
  0x0000000115372a7e:   shr    rax,0x15
  0x0000000115372a82:   cmp    rax,0x0
  0x0000000115372a86:   jne    0x0000000115372d9f           ;*putfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@107 (line 453)
  0x0000000115372a8c:   mov    r11d,DWORD PTR [rsp+0x30]
  0x0000000115372a91:   mov    r9,QWORD PTR [rsp+0x28]
  0x0000000115372a96:   inc    r11d
  0x0000000115372a99:   mov    DWORD PTR [r8+0x10],r11d     ;*putfield entryCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@117 (line 455)
  0x0000000115372a9d:   mov    eax,DWORD PTR [r9+0x2c]      ; implicit exception: dispatches to 0x0000000115372db7
                                                            ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@121 (line 456)
  0x0000000115372aa1:   mov    esi,DWORD PTR [r8+0x2c]
  0x0000000115372aa5:   shl    rsi,0x3                      ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@125 (line 456)
  0x0000000115372aa9:   mov    edi,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000115372dbc
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@128 (line 456)
  0x0000000115372aac:   cmp    eax,0x80000000
  0x0000000115372ab1:   jne    0x0000000115372ac2
  0x0000000115372ab7:   xor    edx,edx
  0x0000000115372ab9:   cmp    edi,0xffffffff
  0x0000000115372abc:   je     0x0000000115372ac5
  0x0000000115372ac2:   cdq    
  0x0000000115372ac3:   idiv   edi                          ; implicit exception: dispatches to 0x0000000115372dc1
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@129 (line 456)
  0x0000000115372ac5:   cmp    edx,DWORD PTR [rsi+0xc]
  0x0000000115372ac8:   jae    0x0000000115372dc6
  0x0000000115372ace:   movsxd rax,edx
  0x0000000115372ad1:   mov    eax,DWORD PTR [rsi+rax*4+0x10]
  0x0000000115372ad5:   shl    rax,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@137 (line 457)
  0x0000000115372ad9:   movsx  edi,BYTE PTR [r15+0x40]
  0x0000000115372ade:   cmp    edi,0x0
  0x0000000115372ae1:   jne    0x0000000115372dd4
  0x0000000115372ae7:   mov    r10,rax
  0x0000000115372aea:   shr    r10,0x3
  0x0000000115372aee:   mov    DWORD PTR [r9+0x30],r10d
  0x0000000115372af2:   mov    rdi,r9
  0x0000000115372af5:   xor    rdi,rax
  0x0000000115372af8:   shr    rdi,0x15
  0x0000000115372afc:   cmp    rdi,0x0
  0x0000000115372b00:   jne    0x0000000115372df4           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@138 (line 457)
  0x0000000115372b06:   cmp    r9,0x0
  0x0000000115372b0a:   jne    0x0000000115372b22
  0x0000000115372b0c:   movabs rdi,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372b16:   or     BYTE PTR [rdi+0x1b1],0x1
  0x0000000115372b1d:   jmp    0x0000000115372c1d
  0x0000000115372b22:   mov    eax,DWORD PTR [rsi+0x8]      ; implicit exception: dispatches to 0x0000000115372e0c
  0x0000000115372b25:   movabs r10,0x12ac00000
  0x0000000115372b2f:   add    rax,r10
  0x0000000115372b32:   mov    edi,DWORD PTR [r9+0x8]
  0x0000000115372b36:   movabs r10,0x12ac00000
  0x0000000115372b40:   add    rdi,r10
  0x0000000115372b43:   mov    rax,QWORD PTR [rax+0xd0]
  0x0000000115372b4a:   cmp    rdi,rax
  0x0000000115372b4d:   je     0x0000000115372b7b
  0x0000000115372b53:   mov    ebx,DWORD PTR [rax+0x14]
  0x0000000115372b56:   cmp    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115372b5a:   je     0x0000000115372b7b
  0x0000000115372b60:   cmp    ebx,0x20
  0x0000000115372b63:   jne    0x0000000115372c06
  0x0000000115372b69:   push   rdi
  0x0000000115372b6a:   push   rax
  0x0000000115372b6b:   call   0x000000011c9bef80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000000115372b70:   pop    rdi
  0x0000000115372b71:   pop    rax
  0x0000000115372b72:   cmp    eax,0x0
  0x0000000115372b75:   je     0x0000000115372c06
  0x0000000115372b7b:   movabs rdi,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372b85:   mov    eax,DWORD PTR [r9+0x8]
  0x0000000115372b89:   movabs r10,0x12ac00000
  0x0000000115372b93:   add    rax,r10
  0x0000000115372b96:   cmp    rax,QWORD PTR [rdi+0x1c8]
  0x0000000115372b9d:   jne    0x0000000115372bac
  0x0000000115372b9f:   add    QWORD PTR [rdi+0x1d0],0x1
  0x0000000115372ba7:   jmp    0x0000000115372c1d
  0x0000000115372bac:   cmp    rax,QWORD PTR [rdi+0x1d8]
  0x0000000115372bb3:   jne    0x0000000115372bc2
  0x0000000115372bb5:   add    QWORD PTR [rdi+0x1e0],0x1
  0x0000000115372bbd:   jmp    0x0000000115372c1d
  0x0000000115372bc2:   cmp    QWORD PTR [rdi+0x1c8],0x0
  0x0000000115372bca:   jne    0x0000000115372be3
  0x0000000115372bcc:   mov    QWORD PTR [rdi+0x1c8],rax
  0x0000000115372bd3:   mov    QWORD PTR [rdi+0x1d0],0x1
  0x0000000115372bde:   jmp    0x0000000115372c1d
  0x0000000115372be3:   cmp    QWORD PTR [rdi+0x1d8],0x0
  0x0000000115372beb:   jne    0x0000000115372c04
  0x0000000115372bed:   mov    QWORD PTR [rdi+0x1d8],rax
  0x0000000115372bf4:   mov    QWORD PTR [rdi+0x1e0],0x1
  0x0000000115372bff:   jmp    0x0000000115372c1d
  0x0000000115372c04:   jmp    0x0000000115372c1d
  0x0000000115372c06:   movabs rdi,0x16bc20fa8              ;   {metadata(method data for {method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372c10:   sub    QWORD PTR [rdi+0x1b8],0x1
  0x0000000115372c18:   jmp    0x0000000115372e11
  0x0000000115372c1d:   movsxd rdx,edx
  0x0000000115372c20:   lea    rax,[rsi+rdx*4+0x10]
  0x0000000115372c25:   movsx  esi,BYTE PTR [r15+0x40]
  0x0000000115372c2a:   cmp    esi,0x0
  0x0000000115372c2d:   jne    0x0000000115372e1a
  0x0000000115372c33:   mov    r10,r9
  0x0000000115372c36:   shr    r10,0x3
  0x0000000115372c3a:   mov    DWORD PTR [rax],r10d
  0x0000000115372c3d:   mov    rsi,rax
  0x0000000115372c40:   xor    rsi,r9
  0x0000000115372c43:   shr    rsi,0x15
  0x0000000115372c47:   cmp    rsi,0x0
  0x0000000115372c4b:   jne    0x0000000115372e38           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@148 (line 458)
  0x0000000115372c51:   mov    rax,r9
  0x0000000115372c54:   add    rsp,0x40
  0x0000000115372c58:   pop    rbp
  0x0000000115372c59:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115372c60:   ja     0x0000000115372e50
  0x0000000115372c66:   ret    
  0x0000000115372c67:   movabs r10,0x12af6f920              ;   {metadata({method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372c71:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115372c76:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115372c7e:   call   0x000000011c9c1480           ; ImmutableOopMap {r8=Oop r9=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@-1 (line 439)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115372c83:   jmp    0x0000000115372669
  0x0000000115372c88:   call   0x000000011c9bc100           ; ImmutableOopMap {r8=Oop r9=Oop r13=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@8 (line 439)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372c8d:   call   0x000000011c9bbe00           ; ImmutableOopMap {r8=Oop r9=Oop r13=Oop }
                                                            ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@12 (line 439)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x0000000115372c92:   call   0x000000011c9bd300           ; ImmutableOopMap {r8=Oop r13=Oop [40]=Oop }
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@29 (line 442)
                                                            ;   {runtime_call new_object_array Runtime1 stub}
  0x0000000115372c97:   jmp    0x0000000115372781
  0x0000000115372c9c:   mov    QWORD PTR [rsp],r14
  0x0000000115372ca0:   mov    QWORD PTR [rsp+0x8],r13
  0x0000000115372ca5:   call   0x000000011c9bb800           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop [40]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@50 (line 444)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115372caa:   call   0x000000011c9bc100           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rdi=Oop [40]=Oop }
                                                            ;*getfield hashCode {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@60 (line 446)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372caf:   call   0x000000011c9bbe00           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rdi=Oop [40]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@64 (line 446)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x0000000115372cb4:   mov    QWORD PTR [rsp],rdx
  0x0000000115372cb8:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000115372cbd:   call   0x000000011c9bb800           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rdi=Oop rax=Oop [40]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@80 (line 448)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115372cc2:   mov    ecx,DWORD PTR [rdi+0x30]
  0x0000000115372cc5:   shl    rcx,0x3
  0x0000000115372cc9:   cmp    rcx,0x0
  0x0000000115372ccd:   je     0x00000001153727f7
  0x0000000115372cd3:   mov    QWORD PTR [rsp],rcx
  0x0000000115372cd7:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115372cdc:   jmp    0x00000001153727f7
  0x0000000115372ce1:   cmp    rbx,0x0
  0x0000000115372ce5:   je     0x0000000115372816
  0x0000000115372ceb:   mov    QWORD PTR [rsp],rdi
  0x0000000115372cef:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115372cf4:   jmp    0x0000000115372816
  0x0000000115372cf9:   call   0x000000011c9bc100           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rdi=Oop rax=Oop [40]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@90 (line 449)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372cfe:   mov    QWORD PTR [rsp],rdi
  0x0000000115372d02:   call   0x000000011c9be200           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rdi=Oop rax=Oop [40]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@90 (line 449)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x0000000115372d07:   mov    ebx,DWORD PTR [rdx]
  0x0000000115372d09:   shl    rbx,0x3
  0x0000000115372d0d:   cmp    rbx,0x0
  0x0000000115372d11:   je     0x0000000115372943
  0x0000000115372d17:   mov    QWORD PTR [rsp],rbx
  0x0000000115372d1b:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115372d20:   jmp    0x0000000115372943
  0x0000000115372d25:   cmp    rdi,0x0
  0x0000000115372d29:   je     0x0000000115372961
  0x0000000115372d2f:   mov    QWORD PTR [rsp],rdx
  0x0000000115372d33:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115372d38:   jmp    0x0000000115372961
  0x0000000115372d3d:   movabs r10,0x12af6f920              ;   {metadata({method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372d47:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115372d4c:   mov    QWORD PTR [rsp],0x5f
  0x0000000115372d54:   call   0x000000011c9c1480           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop rax=Oop [40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@95 (line 451)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115372d59:   jmp    0x0000000115372989
  0x0000000115372d5e:   movabs r10,0x12af6f920              ;   {metadata({method} {0x000000012af6f920} &apos;put&apos; &apos;(Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115372d68:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115372d6d:   mov    QWORD PTR [rsp],0x65
  0x0000000115372d75:   call   0x000000011c9c1480           ; ImmutableOopMap {r8=Oop r13=Oop rsi=Oop [40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@101 (line 443)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115372d7a:   jmp    0x0000000115372a0b
  0x0000000115372d7f:   mov    eax,DWORD PTR [r8+0x2c]
  0x0000000115372d83:   shl    rax,0x3
  0x0000000115372d87:   cmp    rax,0x0
  0x0000000115372d8b:   je     0x0000000115372a6d
  0x0000000115372d91:   mov    QWORD PTR [rsp],rax
  0x0000000115372d95:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115372d9a:   jmp    0x0000000115372a6d
  0x0000000115372d9f:   cmp    rsi,0x0
  0x0000000115372da3:   je     0x0000000115372a8c
  0x0000000115372da9:   mov    QWORD PTR [rsp],r8
  0x0000000115372dad:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115372db2:   jmp    0x0000000115372a8c
  0x0000000115372db7:   call   0x000000011c9bc100           ; ImmutableOopMap {r8=Oop r9=Oop }
                                                            ;*getfield hashCode {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@121 (line 456)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372dbc:   call   0x000000011c9bc100           ; ImmutableOopMap {r9=Oop rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@128 (line 456)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372dc1:   call   0x000000011c9bbe00           ; ImmutableOopMap {r9=Oop rsi=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@129 (line 456)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x0000000115372dc6:   mov    QWORD PTR [rsp],rdx
  0x0000000115372dca:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000115372dcf:   call   0x000000011c9bb800           ; ImmutableOopMap {r9=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::put@137 (line 457)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115372dd4:   mov    edi,DWORD PTR [r9+0x30]
  0x0000000115372dd8:   shl    rdi,0x3
  0x0000000115372ddc:   cmp    rdi,0x0
  0x0000000115372de0:   je     0x0000000115372ae7
  0x0000000115372de6:   mov    QWORD PTR [rsp],rdi
  0x0000000115372dea:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115372def:   jmp    0x0000000115372ae7
  0x0000000115372df4:   cmp    rax,0x0
  0x0000000115372df8:   je     0x0000000115372b06
  0x0000000115372dfe:   mov    QWORD PTR [rsp],r9
  0x0000000115372e02:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115372e07:   jmp    0x0000000115372b06
  0x0000000115372e0c:   call   0x000000011c9bc100           ; ImmutableOopMap {r9=Oop rsi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@148 (line 458)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115372e11:   mov    QWORD PTR [rsp],r9
  0x0000000115372e15:   call   0x000000011c9be200           ; ImmutableOopMap {r9=Oop rsi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::put@148 (line 458)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x0000000115372e1a:   mov    esi,DWORD PTR [rax]
  0x0000000115372e1c:   shl    rsi,0x3
  0x0000000115372e20:   cmp    rsi,0x0
  0x0000000115372e24:   je     0x0000000115372c33
  0x0000000115372e2a:   mov    QWORD PTR [rsp],rsi
  0x0000000115372e2e:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115372e33:   jmp    0x0000000115372c33
  0x0000000115372e38:   cmp    r9,0x0
  0x0000000115372e3c:   je     0x0000000115372c51
  0x0000000115372e42:   mov    QWORD PTR [rsp],rax
  0x0000000115372e46:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115372e4b:   jmp    0x0000000115372c51
  0x0000000115372e50:   movabs r10,0x115372c59              ;   {internal_word}
  0x0000000115372e5a:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115372e61:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115372e66:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115372e6d:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115372e78:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115372e83:   add    rsp,0x40
  0x0000000115372e87:   pop    rbp
  0x0000000115372e88:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115372e8d:   hlt    
  0x0000000115372e8e:   hlt    
  0x0000000115372e8f:   hlt    
[Exception Handler]
  0x0000000115372e90:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115372e95:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115372e9f:   and    rsp,0xfffffffffffffff0
  0x0000000115372ea3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115372ea8:   hlt    
[Deopt Handler Code]
  0x0000000115372ea9:   movabs r10,0x115372ea9              ;   {section_word}
  0x0000000115372eb3:   push   r10
  0x0000000115372eb5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115372eba:   hlt    
  0x0000000115372ebb:   hlt    
  0x0000000115372ebc:   hlt    
  0x0000000115372ebd:   hlt    
  0x0000000115372ebe:   hlt    
  0x0000000115372ebf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='80' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='128' iicount='128' level='1' stamp='1.233' comment='tiered' hot_count='128'/>
<task_queued compile_id='81' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='256' iicount='256' level='3' stamp='1.233' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='75' compiler='c1' level='1' entry='0x000000011ce38d80' size='664' address='0x000000011ce38c10' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='sun.invoke.util.Wrapper basicTypeChar ()C' bytes='5' count='139' iicount='139' stamp='1.233'/>
<print_nmethod compile_id='75' compiler='c1' level='1' stamp='1.233'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1233   75       1       sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
 total in heap  [0x000000011ce38c10,0x000000011ce38ea8] = 664
 relocation     [0x000000011ce38d58,0x000000011ce38d80] = 40
 main code      [0x000000011ce38d80,0x000000011ce38e18] = 152
 stub code      [0x000000011ce38e18,0x000000011ce38e48] = 48
 metadata       [0x000000011ce38e48,0x000000011ce38e50] = 8
 scopes data    [0x000000011ce38e50,0x000000011ce38e60] = 16
 scopes pcs     [0x000000011ce38e60,0x000000011ce38ea0] = 64
 dependencies   [0x000000011ce38ea0,0x000000011ce38ea8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad03288} &apos;basicTypeChar&apos; &apos;()C&apos; in &apos;sun/invoke/util/Wrapper&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce38d80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce38d84:   movabs r11,0x12ac00000
  0x000000011ce38d8e:   add    r10,r11
  0x000000011ce38d91:   cmp    r10,rax
  0x000000011ce38d94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce38d9a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce38da0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce38da7:   push   rbp
  0x000000011ce38da8:   sub    rsp,0x30
  0x000000011ce38dac:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011ce38db4:   je     0x000000011ce38dbb
  0x000000011ce38db6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@0 (line 445)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce38dbb:   movzx  eax,WORD PTR [rsi+0x18]      ;*getfield basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 445)
  0x000000011ce38dbf:   and    eax,0xffff
  0x000000011ce38dc4:   add    rsp,0x30
  0x000000011ce38dc8:   pop    rbp
  0x000000011ce38dc9:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce38dd0:   ja     0x000000011ce38dd7
  0x000000011ce38dd6:   ret    
  0x000000011ce38dd7:   movabs r10,0x11ce38dc9              ;   {internal_word}
  0x000000011ce38de1:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce38de8:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce38ded:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce38df4:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce38dff:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce38e0a:   add    rsp,0x30
  0x000000011ce38e0e:   pop    rbp
  0x000000011ce38e0f:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce38e14:   hlt    
  0x000000011ce38e15:   hlt    
  0x000000011ce38e16:   hlt    
  0x000000011ce38e17:   hlt    
[Exception Handler]
  0x000000011ce38e18:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce38e1d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce38e27:   and    rsp,0xfffffffffffffff0
  0x000000011ce38e2b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce38e30:   hlt    
[Deopt Handler Code]
  0x000000011ce38e31:   movabs r10,0x11ce38e31              ;   {section_word}
  0x000000011ce38e3b:   push   r10
  0x000000011ce38e3d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce38e42:   hlt    
  0x000000011ce38e43:   hlt    
  0x000000011ce38e44:   hlt    
  0x000000011ce38e45:   hlt    
  0x000000011ce38e46:   hlt    
  0x000000011ce38e47:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='82' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='384' iicount='384' level='3' stamp='1.236' comment='tiered' hot_count='384'/>
<nmethod compile_id='83' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce39060' size='368' address='0x000000011ce38f10' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (JJLjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.236'/>

Compiled method (n/a)    1236   83     n 0       java.lang.invoke.MethodHandle::linkToStatic(JJL)J (native)
 total in heap  [0x000000011ce38f10,0x000000011ce39080] = 368
 relocation     [0x000000011ce39058,0x000000011ce39060] = 8
 main code      [0x000000011ce39060,0x000000011ce3907c] = 28
 stub code      [0x000000011ce3907c,0x000000011ce39080] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc21800} &apos;linkToStatic&apos; &apos;(JJLjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce39060:   mov    ebx,DWORD PTR [rcx+0x24]
  0x000000011ce39063:   shl    rbx,0x3
  0x000000011ce39067:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3906b:   test   rbx,rbx
  0x000000011ce3906e:   je     0x000000011ce39077
  0x000000011ce39074:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce39077:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3907c:   hlt    
  0x000000011ce3907d:   hlt    
  0x000000011ce3907e:   hlt    
  0x000000011ce3907f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='82' compiler='c1' level='3' entry='0x0000000115373620' size='1408' address='0x0000000115373490' relocation_offset='328' insts_offset='400' stub_offset='856' scopes_data_offset='936' scopes_pcs_offset='1064' dependencies_offset='1368' nul_chk_table_offset='1376' metadata_offset='920' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='400' iicount='400' stamp='1.237'/>
<print_nmethod compile_id='82' compiler='c1' level='3' stamp='1.237'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1237   82       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
 total in heap  [0x0000000115373490,0x0000000115373a10] = 1408
 relocation     [0x00000001153735d8,0x0000000115373620] = 72
 main code      [0x0000000115373620,0x00000001153737e8] = 456
 stub code      [0x00000001153737e8,0x0000000115373828] = 64
 metadata       [0x0000000115373828,0x0000000115373838] = 16
 scopes data    [0x0000000115373838,0x00000001153738b8] = 128
 scopes pcs     [0x00000001153738b8,0x00000001153739e8] = 304
 dependencies   [0x00000001153739e8,0x00000001153739f0] = 8
 nul chk table  [0x00000001153739f0,0x0000000115373a10] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6d698} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000115373620:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115373624:   movabs r11,0x12ac00000
  0x000000011537362e:   add    r10,r11
  0x0000000115373631:   cmp    r10,rax
  0x0000000115373634:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537363a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115373640:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115373647:   push   rbp
  0x0000000115373648:   sub    rsp,0x40
  0x000000011537364c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115373654:   je     0x000000011537365b
  0x0000000115373656:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537365b:   movabs rdi,0x16bc21500              ;   {metadata(method data for {method} {0x000000012af6d698} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000000115373665:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537366b:   add    ebx,0x2
  0x000000011537366e:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115373674:   and    ebx,0x7fe
  0x000000011537367a:   cmp    ebx,0x0
  0x000000011537367d:   je     0x000000011537375e           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@0 (line 151)
  0x0000000115373683:   mov    edi,DWORD PTR [rsi+0xc]      ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@1 (line 151)
  0x0000000115373686:   mov    ebx,DWORD PTR [rsi+0x10]
  0x0000000115373689:   shl    rbx,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@9 (line 152)
  0x000000011537368d:   mov    ebx,DWORD PTR [rbx+0xc]      ; implicit exception: dispatches to 0x000000011537377f
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 152)
  0x0000000115373690:   mov    rax,rdi
  0x0000000115373693:   add    eax,0x2
  0x0000000115373696:   cmp    eax,ebx
  0x0000000115373698:   movabs rbx,0x16bc21500              ;   {metadata(method data for {method} {0x000000012af6d698} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000001153736a2:   movabs rax,0xf0
  0x00000001153736ac:   jle    0x00000001153736bc
  0x00000001153736b2:   movabs rax,0x100
  0x00000001153736bc:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x00000001153736c0:   lea    rcx,[rcx+0x1]
  0x00000001153736c4:   mov    QWORD PTR [rbx+rax*1],rcx
  0x00000001153736c8:   jle    0x0000000115373711           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@13 (line 152)
  0x00000001153736ce:   mov    DWORD PTR [rsp+0x34],edi
  0x00000001153736d2:   mov    DWORD PTR [rsp+0x30],edx
  0x00000001153736d6:   mov    rbx,rsi
  0x00000001153736d9:   movabs rax,0x16bc21500              ;   {metadata(method data for {method} {0x000000012af6d698} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x00000001153736e3:   add    QWORD PTR [rax+0x110],0x1
  0x00000001153736eb:   mov    edx,0x2
  0x00000001153736f0:   mov    rax,rsi
  0x00000001153736f3:   mov    rsi,rax                      ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 153)
  0x00000001153736f6:   mov    QWORD PTR [rsp+0x28],rax
  0x00000001153736fb:   nop    DWORD PTR [rax+0x0]
  0x00000001153736ff:   call   0x000000011c900600           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 153)
                                                            ;   {optimized virtual_call}
  0x0000000115373704:   mov    edi,DWORD PTR [rsp+0x34]
  0x0000000115373708:   mov    edx,DWORD PTR [rsp+0x30]
  0x000000011537370c:   mov    rsi,QWORD PTR [rsp+0x28]
  0x0000000115373711:   mov    eax,DWORD PTR [rsi+0x10]
  0x0000000115373714:   shl    rax,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@22 (line 155)
  0x0000000115373718:   mov    rbx,rdx
  0x000000011537371b:   shr    ebx,0x8
  0x000000011537371e:   cmp    edi,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x0000000115373784
  0x0000000115373721:   jae    0x000000011537378e
  0x0000000115373727:   movsxd rcx,edi
  0x000000011537372a:   mov    BYTE PTR [rax+rcx*1+0x10],bl ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 156)
  0x000000011537372e:   inc    edi
  0x0000000115373730:   mov    rbx,rdi
  0x0000000115373733:   inc    ebx
  0x0000000115373735:   cmp    edi,DWORD PTR [rax+0xc]
  0x0000000115373738:   jae    0x000000011537379c
  0x000000011537373e:   movsxd rdi,edi
  0x0000000115373741:   mov    BYTE PTR [rax+rdi*1+0x10],dl ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 157)
  0x0000000115373745:   mov    DWORD PTR [rsi+0xc],ebx      ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@47 (line 158)
  0x0000000115373748:   mov    rax,rsi
  0x000000011537374b:   add    rsp,0x40
  0x000000011537374f:   pop    rbp
  0x0000000115373750:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115373757:   ja     0x00000001153737aa
  0x000000011537375d:   ret    
  0x000000011537375e:   movabs r10,0x12af6d698              ;   {metadata({method} {0x000000012af6d698} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000000115373768:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537376d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115373775:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@-1 (line 151)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537377a:   jmp    0x0000000115373683
  0x000000011537377f:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 152)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115373784:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 156)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115373789:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 156)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537378e:   mov    QWORD PTR [rsp],rdi
  0x0000000115373792:   mov    QWORD PTR [rsp+0x8],rax
  0x0000000115373797:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 156)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011537379c:   mov    QWORD PTR [rsp],rdi
  0x00000001153737a0:   mov    QWORD PTR [rsp+0x8],rax
  0x00000001153737a5:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 157)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153737aa:   movabs r10,0x115373750              ;   {internal_word}
  0x00000001153737b4:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153737bb:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153737c0:   mov    rax,QWORD PTR [r15+0x428]
  0x00000001153737c7:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153737d2:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153737dd:   add    rsp,0x40
  0x00000001153737e1:   pop    rbp
  0x00000001153737e2:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001153737e7:   hlt    
[Exception Handler]
  0x00000001153737e8:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x00000001153737ed:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x00000001153737f7:   and    rsp,0xfffffffffffffff0
  0x00000001153737fb:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115373800:   hlt    
[Deopt Handler Code]
  0x0000000115373801:   movabs r10,0x115373801              ;   {section_word}
  0x000000011537380b:   push   r10
  0x000000011537380d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115373812:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537381c:   jmp    0x000000011537381c           ;   {runtime_call}
  0x0000000115373821:   hlt    
  0x0000000115373822:   hlt    
  0x0000000115373823:   hlt    
  0x0000000115373824:   hlt    
  0x0000000115373825:   hlt    
  0x0000000115373826:   hlt    
  0x0000000115373827:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='84' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='56' count='384' iicount='384' level='3' stamp='1.245' comment='tiered' hot_count='384'/>
<nmethod compile_id='85' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce39360' size='384' address='0x000000011ce39210' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JJ)J' bytes='0' count='0' iicount='0' stamp='1.245'/>

Compiled method (n/a)    1244   85     n 0       java.lang.invoke.MethodHandle::invokeBasic(JJ)J (native)
 total in heap  [0x000000011ce39210,0x000000011ce39390] = 384
 relocation     [0x000000011ce39358,0x000000011ce39360] = 8
 main code      [0x000000011ce39360,0x000000011ce3938a] = 42
 stub code      [0x000000011ce3938a,0x000000011ce39390] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc21918} &apos;invokeBasic&apos; &apos;(JJ)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x0]  (sp of caller)
  0x000000011ce39360:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce39363:   shl    rbx,0x3
  0x000000011ce39367:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3936a:   shl    rbx,0x3
  0x000000011ce3936e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce39371:   shl    rbx,0x3
  0x000000011ce39375:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce39379:   test   rbx,rbx
  0x000000011ce3937c:   je     0x000000011ce39385
  0x000000011ce39382:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce39385:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3938a:   hlt    
  0x000000011ce3938b:   hlt    
  0x000000011ce3938c:   hlt    
  0x000000011ce3938d:   hlt    
  0x000000011ce3938e:   hlt    
  0x000000011ce3938f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='84' compiler='c1' level='3' entry='0x0000000115373c40' size='2072' address='0x0000000115373a90' relocation_offset='328' insts_offset='432' stub_offset='1512' scopes_data_offset='1584' scopes_pcs_offset='1712' dependencies_offset='2048' nul_chk_table_offset='2056' metadata_offset='1576' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='56' count='385' iicount='385' stamp='1.246'/>
<print_nmethod compile_id='84' compiler='c1' level='3' stamp='1.246'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1246   84       3       java.lang.String::equals (56 bytes)
 total in heap  [0x0000000115373a90,0x00000001153742a8] = 2072
 relocation     [0x0000000115373bd8,0x0000000115373c40] = 104
 main code      [0x0000000115373c40,0x0000000115374078] = 1080
 stub code      [0x0000000115374078,0x00000001153740b8] = 64
 metadata       [0x00000001153740b8,0x00000001153740c0] = 8
 scopes data    [0x00000001153740c0,0x0000000115374140] = 128
 scopes pcs     [0x0000000115374140,0x0000000115374290] = 336
 dependencies   [0x0000000115374290,0x0000000115374298] = 8
 nul chk table  [0x0000000115374298,0x00000001153742a8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000115373c40:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115373c44:   movabs r11,0x12ac00000
  0x0000000115373c4e:   add    r10,r11
  0x0000000115373c51:   cmp    r10,rax
  0x0000000115373c54:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115373c5a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115373c60:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115373c67:   push   rbp
  0x0000000115373c68:   sub    rsp,0x30
  0x0000000115373c6c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115373c74:   je     0x0000000115373c7b
  0x0000000115373c76:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115373c7b:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373c85:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115373c8b:   add    ebx,0x2
  0x0000000115373c8e:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115373c94:   and    ebx,0x7fe
  0x0000000115373c9a:   cmp    ebx,0x0
  0x0000000115373c9d:   je     0x0000000115373ff2           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@0 (line 1838)
  0x0000000115373ca3:   cmp    rsi,rdx
  0x0000000115373ca6:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373cb0:   movabs rbx,0x100
  0x0000000115373cba:   je     0x0000000115373cca
  0x0000000115373cc0:   movabs rbx,0xf0
  0x0000000115373cca:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115373cce:   lea    rax,[rax+0x1]
  0x0000000115373cd2:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115373cd6:   je     0x0000000115373fda           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@2 (line 1838)
  0x0000000115373cdc:   cmp    rdx,0x0
  0x0000000115373ce0:   jne    0x0000000115373cf8
  0x0000000115373ce2:   movabs rcx,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373cec:   or     BYTE PTR [rcx+0x109],0x1
  0x0000000115373cf3:   jmp    0x0000000115373dc4
  0x0000000115373cf8:   movabs rax,0x12ac0eb30              ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000115373d02:   mov    ebx,DWORD PTR [rdx+0x8]
  0x0000000115373d05:   movabs r10,0x12ac00000
  0x0000000115373d0f:   add    rbx,r10
  0x0000000115373d12:   cmp    rax,rbx
  0x0000000115373d15:   jne    0x0000000115373da8
  0x0000000115373d1b:   movabs rcx,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373d25:   mov    eax,DWORD PTR [rdx+0x8]
  0x0000000115373d28:   movabs r10,0x12ac00000
  0x0000000115373d32:   add    rax,r10
  0x0000000115373d35:   cmp    rax,QWORD PTR [rcx+0x120]
  0x0000000115373d3c:   jne    0x0000000115373d4b
  0x0000000115373d3e:   add    QWORD PTR [rcx+0x128],0x1
  0x0000000115373d46:   jmp    0x0000000115373dc9
  0x0000000115373d4b:   cmp    rax,QWORD PTR [rcx+0x130]
  0x0000000115373d52:   jne    0x0000000115373d61
  0x0000000115373d54:   add    QWORD PTR [rcx+0x138],0x1
  0x0000000115373d5c:   jmp    0x0000000115373dc9
  0x0000000115373d61:   cmp    QWORD PTR [rcx+0x120],0x0
  0x0000000115373d69:   jne    0x0000000115373d82
  0x0000000115373d6b:   mov    QWORD PTR [rcx+0x120],rax
  0x0000000115373d72:   mov    QWORD PTR [rcx+0x128],0x1
  0x0000000115373d7d:   jmp    0x0000000115373dc9
  0x0000000115373d82:   cmp    QWORD PTR [rcx+0x130],0x0
  0x0000000115373d8a:   jne    0x0000000115373da3
  0x0000000115373d8c:   mov    QWORD PTR [rcx+0x130],rax
  0x0000000115373d93:   mov    QWORD PTR [rcx+0x138],0x1
  0x0000000115373d9e:   jmp    0x0000000115373dc9
  0x0000000115373da3:   jmp    0x0000000115373dc9
  0x0000000115373da8:   movabs rcx,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373db2:   sub    QWORD PTR [rcx+0x110],0x1
  0x0000000115373dba:   jmp    0x0000000115373dc4
  0x0000000115373dbf:   jmp    0x0000000115373dc9
  0x0000000115373dc4:   xor    rdi,rdi
  0x0000000115373dc7:   jmp    0x0000000115373dd3
  0x0000000115373dc9:   movabs rdi,0x1                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@8 (line 1843)
  0x0000000115373dd3:   cmp    edi,0x0
  0x0000000115373dd6:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373de0:   movabs rbx,0x148
  0x0000000115373dea:   je     0x0000000115373dfa
  0x0000000115373df0:   movabs rbx,0x158
  0x0000000115373dfa:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115373dfe:   lea    rax,[rax+0x1]
  0x0000000115373e02:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115373e06:   je     0x0000000115373fa5           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@11 (line 1843)
  0x0000000115373e0c:   cmp    rdx,0x0
  0x0000000115373e10:   jne    0x0000000115373e28
  0x0000000115373e12:   movabs rax,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373e1c:   or     BYTE PTR [rax+0x161],0x1
  0x0000000115373e23:   jmp    0x0000000115373ef4
  0x0000000115373e28:   movabs rbx,0x12ac0eb30              ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000115373e32:   mov    edi,DWORD PTR [rdx+0x8]
  0x0000000115373e35:   movabs r10,0x12ac00000
  0x0000000115373e3f:   add    rdi,r10
  0x0000000115373e42:   cmp    rbx,rdi
  0x0000000115373e45:   jne    0x0000000115373ed8
  0x0000000115373e4b:   movabs rax,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373e55:   mov    ebx,DWORD PTR [rdx+0x8]
  0x0000000115373e58:   movabs r10,0x12ac00000
  0x0000000115373e62:   add    rbx,r10
  0x0000000115373e65:   cmp    rbx,QWORD PTR [rax+0x178]
  0x0000000115373e6c:   jne    0x0000000115373e7b
  0x0000000115373e6e:   add    QWORD PTR [rax+0x180],0x1
  0x0000000115373e76:   jmp    0x0000000115373ef4
  0x0000000115373e7b:   cmp    rbx,QWORD PTR [rax+0x188]
  0x0000000115373e82:   jne    0x0000000115373e91
  0x0000000115373e84:   add    QWORD PTR [rax+0x190],0x1
  0x0000000115373e8c:   jmp    0x0000000115373ef4
  0x0000000115373e91:   cmp    QWORD PTR [rax+0x178],0x0
  0x0000000115373e99:   jne    0x0000000115373eb2
  0x0000000115373e9b:   mov    QWORD PTR [rax+0x178],rbx
  0x0000000115373ea2:   mov    QWORD PTR [rax+0x180],0x1
  0x0000000115373ead:   jmp    0x0000000115373ef4
  0x0000000115373eb2:   cmp    QWORD PTR [rax+0x188],0x0
  0x0000000115373eba:   jne    0x0000000115373ed3
  0x0000000115373ebc:   mov    QWORD PTR [rax+0x188],rbx
  0x0000000115373ec3:   mov    QWORD PTR [rax+0x190],0x1
  0x0000000115373ece:   jmp    0x0000000115373ef4
  0x0000000115373ed3:   jmp    0x0000000115373ef4
  0x0000000115373ed8:   movabs rax,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373ee2:   sub    QWORD PTR [rax+0x168],0x1
  0x0000000115373eea:   jmp    0x0000000115374013
  0x0000000115373eef:   jmp    0x0000000115373ef4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@15 (line 1841)
  0x0000000115373ef4:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373efe:   inc    DWORD PTR [rdi+0x1b0]        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@22 (line 1841)
  0x0000000115373f04:   movsx  edi,BYTE PTR [rsi+0x10]      ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@26 (line 1841)
  0x0000000115373f08:   movsx  ebx,BYTE PTR [rdx+0x10]      ; implicit exception: dispatches to 0x000000011537401c
                                                            ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@30 (line 1841)
  0x0000000115373f0c:   cmp    edi,ebx
  0x0000000115373f0e:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373f18:   movabs rbx,0x1c0
  0x0000000115373f22:   jne    0x0000000115373f32
  0x0000000115373f28:   movabs rbx,0x1d0
  0x0000000115373f32:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115373f36:   lea    rax,[rax+0x1]
  0x0000000115373f3a:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115373f3e:   jne    0x0000000115373fa5           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@33 (line 1841)
  0x0000000115373f44:   mov    esi,DWORD PTR [rsi+0x14]
  0x0000000115373f47:   shl    rsi,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@37 (line 1841)
  0x0000000115373f4b:   mov    edx,DWORD PTR [rdx+0x14]
  0x0000000115373f4e:   shl    rdx,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@41 (line 1841)
  0x0000000115373f52:   movabs rdi,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373f5c:   add    QWORD PTR [rdi+0x1e0],0x1
  0x0000000115373f64:   data16 xchg ax,ax
  0x0000000115373f67:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@44 (line 1843)
                                                            ;   {static_call}
  0x0000000115373f6c:   cmp    eax,0x0
  0x0000000115373f6f:   movabs rax,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373f79:   movabs rsi,0x200
  0x0000000115373f83:   jne    0x0000000115373f93
  0x0000000115373f89:   movabs rsi,0x1f0
  0x0000000115373f93:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x0000000115373f97:   lea    rdi,[rdi+0x1]
  0x0000000115373f9b:   mov    QWORD PTR [rax+rsi*1],rdi
  0x0000000115373f9f:   jne    0x0000000115373faf           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@47 (line 1843)
  0x0000000115373fa5:   mov    eax,0x0
  0x0000000115373faa:   jmp    0x0000000115373fc4           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@55 (line 1841)
  0x0000000115373faf:   movabs rax,0x16bc21980              ;   {metadata(method data for {method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373fb9:   inc    DWORD PTR [rax+0x210]
  0x0000000115373fbf:   mov    eax,0x1                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@51 (line 1843)
  0x0000000115373fc4:   and    eax,0x1
  0x0000000115373fc7:   add    rsp,0x30
  0x0000000115373fcb:   pop    rbp
  0x0000000115373fcc:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115373fd3:   ja     0x0000000115374021
  0x0000000115373fd9:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@55 (line 1841)
  0x0000000115373fda:   mov    eax,0x1
  0x0000000115373fdf:   add    rsp,0x30
  0x0000000115373fe3:   pop    rbp
  0x0000000115373fe4:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115373feb:   ja     0x0000000115374037
  0x0000000115373ff1:   ret    
  0x0000000115373ff2:   movabs r10,0x12ac0edc0              ;   {metadata({method} {0x000000012ac0edc0} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000115373ffc:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115374001:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115374009:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::equals@-1 (line 1838)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537400e:   jmp    0x0000000115373ca3
  0x0000000115374013:   mov    QWORD PTR [rsp],rdx
  0x0000000115374017:   call   0x000000011c9be500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@15 (line 1841)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011537401c:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*getfield coder {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::equals@30 (line 1841)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115374021:   movabs r10,0x115373fcc              ;   {internal_word}
  0x000000011537402b:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115374032:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115374037:   movabs r10,0x115373fe4              ;   {internal_word}
  0x0000000115374041:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115374048:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537404d:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115374054:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537405f:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537406a:   add    rsp,0x30
  0x000000011537406e:   pop    rbp
  0x000000011537406f:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115374074:   hlt    
  0x0000000115374075:   hlt    
  0x0000000115374076:   hlt    
  0x0000000115374077:   hlt    
[Exception Handler]
  0x0000000115374078:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537407d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115374087:   and    rsp,0xfffffffffffffff0
  0x000000011537408b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115374090:   hlt    
[Deopt Handler Code]
  0x0000000115374091:   movabs r10,0x115374091              ;   {section_word}
  0x000000011537409b:   push   r10
  0x000000011537409d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153740a2:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153740ac:   jmp    0x00000001153740ac           ;   {runtime_call}
  0x00000001153740b1:   hlt    
  0x00000001153740b2:   hlt    
  0x00000001153740b3:   hlt    
  0x00000001153740b4:   hlt    
  0x00000001153740b5:   hlt    
  0x00000001153740b6:   hlt    
  0x00000001153740b7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='86' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce39660' size='368' address='0x000000011ce39510' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JJLjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.257'/>

Compiled method (n/a)    1256   86     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJJL)J (native)
 total in heap  [0x000000011ce39510,0x000000011ce39680] = 368
 relocation     [0x000000011ce39658,0x000000011ce39660] = 8
 main code      [0x000000011ce39660,0x000000011ce39680] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc21e40} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JJLjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx:rcx   = long
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce39660:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce39663:   mov    ebx,DWORD PTR [r8+0x24]
  0x000000011ce39667:   shl    rbx,0x3
  0x000000011ce3966b:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3966f:   test   rbx,rbx
  0x000000011ce39672:   je     0x000000011ce3967b
  0x000000011ce39678:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3967b:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='81' compiler='c1' level='3' entry='0x00000001153744a0' size='1320' address='0x0000000115374310' relocation_offset='328' insts_offset='400' stub_offset='960' scopes_data_offset='1032' scopes_pcs_offset='1104' dependencies_offset='1296' nul_chk_table_offset='1304' metadata_offset='1024' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='276' iicount='276' stamp='1.258'/>
<print_nmethod compile_id='81' compiler='c1' level='3' stamp='1.258'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1258   81       3       java.util.Objects::equals (23 bytes)
 total in heap  [0x0000000115374310,0x0000000115374838] = 1320
 relocation     [0x0000000115374458,0x00000001153744a0] = 72
 main code      [0x00000001153744a0,0x00000001153746d0] = 560
 stub code      [0x00000001153746d0,0x0000000115374710] = 64
 metadata       [0x0000000115374710,0x0000000115374718] = 8
 scopes data    [0x0000000115374718,0x0000000115374760] = 72
 scopes pcs     [0x0000000115374760,0x0000000115374820] = 192
 dependencies   [0x0000000115374820,0x0000000115374828] = 8
 nul chk table  [0x0000000115374828,0x0000000115374838] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001153744a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153744a7:   push   rbp
  0x00000001153744a8:   sub    rsp,0x30
  0x00000001153744ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x00000001153744b4:   je     0x00000001153744bb
  0x00000001153744b6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153744bb:   movabs rdi,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00000001153744c5:   mov    ebx,DWORD PTR [rdi+0xac]
  0x00000001153744cb:   add    ebx,0x2
  0x00000001153744ce:   mov    DWORD PTR [rdi+0xac],ebx
  0x00000001153744d4:   and    ebx,0x7fe
  0x00000001153744da:   cmp    ebx,0x0
  0x00000001153744dd:   je     0x000000011537466a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@0 (line 64)
  0x00000001153744e3:   cmp    rsi,rdx
  0x00000001153744e6:   movabs rdi,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00000001153744f0:   movabs rbx,0xf0
  0x00000001153744fa:   je     0x000000011537450a
  0x0000000115374500:   movabs rbx,0x100
  0x000000011537450a:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011537450e:   lea    rax,[rax+0x1]
  0x0000000115374512:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115374516:   je     0x000000011537463f           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@2 (line 64)
  0x000000011537451c:   cmp    rsi,0x0
  0x0000000115374520:   movabs rdi,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011537452a:   movabs rbx,0x110
  0x0000000115374534:   je     0x0000000115374544
  0x000000011537453a:   movabs rbx,0x120
  0x0000000115374544:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115374548:   lea    rax,[rax+0x1]
  0x000000011537454c:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115374550:   je     0x0000000115374635           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@6 (line 64)
  0x0000000115374556:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011537468b
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
  0x0000000115374559:   mov    rdi,rsi
  0x000000011537455c:   movabs rbx,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x0000000115374566:   mov    edi,DWORD PTR [rdi+0x8]
  0x0000000115374569:   movabs r10,0x12ac00000
  0x0000000115374573:   add    rdi,r10
  0x0000000115374576:   cmp    rdi,QWORD PTR [rbx+0x140]
  0x000000011537457d:   jne    0x000000011537458c
  0x000000011537457f:   add    QWORD PTR [rbx+0x148],0x1
  0x0000000115374587:   jmp    0x00000001153745ec
  0x000000011537458c:   cmp    rdi,QWORD PTR [rbx+0x150]
  0x0000000115374593:   jne    0x00000001153745a2
  0x0000000115374595:   add    QWORD PTR [rbx+0x158],0x1
  0x000000011537459d:   jmp    0x00000001153745ec
  0x00000001153745a2:   cmp    QWORD PTR [rbx+0x140],0x0
  0x00000001153745aa:   jne    0x00000001153745c3
  0x00000001153745ac:   mov    QWORD PTR [rbx+0x140],rdi
  0x00000001153745b3:   mov    QWORD PTR [rbx+0x148],0x1
  0x00000001153745be:   jmp    0x00000001153745ec
  0x00000001153745c3:   cmp    QWORD PTR [rbx+0x150],0x0
  0x00000001153745cb:   jne    0x00000001153745e4
  0x00000001153745cd:   mov    QWORD PTR [rbx+0x150],rdi
  0x00000001153745d4:   mov    QWORD PTR [rbx+0x158],0x1
  0x00000001153745df:   jmp    0x00000001153745ec
  0x00000001153745e4:   add    QWORD PTR [rbx+0x130],0x1
  0x00000001153745ec:   nop
  0x00000001153745ed:   movabs rax,0xffffffffffffffff
  0x00000001153745f7:   call   0x000000011c900900           ; ImmutableOopMap {}
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
                                                            ;   {virtual_call}
  0x00000001153745fc:   cmp    eax,0x0
  0x00000001153745ff:   movabs rax,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x0000000115374609:   movabs rsi,0x178
  0x0000000115374613:   jne    0x0000000115374623
  0x0000000115374619:   movabs rsi,0x168
  0x0000000115374623:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x0000000115374627:   lea    rdi,[rdi+0x1]
  0x000000011537462b:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011537462f:   jne    0x000000011537463f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@14 (line 64)
  0x0000000115374635:   mov    eax,0x0
  0x000000011537463a:   jmp    0x0000000115374654           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@22 (line 64)
  0x000000011537463f:   movabs rax,0x16bc21ea8              ;   {metadata(method data for {method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x0000000115374649:   inc    DWORD PTR [rax+0x188]
  0x000000011537464f:   mov    eax,0x1                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@18 (line 64)
  0x0000000115374654:   and    eax,0x1
  0x0000000115374657:   add    rsp,0x30
  0x000000011537465b:   pop    rbp
  0x000000011537465c:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115374663:   ja     0x0000000115374690
  0x0000000115374669:   ret    
  0x000000011537466a:   movabs r10,0x12ac577b0              ;   {metadata({method} {0x000000012ac577b0} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x0000000115374674:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115374679:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115374681:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::equals@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115374686:   jmp    0x00000001153744e3
  0x000000011537468b:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115374690:   movabs r10,0x11537465c              ;   {internal_word}
  0x000000011537469a:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153746a1:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153746a6:   mov    rax,QWORD PTR [r15+0x428]
  0x00000001153746ad:   mov    QWORD PTR [r15+0x428],0x0
  0x00000001153746b8:   mov    QWORD PTR [r15+0x430],0x0
  0x00000001153746c3:   add    rsp,0x30
  0x00000001153746c7:   pop    rbp
  0x00000001153746c8:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001153746cd:   hlt    
  0x00000001153746ce:   hlt    
  0x00000001153746cf:   hlt    
[Stub Code]
  0x00000001153746d0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00000001153746d5:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153746df:   jmp    0x00000001153746df           ;   {runtime_call}
[Exception Handler]
  0x00000001153746e4:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000001153746e9:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x00000001153746f3:   and    rsp,0xfffffffffffffff0
  0x00000001153746f7:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001153746fc:   hlt    
[Deopt Handler Code]
  0x00000001153746fd:   movabs r10,0x1153746fd              ;   {section_word}
  0x0000000115374707:   push   r10
  0x0000000115374709:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537470e:   hlt    
  0x000000011537470f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='87' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.264' comment='tiered' hot_count='128'/>
<task_queued compile_id='88' method='java.lang.invoke.LambdaForm$Name initIndex (I)Z' bytes='26' count='256' iicount='256' level='3' stamp='1.264' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='80' compiler='c1' level='1' entry='0x000000011ce39980' size='664' address='0x000000011ce39810' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='141' iicount='141' stamp='1.264'/>
<print_nmethod compile_id='80' compiler='c1' level='1' stamp='1.264'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1264   80       1       java.lang.invoke.MethodType::form (5 bytes)
 total in heap  [0x000000011ce39810,0x000000011ce39aa8] = 664
 relocation     [0x000000011ce39958,0x000000011ce39980] = 40
 main code      [0x000000011ce39980,0x000000011ce39a18] = 152
 stub code      [0x000000011ce39a18,0x000000011ce39a48] = 48
 metadata       [0x000000011ce39a48,0x000000011ce39a50] = 8
 scopes data    [0x000000011ce39a50,0x000000011ce39a60] = 16
 scopes pcs     [0x000000011ce39a60,0x000000011ce39aa0] = 64
 dependencies   [0x000000011ce39aa0,0x000000011ce39aa8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b00e488} &apos;form&apos; &apos;()Ljava/lang/invoke/MethodTypeForm;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce39980:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce39984:   movabs r11,0x12ac00000
  0x000000011ce3998e:   add    r10,r11
  0x000000011ce39991:   cmp    r10,rax
  0x000000011ce39994:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3999a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce399a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce399a7:   push   rbp
  0x000000011ce399a8:   sub    rsp,0x30
  0x000000011ce399ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce399b4:   je     0x000000011ce399bb
  0x000000011ce399b6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::form@0 (line 164)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce399bb:   mov    eax,DWORD PTR [rsi+0x14]
  0x000000011ce399be:   shl    rax,0x3                      ;*getfield form {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::form@1 (line 164)
  0x000000011ce399c2:   add    rsp,0x30
  0x000000011ce399c6:   pop    rbp
  0x000000011ce399c7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce399ce:   ja     0x000000011ce399d5
  0x000000011ce399d4:   ret    
  0x000000011ce399d5:   movabs r10,0x11ce399c7              ;   {internal_word}
  0x000000011ce399df:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce399e6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce399eb:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce399f2:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce399fd:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce39a08:   add    rsp,0x30
  0x000000011ce39a0c:   pop    rbp
  0x000000011ce39a0d:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce39a12:   hlt    
  0x000000011ce39a13:   hlt    
  0x000000011ce39a14:   hlt    
  0x000000011ce39a15:   hlt    
  0x000000011ce39a16:   hlt    
  0x000000011ce39a17:   hlt    
[Exception Handler]
  0x000000011ce39a18:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce39a1d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce39a27:   and    rsp,0xfffffffffffffff0
  0x000000011ce39a2b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce39a30:   hlt    
[Deopt Handler Code]
  0x000000011ce39a31:   movabs r10,0x11ce39a31              ;   {section_word}
  0x000000011ce39a3b:   push   r10
  0x000000011ce39a3d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce39a42:   hlt    
  0x000000011ce39a43:   hlt    
  0x000000011ce39a44:   hlt    
  0x000000011ce39a45:   hlt    
  0x000000011ce39a46:   hlt    
  0x000000011ce39a47:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='89' method='java.lang.AbstractStringBuilder length ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.267' comment='tiered' hot_count='128'/>
<task_queued compile_id='90' method='java.lang.AbstractStringBuilder getValue ()[B' bytes='5' count='128' iicount='128' level='1' stamp='1.267' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='88' compiler='c1' level='3' entry='0x0000000115374a20' size='1048' address='0x0000000115374890' relocation_offset='328' insts_offset='400' stub_offset='784' scopes_data_offset='840' scopes_pcs_offset='896' dependencies_offset='1040' metadata_offset='832' method='java.lang.invoke.LambdaForm$Name initIndex (I)Z' bytes='26' count='259' iicount='259' stamp='1.267'/>
<print_nmethod compile_id='88' compiler='c1' level='3' stamp='1.267'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1267   88       3       java.lang.invoke.LambdaForm$Name::initIndex (26 bytes)
 total in heap  [0x0000000115374890,0x0000000115374ca8] = 1048
 relocation     [0x00000001153749d8,0x0000000115374a10] = 56
 main code      [0x0000000115374a20,0x0000000115374ba0] = 384
 stub code      [0x0000000115374ba0,0x0000000115374bd0] = 48
 metadata       [0x0000000115374bd0,0x0000000115374bd8] = 8
 scopes data    [0x0000000115374bd8,0x0000000115374c10] = 56
 scopes pcs     [0x0000000115374c10,0x0000000115374ca0] = 144
 dependencies   [0x0000000115374ca0,0x0000000115374ca8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012aff8eb8} &apos;initIndex&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/LambdaForm$Name&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000115374a20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115374a24:   movabs r11,0x12ac00000
  0x0000000115374a2e:   add    r10,r11
  0x0000000115374a31:   cmp    r10,rax
  0x0000000115374a34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115374a3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115374a40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115374a47:   push   rbp
  0x0000000115374a48:   sub    rsp,0x30
  0x0000000115374a4c:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115374a54:   je     0x0000000115374a5b
  0x0000000115374a56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115374a5b:   movabs rax,0x16bc22090              ;   {metadata(method data for {method} {0x000000012aff8eb8} &apos;initIndex&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;)}
  0x0000000115374a65:   mov    edi,DWORD PTR [rax+0xac]
  0x0000000115374a6b:   add    edi,0x2
  0x0000000115374a6e:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115374a74:   and    edi,0x7fe
  0x0000000115374a7a:   cmp    edi,0x0
  0x0000000115374a7d:   je     0x0000000115374b2c           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@0 (line 1382)
  0x0000000115374a83:   movsx  eax,WORD PTR [rsi+0xc]       ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@1 (line 1382)
  0x0000000115374a87:   cmp    eax,edx
  0x0000000115374a89:   movabs rdi,0x16bc22090              ;   {metadata(method data for {method} {0x000000012aff8eb8} &apos;initIndex&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;)}
  0x0000000115374a93:   movabs rbx,0xf0
  0x0000000115374a9d:   je     0x0000000115374aad
  0x0000000115374aa3:   movabs rbx,0x100
  0x0000000115374aad:   mov    rcx,QWORD PTR [rdi+rbx*1]
  0x0000000115374ab1:   lea    rcx,[rcx+0x1]
  0x0000000115374ab5:   mov    QWORD PTR [rdi+rbx*1],rcx
  0x0000000115374ab9:   je     0x0000000115374b14           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@5 (line 1382)
  0x0000000115374abf:   cmp    eax,0xffffffff
  0x0000000115374ac2:   movabs rax,0x16bc22090              ;   {metadata(method data for {method} {0x000000012aff8eb8} &apos;initIndex&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;)}
  0x0000000115374acc:   movabs rdi,0x110
  0x0000000115374ad6:   je     0x0000000115374ae6
  0x0000000115374adc:   movabs rdi,0x120
  0x0000000115374ae6:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x0000000115374aea:   lea    rbx,[rbx+0x1]
  0x0000000115374aee:   mov    QWORD PTR [rax+rdi*1],rbx
  0x0000000115374af2:   je     0x0000000115374b10           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@13 (line 1383)
  0x0000000115374af8:   mov    eax,0x0
  0x0000000115374afd:   add    rsp,0x30
  0x0000000115374b01:   pop    rbp
  0x0000000115374b02:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115374b09:   ja     0x0000000115374b4d
  0x0000000115374b0f:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@17 (line 1383)
  0x0000000115374b10:   mov    WORD PTR [rsi+0xc],dx        ;*putfield index {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@21 (line 1384)
  0x0000000115374b14:   mov    eax,0x1
  0x0000000115374b19:   add    rsp,0x30
  0x0000000115374b1d:   pop    rbp
  0x0000000115374b1e:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115374b25:   ja     0x0000000115374b63
  0x0000000115374b2b:   ret    
  0x0000000115374b2c:   movabs r10,0x12aff8eb8              ;   {metadata({method} {0x000000012aff8eb8} &apos;initIndex&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/LambdaForm$Name&apos;)}
  0x0000000115374b36:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115374b3b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115374b43:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$Name::initIndex@-1 (line 1382)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115374b48:   jmp    0x0000000115374a83
  0x0000000115374b4d:   movabs r10,0x115374b02              ;   {internal_word}
  0x0000000115374b57:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115374b5e:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115374b63:   movabs r10,0x115374b1e              ;   {internal_word}
  0x0000000115374b6d:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115374b74:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115374b79:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115374b80:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115374b8b:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115374b96:   add    rsp,0x30
  0x0000000115374b9a:   pop    rbp
  0x0000000115374b9b:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x0000000115374ba0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115374ba5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115374baf:   and    rsp,0xfffffffffffffff0
  0x0000000115374bb3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115374bb8:   hlt    
[Deopt Handler Code]
  0x0000000115374bb9:   movabs r10,0x115374bb9              ;   {section_word}
  0x0000000115374bc3:   push   r10
  0x0000000115374bc5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115374bca:   hlt    
  0x0000000115374bcb:   hlt    
  0x0000000115374bcc:   hlt    
  0x0000000115374bcd:   hlt    
  0x0000000115374bce:   hlt    
  0x0000000115374bcf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='91' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce39c60' size='368' address='0x000000011ce39b10' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (JILjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.272'/>

Compiled method (n/a)    1271   91     n 0       java.lang.invoke.MethodHandle::linkToStatic(JIL)J (native)
 total in heap  [0x000000011ce39b10,0x000000011ce39c80] = 368
 relocation     [0x000000011ce39c58,0x000000011ce39c60] = 8
 main code      [0x000000011ce39c60,0x000000011ce39c7c] = 28
 stub code      [0x000000011ce39c7c,0x000000011ce39c80] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc222a8} &apos;linkToStatic&apos; &apos;(JILjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce39c60:   mov    ebx,DWORD PTR [rcx+0x24]
  0x000000011ce39c63:   shl    rbx,0x3
  0x000000011ce39c67:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce39c6b:   test   rbx,rbx
  0x000000011ce39c6e:   je     0x000000011ce39c77
  0x000000011ce39c74:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce39c77:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce39c7c:   hlt    
  0x000000011ce39c7d:   hlt    
  0x000000011ce39c7e:   hlt    
  0x000000011ce39c7f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='87' compiler='c1' level='1' entry='0x000000011ce39f80' size='656' address='0x000000011ce39e10' relocation_offset='328' insts_offset='368' stub_offset='512' scopes_data_offset='568' scopes_pcs_offset='584' dependencies_offset='648' metadata_offset='560' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='136' iicount='136' stamp='1.273'/>
<print_nmethod compile_id='87' compiler='c1' level='1' stamp='1.273'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1273   87       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
 total in heap  [0x000000011ce39e10,0x000000011ce3a0a0] = 656
 relocation     [0x000000011ce39f58,0x000000011ce39f80] = 40
 main code      [0x000000011ce39f80,0x000000011ce3a010] = 144
 stub code      [0x000000011ce3a010,0x000000011ce3a040] = 48
 metadata       [0x000000011ce3a040,0x000000011ce3a048] = 8
 scopes data    [0x000000011ce3a048,0x000000011ce3a058] = 16
 scopes pcs     [0x000000011ce3a058,0x000000011ce3a098] = 64
 dependencies   [0x000000011ce3a098,0x000000011ce3a0a0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad64478} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce39f80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce39f84:   movabs r11,0x12ac00000
  0x000000011ce39f8e:   add    r10,r11
  0x000000011ce39f91:   cmp    r10,rax
  0x000000011ce39f94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce39f9a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce39fa0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce39fa7:   push   rbp
  0x000000011ce39fa8:   sub    rsp,0x30
  0x000000011ce39fac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce39fb4:   je     0x000000011ce39fbb
  0x000000011ce39fb6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1495)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce39fbb:   mov    eax,DWORD PTR [rsi+0x1c]     ;*getfield hashcode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1495)
  0x000000011ce39fbe:   add    rsp,0x30
  0x000000011ce39fc2:   pop    rbp
  0x000000011ce39fc3:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce39fca:   ja     0x000000011ce39fd1
  0x000000011ce39fd0:   ret    
  0x000000011ce39fd1:   movabs r10,0x11ce39fc3              ;   {internal_word}
  0x000000011ce39fdb:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce39fe2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce39fe7:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce39fee:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce39ff9:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce3a004:   add    rsp,0x30
  0x000000011ce3a008:   pop    rbp
  0x000000011ce3a009:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce3a00e:   hlt    
  0x000000011ce3a00f:   hlt    
[Exception Handler]
  0x000000011ce3a010:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3a015:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce3a01f:   and    rsp,0xfffffffffffffff0
  0x000000011ce3a023:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce3a028:   hlt    
[Deopt Handler Code]
  0x000000011ce3a029:   movabs r10,0x11ce3a029              ;   {section_word}
  0x000000011ce3a033:   push   r10
  0x000000011ce3a035:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3a03a:   hlt    
  0x000000011ce3a03b:   hlt    
  0x000000011ce3a03c:   hlt    
  0x000000011ce3a03d:   hlt    
  0x000000011ce3a03e:   hlt    
  0x000000011ce3a03f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='92' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3a260' size='384' address='0x000000011ce3a110' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JI)J' bytes='0' count='0' iicount='0' stamp='1.276'/>

Compiled method (n/a)    1275   92     n 0       java.lang.invoke.MethodHandle::invokeBasic(JI)J (native)
 total in heap  [0x000000011ce3a110,0x000000011ce3a290] = 384
 relocation     [0x000000011ce3a258,0x000000011ce3a260] = 8
 main code      [0x000000011ce3a260,0x000000011ce3a28a] = 42
 stub code      [0x000000011ce3a28a,0x000000011ce3a290] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc223c0} &apos;invokeBasic&apos; &apos;(JI)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3a260:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce3a263:   shl    rbx,0x3
  0x000000011ce3a267:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3a26a:   shl    rbx,0x3
  0x000000011ce3a26e:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce3a271:   shl    rbx,0x3
  0x000000011ce3a275:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3a279:   test   rbx,rbx
  0x000000011ce3a27c:   je     0x000000011ce3a285
  0x000000011ce3a282:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3a285:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3a28a:   hlt    
  0x000000011ce3a28b:   hlt    
  0x000000011ce3a28c:   hlt    
  0x000000011ce3a28d:   hlt    
  0x000000011ce3a28e:   hlt    
  0x000000011ce3a28f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='89' compiler='c1' level='1' entry='0x000000011ce3a580' size='656' address='0x000000011ce3a410' relocation_offset='328' insts_offset='368' stub_offset='512' scopes_data_offset='568' scopes_pcs_offset='584' dependencies_offset='648' metadata_offset='560' method='java.lang.AbstractStringBuilder length ()I' bytes='5' count='132' iicount='132' stamp='1.277'/>
<print_nmethod compile_id='89' compiler='c1' level='1' stamp='1.277'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1277   89       1       java.lang.AbstractStringBuilder::length (5 bytes)
 total in heap  [0x000000011ce3a410,0x000000011ce3a6a0] = 656
 relocation     [0x000000011ce3a558,0x000000011ce3a580] = 40
 main code      [0x000000011ce3a580,0x000000011ce3a610] = 144
 stub code      [0x000000011ce3a610,0x000000011ce3a640] = 48
 metadata       [0x000000011ce3a640,0x000000011ce3a648] = 8
 scopes data    [0x000000011ce3a648,0x000000011ce3a658] = 16
 scopes pcs     [0x000000011ce3a658,0x000000011ce3a698] = 64
 dependencies   [0x000000011ce3a698,0x000000011ce3a6a0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b062d58} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce3a580:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3a584:   movabs r11,0x12ac00000
  0x000000011ce3a58e:   add    r10,r11
  0x000000011ce3a591:   cmp    r10,rax
  0x000000011ce3a594:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3a59a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce3a5a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3a5a7:   push   rbp
  0x000000011ce3a5a8:   sub    rsp,0x30
  0x000000011ce3a5ac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3a5b4:   je     0x000000011ce3a5bb
  0x000000011ce3a5b6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::length@0 (line 194)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce3a5bb:   mov    eax,DWORD PTR [rsi+0xc]      ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::length@1 (line 194)
  0x000000011ce3a5be:   add    rsp,0x30
  0x000000011ce3a5c2:   pop    rbp
  0x000000011ce3a5c3:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3a5ca:   ja     0x000000011ce3a5d1
  0x000000011ce3a5d0:   ret    
  0x000000011ce3a5d1:   movabs r10,0x11ce3a5c3              ;   {internal_word}
  0x000000011ce3a5db:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3a5e2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3a5e7:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce3a5ee:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce3a5f9:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce3a604:   add    rsp,0x30
  0x000000011ce3a608:   pop    rbp
  0x000000011ce3a609:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce3a60e:   hlt    
  0x000000011ce3a60f:   hlt    
[Exception Handler]
  0x000000011ce3a610:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3a615:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce3a61f:   and    rsp,0xfffffffffffffff0
  0x000000011ce3a623:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce3a628:   hlt    
[Deopt Handler Code]
  0x000000011ce3a629:   movabs r10,0x11ce3a629              ;   {section_word}
  0x000000011ce3a633:   push   r10
  0x000000011ce3a635:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3a63a:   hlt    
  0x000000011ce3a63b:   hlt    
  0x000000011ce3a63c:   hlt    
  0x000000011ce3a63d:   hlt    
  0x000000011ce3a63e:   hlt    
  0x000000011ce3a63f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='93' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3a8a0' size='1344' address='0x000000011ce3a710' relocation_offset='328' insts_offset='400' method='java.lang.Object clone ()Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='1.280'/>

Compiled method (n/a)    1279   93     n 0       java.lang.Object::clone (native)
 total in heap  [0x000000011ce3a710,0x000000011ce3ac50] = 1344
 relocation     [0x000000011ce3a858,0x000000011ce3a890] = 56
 main code      [0x000000011ce3a8a0,0x000000011ce3ac50] = 944

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac011d8} &apos;clone&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ce3a8a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3a8a4:   movabs r11,0x12ac00000
  0x000000011ce3a8ae:   add    r10,r11
  0x000000011ce3a8b1:   cmp    rax,r10
  0x000000011ce3a8b4:   je     0x000000011ce3a8c0
  0x000000011ce3a8ba:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3a8bf:   nop
[Verified Entry Point]
  0x000000011ce3a8c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3a8c7:   push   rbp
  0x000000011ce3a8c8:   mov    rbp,rsp
  0x000000011ce3a8cb:   sub    rsp,0x40
  0x000000011ce3a8cf:   nop
  0x000000011ce3a8d0:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3a8d8:   je     0x000000011ce3a8df
  0x000000011ce3a8da:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3a8df:   mov    QWORD PTR [rsp],rsi
  0x000000011ce3a8e3:   cmp    rsi,0x0
  0x000000011ce3a8e7:   lea    rsi,[rsp]
  0x000000011ce3a8eb:   cmove  rsi,QWORD PTR [rsp]
  0x000000011ce3a8f0:   vzeroupper 
  0x000000011ce3a8f3:   movabs r10,0x11ce3a8f0              ;   {internal_word}
  0x000000011ce3a8fd:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce3a904:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce3a90b:   cmp    BYTE PTR [rip+0xffffffffefea4247],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3a912:   je     0x000000011ce3a948
  0x000000011ce3a918:   push   rsi
  0x000000011ce3a919:   movabs rsi,0x12ac011d8              ;   {metadata({method} {0x000000012ac011d8} &apos;clone&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ce3a923:   mov    rdi,r15
  0x000000011ce3a926:   test   spl,0xf
  0x000000011ce3a92a:   je     0x000000011ce3a942
  0x000000011ce3a930:   sub    rsp,0x8
  0x000000011ce3a934:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce3a939:   add    rsp,0x8
  0x000000011ce3a93d:   jmp    0x000000011ce3a947
  0x000000011ce3a942:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce3a947:   pop    rsi
  0x000000011ce3a948:   lea    rdi,[r15+0x2e0]
  0x000000011ce3a94f:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce3a95a:   call   0x000000010c4dbc00           ;   {runtime_call JVM_Clone}
  0x000000011ce3a95f:   vzeroupper 
  0x000000011ce3a962:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce3a96d:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce3a973:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce3a97a:   ja     0x000000011ce3a98e
  0x000000011ce3a980:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce3a988:   je     0x000000011ce3a9b2
  0x000000011ce3a98e:   vzeroupper 
  0x000000011ce3a991:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3a995:   mov    rdi,r15
  0x000000011ce3a998:   mov    r12,rsp
  0x000000011ce3a99b:   sub    rsp,0x0
  0x000000011ce3a99f:   and    rsp,0xfffffffffffffff0
  0x000000011ce3a9a3:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce3a9a8:   mov    rsp,r12
  0x000000011ce3a9ab:   xor    r12,r12
  0x000000011ce3a9ae:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3a9b2:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce3a9bd:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce3a9c5:   je     0x000000011ce3ac2a
  0x000000011ce3a9cb:   cmp    BYTE PTR [rip+0xffffffffefea4187],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3a9d2:   je     0x000000011ce3aa0e
  0x000000011ce3a9d8:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3a9dc:   movabs rsi,0x12ac011d8              ;   {metadata({method} {0x000000012ac011d8} &apos;clone&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ce3a9e6:   mov    rdi,r15
  0x000000011ce3a9e9:   test   spl,0xf
  0x000000011ce3a9ed:   je     0x000000011ce3aa05
  0x000000011ce3a9f3:   sub    rsp,0x8
  0x000000011ce3a9f7:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce3a9fc:   add    rsp,0x8
  0x000000011ce3aa00:   jmp    0x000000011ce3aa0a
  0x000000011ce3aa05:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce3aa0a:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3aa0e:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce3aa19:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce3aa24:   vzeroupper 
  0x000000011ce3aa27:   test   rax,rax
  0x000000011ce3aa2a:   je     0x000000011ce3ac07
  0x000000011ce3aa30:   test   al,0x1
  0x000000011ce3aa32:   je     0x000000011ce3ac04
  0x000000011ce3aa38:   mov    rax,QWORD PTR [rax-0x1]
  0x000000011ce3aa3c:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce3aa41:   je     0x000000011ce3abff
  0x000000011ce3aa47:   cmp    rax,0x0
  0x000000011ce3aa4b:   je     0x000000011ce3abff
  0x000000011ce3aa51:   mov    rcx,QWORD PTR [r15+0x28]
  0x000000011ce3aa55:   cmp    rcx,0x0
  0x000000011ce3aa59:   je     0x000000011ce3aa73
  0x000000011ce3aa5f:   sub    rcx,0x8
  0x000000011ce3aa63:   mov    QWORD PTR [r15+0x28],rcx
  0x000000011ce3aa67:   add    rcx,QWORD PTR [r15+0x38]
  0x000000011ce3aa6b:   mov    QWORD PTR [rcx],rax
  0x000000011ce3aa6e:   jmp    0x000000011ce3abff
  0x000000011ce3aa73:   sub    rsp,0xd0
  0x000000011ce3aa7a:   mov    QWORD PTR [rsp],rax
  0x000000011ce3aa7e:   mov    QWORD PTR [rsp+0x8],rcx
  0x000000011ce3aa83:   mov    QWORD PTR [rsp+0x10],rdx
  0x000000011ce3aa88:   mov    QWORD PTR [rsp+0x18],rsi
  0x000000011ce3aa8d:   mov    QWORD PTR [rsp+0x20],rdi
  0x000000011ce3aa92:   mov    QWORD PTR [rsp+0x28],r8
  0x000000011ce3aa97:   mov    QWORD PTR [rsp+0x30],r9
  0x000000011ce3aa9c:   mov    QWORD PTR [rsp+0x38],r10
  0x000000011ce3aaa1:   mov    QWORD PTR [rsp+0x40],r11
  0x000000011ce3aaa6:   vmovsd QWORD PTR [rsp+0x50],xmm0
  0x000000011ce3aaac:   vmovsd QWORD PTR [rsp+0x58],xmm1
  0x000000011ce3aab2:   vmovsd QWORD PTR [rsp+0x60],xmm2
  0x000000011ce3aab8:   vmovsd QWORD PTR [rsp+0x68],xmm3
  0x000000011ce3aabe:   vmovsd QWORD PTR [rsp+0x70],xmm4
  0x000000011ce3aac4:   vmovsd QWORD PTR [rsp+0x78],xmm5
  0x000000011ce3aaca:   vmovsd QWORD PTR [rsp+0x80],xmm6
  0x000000011ce3aad3:   vmovsd QWORD PTR [rsp+0x88],xmm7
  0x000000011ce3aadc:   vmovsd QWORD PTR [rsp+0x90],xmm8
  0x000000011ce3aae5:   vmovsd QWORD PTR [rsp+0x98],xmm9
  0x000000011ce3aaee:   vmovsd QWORD PTR [rsp+0xa0],xmm10
  0x000000011ce3aaf7:   vmovsd QWORD PTR [rsp+0xa8],xmm11
  0x000000011ce3ab00:   vmovsd QWORD PTR [rsp+0xb0],xmm12
  0x000000011ce3ab09:   vmovsd QWORD PTR [rsp+0xb8],xmm13
  0x000000011ce3ab12:   vmovsd QWORD PTR [rsp+0xc0],xmm14
  0x000000011ce3ab1b:   vmovsd QWORD PTR [rsp+0xc8],xmm15
  0x000000011ce3ab24:   mov    rsi,r15
  0x000000011ce3ab27:   mov    rdi,rax
  0x000000011ce3ab2a:   test   spl,0xf
  0x000000011ce3ab2e:   je     0x000000011ce3ab46
  0x000000011ce3ab34:   sub    rsp,0x8
  0x000000011ce3ab38:   call   0x000000010c3183a0           ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x000000011ce3ab3d:   add    rsp,0x8
  0x000000011ce3ab41:   jmp    0x000000011ce3ab4b
  0x000000011ce3ab46:   call   0x000000010c3183a0           ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x000000011ce3ab4b:   vmovsd xmm15,QWORD PTR [rsp+0xc8]
  0x000000011ce3ab54:   vmovsd xmm14,QWORD PTR [rsp+0xc0]
  0x000000011ce3ab5d:   vmovsd xmm13,QWORD PTR [rsp+0xb8]
  0x000000011ce3ab66:   vmovsd xmm12,QWORD PTR [rsp+0xb0]
  0x000000011ce3ab6f:   vmovsd xmm11,QWORD PTR [rsp+0xa8]
  0x000000011ce3ab78:   vmovsd xmm10,QWORD PTR [rsp+0xa0]
  0x000000011ce3ab81:   vmovsd xmm9,QWORD PTR [rsp+0x98]
  0x000000011ce3ab8a:   vmovsd xmm8,QWORD PTR [rsp+0x90]
  0x000000011ce3ab93:   vmovsd xmm7,QWORD PTR [rsp+0x88]
  0x000000011ce3ab9c:   vmovsd xmm6,QWORD PTR [rsp+0x80]
  0x000000011ce3aba5:   vmovsd xmm5,QWORD PTR [rsp+0x78]
  0x000000011ce3abab:   vmovsd xmm4,QWORD PTR [rsp+0x70]
  0x000000011ce3abb1:   vmovsd xmm3,QWORD PTR [rsp+0x68]
  0x000000011ce3abb7:   vmovsd xmm2,QWORD PTR [rsp+0x60]
  0x000000011ce3abbd:   vmovsd xmm1,QWORD PTR [rsp+0x58]
  0x000000011ce3abc3:   vmovsd xmm0,QWORD PTR [rsp+0x50]
  0x000000011ce3abc9:   mov    r11,QWORD PTR [rsp+0x40]
  0x000000011ce3abce:   mov    r10,QWORD PTR [rsp+0x38]
  0x000000011ce3abd3:   mov    r9,QWORD PTR [rsp+0x30]
  0x000000011ce3abd8:   mov    r8,QWORD PTR [rsp+0x28]
  0x000000011ce3abdd:   mov    rdi,QWORD PTR [rsp+0x20]
  0x000000011ce3abe2:   mov    rsi,QWORD PTR [rsp+0x18]
  0x000000011ce3abe7:   mov    rdx,QWORD PTR [rsp+0x10]
  0x000000011ce3abec:   mov    rcx,QWORD PTR [rsp+0x8]
  0x000000011ce3abf1:   mov    rax,QWORD PTR [rsp]
  0x000000011ce3abf5:   add    rsp,0xd0
  0x000000011ce3abfc:   vzeroupper 
  0x000000011ce3abff:   jmp    0x000000011ce3ac07
  0x000000011ce3ac04:   mov    rax,QWORD PTR [rax]
  0x000000011ce3ac07:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce3ac0e:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce3ac18:   leave  
  0x000000011ce3ac19:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce3ac1e:   jne    0x000000011ce3ac25
  0x000000011ce3ac24:   ret    
  0x000000011ce3ac25:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce3ac2a:   vzeroupper 
  0x000000011ce3ac2d:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3ac31:   mov    r12,rsp
  0x000000011ce3ac34:   sub    rsp,0x0
  0x000000011ce3ac38:   and    rsp,0xfffffffffffffff0
  0x000000011ce3ac3c:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce3ac41:   mov    rsp,r12
  0x000000011ce3ac44:   xor    r12,r12
  0x000000011ce3ac47:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3ac4b:   jmp    0x000000011ce3a9cb
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='90' compiler='c1' level='1' entry='0x000000011ce3ae00' size='664' address='0x000000011ce3ac90' relocation_offset='328' insts_offset='368' stub_offset='520' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' metadata_offset='568' method='java.lang.AbstractStringBuilder getValue ()[B' bytes='5' count='129' iicount='129' stamp='1.291'/>
<print_nmethod compile_id='90' compiler='c1' level='1' stamp='1.291'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1291   90       1       java.lang.AbstractStringBuilder::getValue (5 bytes)
 total in heap  [0x000000011ce3ac90,0x000000011ce3af28] = 664
 relocation     [0x000000011ce3add8,0x000000011ce3ae00] = 40
 main code      [0x000000011ce3ae00,0x000000011ce3ae98] = 152
 stub code      [0x000000011ce3ae98,0x000000011ce3aec8] = 48
 metadata       [0x000000011ce3aec8,0x000000011ce3aed0] = 8
 scopes data    [0x000000011ce3aed0,0x000000011ce3aee0] = 16
 scopes pcs     [0x000000011ce3aee0,0x000000011ce3af20] = 64
 dependencies   [0x000000011ce3af20,0x000000011ce3af28] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b063d18} &apos;getValue&apos; &apos;()[B&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce3ae00:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3ae04:   movabs r11,0x12ac00000
  0x000000011ce3ae0e:   add    r10,r11
  0x000000011ce3ae11:   cmp    r10,rax
  0x000000011ce3ae14:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3ae1a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce3ae20:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3ae27:   push   rbp
  0x000000011ce3ae28:   sub    rsp,0x30
  0x000000011ce3ae2c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3ae34:   je     0x000000011ce3ae3b
  0x000000011ce3ae36:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getValue@0 (line 1656)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce3ae3b:   mov    eax,DWORD PTR [rsi+0x14]
  0x000000011ce3ae3e:   shl    rax,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getValue@1 (line 1656)
  0x000000011ce3ae42:   add    rsp,0x30
  0x000000011ce3ae46:   pop    rbp
  0x000000011ce3ae47:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3ae4e:   ja     0x000000011ce3ae55
  0x000000011ce3ae54:   ret    
  0x000000011ce3ae55:   movabs r10,0x11ce3ae47              ;   {internal_word}
  0x000000011ce3ae5f:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3ae66:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3ae6b:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce3ae72:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce3ae7d:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce3ae88:   add    rsp,0x30
  0x000000011ce3ae8c:   pop    rbp
  0x000000011ce3ae8d:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce3ae92:   hlt    
  0x000000011ce3ae93:   hlt    
  0x000000011ce3ae94:   hlt    
  0x000000011ce3ae95:   hlt    
  0x000000011ce3ae96:   hlt    
  0x000000011ce3ae97:   hlt    
[Exception Handler]
  0x000000011ce3ae98:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3ae9d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce3aea7:   and    rsp,0xfffffffffffffff0
  0x000000011ce3aeab:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce3aeb0:   hlt    
[Deopt Handler Code]
  0x000000011ce3aeb1:   movabs r10,0x11ce3aeb1              ;   {section_word}
  0x000000011ce3aebb:   push   r10
  0x000000011ce3aebd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3aec2:   hlt    
  0x000000011ce3aec3:   hlt    
  0x000000011ce3aec4:   hlt    
  0x000000011ce3aec5:   hlt    
  0x000000011ce3aec6:   hlt    
  0x000000011ce3aec7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='94' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3b0e0' size='368' address='0x000000011ce3af90' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JILjava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='1.294'/>

Compiled method (n/a)    1294   94     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJIL)J (native)
 total in heap  [0x000000011ce3af90,0x000000011ce3b100] = 368
 relocation     [0x000000011ce3b0d8,0x000000011ce3b0e0] = 8
 main code      [0x000000011ce3b0e0,0x000000011ce3b100] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc224d8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JILjava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3b0e0:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce3b0e3:   mov    ebx,DWORD PTR [r8+0x24]
  0x000000011ce3b0e7:   shl    rbx,0x3
  0x000000011ce3b0eb:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3b0ef:   test   rbx,rbx
  0x000000011ce3b0f2:   je     0x000000011ce3b0fb
  0x000000011ce3b0f8:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3b0fb:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<task_queued compile_id='95' method='jdk.internal.org.objectweb.asm.SymbolTable addConstantUtf8 (Ljava/lang/String;)I' bytes='98' count='384' backedge_count='10' iicount='384' level='3' stamp='1.296' comment='tiered' hot_count='384'/>
<task_queued compile_id='96' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='256' iicount='256' level='3' stamp='1.296' comment='tiered' hot_count='256'/>
<task_queued compile_id='97' method='java.lang.invoke.MethodTypeForm parameterSlotCount ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.297' comment='tiered' hot_count='128'/>
<task_queued compile_id='98' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='384' iicount='384' level='3' stamp='1.297' comment='tiered' hot_count='384'/>
<task_queued compile_id='99' method='java.lang.ref.NativeReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='384' iicount='384' level='3' stamp='1.297' comment='tiered' hot_count='384'/>
<nmethod compile_id='100' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3b3e0' size='368' address='0x000000011ce3b290' relocation_offset='328' insts_offset='336' stub_offset='364' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.297'/>

Compiled method (n/a)    1296  100     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLJL)L (native)
 total in heap  [0x000000011ce3b290,0x000000011ce3b400] = 368
 relocation     [0x000000011ce3b3d8,0x000000011ce3b3e0] = 8
 main code      [0x000000011ce3b3e0,0x000000011ce3b3fc] = 28
 stub code      [0x000000011ce3b3fc,0x000000011ce3b400] = 4

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc22bd8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = long
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3b3e0:   mov    ebx,DWORD PTR [rdi+0x24]
  0x000000011ce3b3e3:   shl    rbx,0x3
  0x000000011ce3b3e7:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3b3eb:   test   rbx,rbx
  0x000000011ce3b3ee:   je     0x000000011ce3b3f7
  0x000000011ce3b3f4:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3b3f7:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3b3fc:   hlt    
  0x000000011ce3b3fd:   hlt    
  0x000000011ce3b3fe:   hlt    
  0x000000011ce3b3ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='95' compiler='c1' level='3' entry='0x0000000115374f20' size='3464' address='0x0000000115374d10' relocation_offset='328' insts_offset='528' stub_offset='1912' scopes_data_offset='2088' scopes_pcs_offset='2584' dependencies_offset='3384' nul_chk_table_offset='3392' metadata_offset='2056' method='jdk.internal.org.objectweb.asm.SymbolTable addConstantUtf8 (Ljava/lang/String;)I' bytes='98' count='397' backedge_count='10' iicount='397' stamp='1.299'/>
<print_nmethod compile_id='95' compiler='c1' level='3' stamp='1.299'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1298   95       3       jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8 (98 bytes)
 total in heap  [0x0000000115374d10,0x0000000115375a98] = 3464
 relocation     [0x0000000115374e58,0x0000000115374f20] = 200
 main code      [0x0000000115374f20,0x0000000115375488] = 1384
 stub code      [0x0000000115375488,0x0000000115375518] = 144
 metadata       [0x0000000115375518,0x0000000115375538] = 32
 scopes data    [0x0000000115375538,0x0000000115375728] = 496
 scopes pcs     [0x0000000115375728,0x0000000115375a48] = 800
 dependencies   [0x0000000115375a48,0x0000000115375a50] = 8
 nul chk table  [0x0000000115375a50,0x0000000115375a98] = 72

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000115374f20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115374f24:   movabs r11,0x12ac00000
  0x0000000115374f2e:   add    r10,r11
  0x0000000115374f31:   cmp    r10,rax
  0x0000000115374f34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115374f3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115374f40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115374f47:   push   rbp
  0x0000000115374f48:   sub    rsp,0x90
  0x0000000115374f4f:   nop
  0x0000000115374f50:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115374f58:   je     0x0000000115374f5f
  0x0000000115374f5a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115374f5f:   mov    QWORD PTR [rsp+0x60],rsi
  0x0000000115374f64:   mov    QWORD PTR [rsp+0x68],rdx
  0x0000000115374f69:   movabs rdi,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115374f73:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115374f79:   add    ebx,0x2
  0x0000000115374f7c:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115374f82:   and    ebx,0x7fe
  0x0000000115374f88:   cmp    ebx,0x0
  0x0000000115374f8b:   je     0x0000000115375375           ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@0 (line 796)
  0x0000000115374f91:   movabs rdi,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115374f9b:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115374fa3:   movabs rdi,0x16bc205c0              ;   {metadata(method data for {method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115374fad:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115374fb3:   add    ebx,0x2
  0x0000000115374fb6:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115374fbc:   and    ebx,0x1ffffe
  0x0000000115374fc2:   cmp    ebx,0x0
  0x0000000115374fc5:   je     0x0000000115375396
  0x0000000115374fcb:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x00000001153753b7
  0x0000000115374fce:   mov    rdi,rdx
  0x0000000115374fd1:   movabs rbx,0x16bc205c0              ;   {metadata(method data for {method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115374fdb:   add    QWORD PTR [rbx+0xf0],0x1
  0x0000000115374fe3:   mov    rsi,rdx                      ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@2 (line 796)
  0x0000000115374fe6:   nop
  0x0000000115374fe7:   call   0x000000011c900600           ; ImmutableOopMap {[96]=Oop [104]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@2 (line 796)
                                                            ;   {optimized virtual_call}
  0x0000000115374fec:   inc    eax
  0x0000000115374fee:   and    eax,0x7fffffff
  0x0000000115374ff3:   mov    DWORD PTR [rsp+0x78],eax
  0x0000000115374ff7:   mov    rsi,QWORD PTR [rsp+0x60]
  0x0000000115374ffc:   movabs rdx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375006:   add    QWORD PTR [rdx+0x100],0x1
  0x000000011537500e:   movabs rdx,0x16bc1d8a8              ;   {metadata(method data for {method} {0x000000012af6f8c8} &apos;get&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375018:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537501e:   add    esi,0x2
  0x0000000115375021:   mov    DWORD PTR [rdx+0xac],esi
  0x0000000115375027:   and    esi,0x1ffffe
  0x000000011537502d:   cmp    esi,0x0
  0x0000000115375030:   je     0x00000001153753bc
  0x0000000115375036:   mov    rsi,QWORD PTR [rsp+0x60]
  0x000000011537503b:   mov    edi,DWORD PTR [rsi+0x2c]
  0x000000011537503e:   shl    rdi,0x3                      ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@1 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
  0x0000000115375042:   mov    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x00000001153753dd
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@9 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
  0x0000000115375045:   mov    rcx,rax
  0x0000000115375048:   mov    rax,rcx
  0x000000011537504b:   cmp    eax,0x80000000
  0x0000000115375050:   jne    0x0000000115375061
  0x0000000115375056:   xor    edx,edx
  0x0000000115375058:   cmp    ebx,0xffffffff
  0x000000011537505b:   je     0x0000000115375064
  0x0000000115375061:   cdq    
  0x0000000115375062:   idiv   ebx                          ; implicit exception: dispatches to 0x00000001153753e2
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@10 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
  0x0000000115375064:   movsxd rdx,edx
  0x0000000115375067:   mov    edx,DWORD PTR [rdi+rdx*4+0x10]
  0x000000011537506b:   shl    rdx,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@11 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
  0x000000011537506f:   nop
  0x0000000115375070:   mov    rdi,QWORD PTR [rsp+0x68]
  0x0000000115375075:   cmp    rdx,0x0
  0x0000000115375079:   movabs rbx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375083:   movabs rax,0x138
  0x000000011537508d:   je     0x000000011537509d
  0x0000000115375093:   movabs rax,0x148
  0x000000011537509d:   mov    r8,QWORD PTR [rbx+rax*1]
  0x00000001153750a1:   lea    r8,[r8+0x1]
  0x00000001153750a5:   mov    QWORD PTR [rbx+rax*1],r8
  0x00000001153750a9:   je     0x0000000115375208           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@13 (line 798)
  0x00000001153750af:   mov    ebx,DWORD PTR [rdx+0x18]     ; implicit exception: dispatches to 0x00000001153753e7
                                                            ;*getfield tag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@17 (line 799)
  0x00000001153750b2:   cmp    ebx,0x1
  0x00000001153750b5:   movabs rbx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153750bf:   movabs rax,0x158
  0x00000001153750c9:   jne    0x00000001153750d9
  0x00000001153750cf:   movabs rax,0x168
  0x00000001153750d9:   mov    r8,QWORD PTR [rbx+rax*1]
  0x00000001153750dd:   lea    r8,[r8+0x1]
  0x00000001153750e1:   mov    QWORD PTR [rbx+rax*1],r8
  0x00000001153750e5:   jne    0x000000011537519a           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@21 (line 799)
  0x00000001153750eb:   mov    ebx,DWORD PTR [rdx+0x2c]     ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@25 (line 799)
  0x00000001153750ee:   cmp    ebx,ecx
  0x00000001153750f0:   movabs rbx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153750fa:   movabs rax,0x178
  0x0000000115375104:   jne    0x0000000115375114
  0x000000011537510a:   movabs rax,0x188
  0x0000000115375114:   mov    r8,QWORD PTR [rbx+rax*1]
  0x0000000115375118:   lea    r8,[r8+0x1]
  0x000000011537511c:   mov    QWORD PTR [rbx+rax*1],r8
  0x0000000115375120:   jne    0x000000011537519a           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@29 (line 799)
  0x0000000115375126:   mov    ebx,DWORD PTR [rdx+0x28]
  0x0000000115375129:   shl    rbx,0x3                      ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@33 (line 799)
  0x000000011537512d:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00000001153753ec
  0x0000000115375130:   mov    rcx,rbx
  0x0000000115375133:   movabs r8,0x16bc22540               ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537513d:   add    QWORD PTR [r8+0x198],0x1
  0x0000000115375145:   mov    QWORD PTR [rsp+0x70],rdx
  0x000000011537514a:   mov    rdx,rdi
  0x000000011537514d:   mov    rsi,rbx                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@37 (line 801)
  0x0000000115375150:   nop    DWORD PTR [rax+0x0]
  0x0000000115375157:   call   0x000000011c900600           ; ImmutableOopMap {[96]=Oop [104]=Oop [112]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@37 (line 801)
                                                            ;   {optimized virtual_call}
  0x000000011537515c:   cmp    eax,0x0
  0x000000011537515f:   movabs rax,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375169:   movabs rdx,0x1e0
  0x0000000115375173:   jne    0x0000000115375183
  0x0000000115375179:   movabs rdx,0x1d0
  0x0000000115375183:   mov    rsi,QWORD PTR [rax+rdx*1]
  0x0000000115375187:   lea    rsi,[rsi+0x1]
  0x000000011537518b:   mov    QWORD PTR [rax+rdx*1],rsi
  0x000000011537518f:   mov    rdx,QWORD PTR [rsp+0x70]
  0x0000000115375194:   jne    0x00000001153751ef           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@40 (line 801)
  0x000000011537519a:   mov    eax,DWORD PTR [rdx+0x30]
  0x000000011537519d:   shl    rax,0x3                      ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@49 (line 804)
  0x00000001153751a1:   movabs rdx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153751ab:   mov    esi,DWORD PTR [rdx+0xb0]
  0x00000001153751b1:   add    esi,0x2
  0x00000001153751b4:   mov    DWORD PTR [rdx+0xb0],esi
  0x00000001153751ba:   and    esi,0x3ffe
  0x00000001153751c0:   cmp    esi,0x0
  0x00000001153751c3:   je     0x00000001153753f1           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@53 (line 804)
  0x00000001153751c9:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rax=Oop [96]=Oop [104]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@53 (line 804)
  0x00000001153751d0:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00000001153751d3:   movabs rdx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153751dd:   inc    DWORD PTR [rdx+0x1f0]
  0x00000001153751e3:   mov    rdx,rax
  0x00000001153751e6:   mov    ecx,DWORD PTR [rsp+0x78]
  0x00000001153751ea:   jmp    0x0000000115375070           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@53 (line 804)
  0x00000001153751ef:   mov    eax,DWORD PTR [rdx+0xc]      ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@44 (line 802)
  0x00000001153751f2:   add    rsp,0x90
  0x00000001153751f9:   pop    rbp
  0x00000001153751fa:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115375201:   ja     0x0000000115375412
  0x0000000115375207:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@47 (line 802)
  0x0000000115375208:   mov    rsi,QWORD PTR [rsp+0x60]
  0x000000011537520d:   mov    edi,DWORD PTR [rsi+0x30]
  0x0000000115375210:   shl    rdi,0x3                      ;*getfield constantPool {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@57 (line 806)
  0x0000000115375214:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x0000000115375428
  0x0000000115375217:   mov    rbx,rdi
  0x000000011537521a:   movabs rcx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375224:   movabs r10,0x12af6d188              ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011537522e:   mov    QWORD PTR [rcx+0x218],r10
  0x0000000115375235:   add    QWORD PTR [rcx+0x220],0x1
  0x000000011537523d:   mov    edx,0x1
  0x0000000115375242:   mov    rsi,rdi                      ;*invokevirtual putByte {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@61 (line 806)
  0x0000000115375245:   xchg   ax,ax
  0x0000000115375247:   call   0x000000011c900600           ; ImmutableOopMap {[96]=Oop [104]=Oop }
                                                            ;*invokevirtual putByte {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@61 (line 806)
                                                            ;   {optimized virtual_call}
  0x000000011537524c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011537542d
  0x000000011537524f:   mov    rdx,rax
  0x0000000115375252:   movabs rsi,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537525c:   movabs r10,0x12af6d188              ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x0000000115375266:   mov    QWORD PTR [rsi+0x250],r10
  0x000000011537526d:   add    QWORD PTR [rsi+0x258],0x1
  0x0000000115375275:   mov    rdx,QWORD PTR [rsp+0x68]
  0x000000011537527a:   mov    rsi,rax                      ;*invokevirtual putUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@65 (line 806)
  0x000000011537527d:   xchg   ax,ax
  0x000000011537527f:   call   0x000000011c900600           ; ImmutableOopMap {[96]=Oop [104]=Oop }
                                                            ;*invokevirtual putUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@65 (line 806)
                                                            ;   {optimized virtual_call}
  0x0000000115375284:   movabs rdx,0x12af6f198              ;   {metadata(&apos;jdk/internal/org/objectweb/asm/SymbolTable$Entry&apos;)}
  0x000000011537528e:   mov    rax,QWORD PTR [r15+0xf8]
  0x0000000115375295:   lea    rdi,[rax+0x38]
  0x0000000115375299:   cmp    rdi,QWORD PTR [r15+0x108]
  0x00000001153752a0:   ja     0x0000000115375432
  0x00000001153752a6:   mov    QWORD PTR [r15+0xf8],rdi
  0x00000001153752ad:   mov    QWORD PTR [rax],0x1
  0x00000001153752b4:   mov    rcx,rdx
  0x00000001153752b7:   movabs r10,0x12ac00000
  0x00000001153752c1:   sub    rcx,r10
  0x00000001153752c4:   mov    DWORD PTR [rax+0x8],ecx
  0x00000001153752c7:   xor    rcx,rcx
  0x00000001153752ca:   mov    DWORD PTR [rax+0xc],ecx
  0x00000001153752cd:   xor    rcx,rcx
  0x00000001153752d0:   movabs rdi,0x5
  0x00000001153752da:   mov    QWORD PTR [rax+rdi*8+0x8],rcx
  0x00000001153752df:   dec    rdi
  0x00000001153752e2:   jne    0x00000001153752da           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@70 (line 807)
  0x00000001153752e4:   mov    rsi,QWORD PTR [rsp+0x60]
  0x00000001153752e9:   mov    edx,DWORD PTR [rsi+0x14]     ;*getfield constantPoolCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@76 (line 807)
  0x00000001153752ec:   mov    rcx,rdx
  0x00000001153752ef:   inc    ecx
  0x00000001153752f1:   mov    DWORD PTR [rsi+0x14],ecx     ;*putfield constantPoolCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@82 (line 807)
  0x00000001153752f4:   mov    rcx,rax
  0x00000001153752f7:   movabs r8,0x16bc22540               ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x0000000115375301:   add    QWORD PTR [r8+0x278],0x1
  0x0000000115375309:   mov    ecx,0x1
  0x000000011537530e:   mov    r8,QWORD PTR [rsp+0x68]
  0x0000000115375313:   mov    r9d,DWORD PTR [rsp+0x78]
  0x0000000115375318:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@88 (line 807)
  0x000000011537531b:   mov    QWORD PTR [rsp+0x80],rax
  0x0000000115375323:   nop    DWORD PTR [rax+0x0]
  0x0000000115375327:   call   0x000000011c900600           ; ImmutableOopMap {[96]=Oop [128]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@88 (line 807)
                                                            ;   {optimized virtual_call}
  0x000000011537532c:   mov    rsi,QWORD PTR [rsp+0x60]
  0x0000000115375331:   movabs rdx,0x16bc22540              ;   {metadata(method data for {method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537533b:   add    QWORD PTR [rdx+0x288],0x1
  0x0000000115375343:   mov    rdx,QWORD PTR [rsp+0x80]
  0x000000011537534b:   mov    rsi,QWORD PTR [rsp+0x60]     ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@91 (line 807)
  0x0000000115375350:   nop    DWORD PTR [rax+0x0]
  0x0000000115375357:   call   0x000000011c900600           ; ImmutableOopMap {}
                                                            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@91 (line 807)
                                                            ;   {optimized virtual_call}
  0x000000011537535c:   mov    eax,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x000000011537543f
                                                            ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@94 (line 807)
  0x000000011537535f:   add    rsp,0x90
  0x0000000115375366:   pop    rbp
  0x0000000115375367:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537536e:   ja     0x0000000115375444
  0x0000000115375374:   ret    
  0x0000000115375375:   movabs r10,0x12af6fd98              ;   {metadata({method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x000000011537537f:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115375384:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537538c:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop [96]=Oop [104]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@-1 (line 796)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115375391:   jmp    0x0000000115374f91
  0x0000000115375396:   movabs r10,0x12af6fa80              ;   {metadata({method} {0x000000012af6fa80} &apos;hash&apos; &apos;(ILjava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153753a0:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153753a5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153753ad:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop [96]=Oop [104]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@-1 (line 1273)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@2 (line 796)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153753b2:   jmp    0x0000000115374fcb
  0x00000001153753b7:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop [96]=Oop [104]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::hash@4 (line 1273)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@2 (line 796)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153753bc:   movabs r10,0x12af6f8c8              ;   {metadata({method} {0x000000012af6f8c8} &apos;get&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153753c6:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153753cb:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153753d3:   call   0x000000011c9c1480           ; ImmutableOopMap {[96]=Oop [104]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@-1 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153753d8:   jmp    0x0000000115375036
  0x00000001153753dd:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [96]=Oop [104]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@9 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153753e2:   call   0x000000011c9bbe00           ; ImmutableOopMap {rsi=Oop rdi=Oop [96]=Oop [104]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::get@10 (line 426)
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@8 (line 797)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00000001153753e7:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop rdi=Oop [96]=Oop [104]=Oop }
                                                            ;*getfield tag {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@17 (line 799)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153753ec:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop rdi=Oop rbx=Oop [96]=Oop [104]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@37 (line 801)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153753f1:   movabs r10,0x12af6fd98              ;   {metadata({method} {0x000000012af6fd98} &apos;addConstantUtf8&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/SymbolTable&apos;)}
  0x00000001153753fb:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115375400:   mov    QWORD PTR [rsp],0x35
  0x0000000115375408:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [96]=Oop [104]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@53 (line 804)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537540d:   jmp    0x00000001153751c9
  0x0000000115375412:   movabs r10,0x1153751fa              ;   {internal_word}
  0x000000011537541c:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115375423:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115375428:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [96]=Oop [104]=Oop }
                                                            ;*invokevirtual putByte {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@61 (line 806)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537542d:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [96]=Oop [104]=Oop }
                                                            ;*invokevirtual putUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@65 (line 806)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115375432:   mov    rdx,rdx
  0x0000000115375435:   call   0x000000011c9bca00           ; ImmutableOopMap {[96]=Oop [104]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@70 (line 807)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537543a:   jmp    0x00000001153752e4
  0x000000011537543f:   call   0x000000011c9bc100           ; ImmutableOopMap {}
                                                            ;*getfield index {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8@94 (line 807)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115375444:   movabs r10,0x115375367              ;   {internal_word}
  0x000000011537544e:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115375455:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537545a:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115375461:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537546c:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115375477:   add    rsp,0x90
  0x000000011537547e:   pop    rbp
  0x000000011537547f:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115375484:   hlt    
  0x0000000115375485:   hlt    
  0x0000000115375486:   hlt    
  0x0000000115375487:   hlt    
[Stub Code]
  0x0000000115375488:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011537548d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115375497:   jmp    0x0000000115375497           ;   {runtime_call}
  0x000000011537549c:   nop
  0x000000011537549d:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153754a7:   jmp    0x00000001153754a7           ;   {runtime_call}
[Exception Handler]
  0x00000001153754ac:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000001153754b1:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x00000001153754bb:   and    rsp,0xfffffffffffffff0
  0x00000001153754bf:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001153754c4:   hlt    
[Deopt Handler Code]
  0x00000001153754c5:   movabs r10,0x1153754c5              ;   {section_word}
  0x00000001153754cf:   push   r10
  0x00000001153754d1:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x00000001153754d6:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153754e0:   jmp    0x00000001153754e0           ;   {runtime_call}
  0x00000001153754e5:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153754ef:   jmp    0x00000001153754ef           ;   {runtime_call}
  0x00000001153754f4:   movabs rbx,0x0                      ;   {static_stub}
  0x00000001153754fe:   jmp    0x00000001153754fe           ;   {runtime_call}
  0x0000000115375503:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537550d:   jmp    0x000000011537550d           ;   {runtime_call}
  0x0000000115375512:   hlt    
  0x0000000115375513:   hlt    
  0x0000000115375514:   hlt    
  0x0000000115375515:   hlt    
  0x0000000115375516:   hlt    
  0x0000000115375517:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='101' method='java.lang.invoke.MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='384' iicount='384' level='3' stamp='1.318' comment='tiered' hot_count='384'/>
<nmethod compile_id='102' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3b6e0' size='384' address='0x000000011ce3b590' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.318'/>

Compiled method (n/a)    1317  102     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLJ)L (native)
 total in heap  [0x000000011ce3b590,0x000000011ce3b710] = 384
 relocation     [0x000000011ce3b6d8,0x000000011ce3b6e0] = 8
 main code      [0x000000011ce3b6e0,0x000000011ce3b70a] = 42
 stub code      [0x000000011ce3b70a,0x000000011ce3b710] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc23960} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = long
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3b6e0:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce3b6e3:   shl    rbx,0x3
  0x000000011ce3b6e7:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3b6ea:   shl    rbx,0x3
  0x000000011ce3b6ee:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce3b6f1:   shl    rbx,0x3
  0x000000011ce3b6f5:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3b6f9:   test   rbx,rbx
  0x000000011ce3b6fc:   je     0x000000011ce3b705
  0x000000011ce3b702:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3b705:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3b70a:   hlt    
  0x000000011ce3b70b:   hlt    
  0x000000011ce3b70c:   hlt    
  0x000000011ce3b70d:   hlt    
  0x000000011ce3b70e:   hlt    
  0x000000011ce3b70f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='98' compiler='c1' level='3' entry='0x0000000115375ce0' size='1888' address='0x0000000115375b10' relocation_offset='328' insts_offset='464' stub_offset='1280' scopes_data_offset='1400' scopes_pcs_offset='1528' dependencies_offset='1848' nul_chk_table_offset='1864' metadata_offset='1360' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='410' iicount='410' stamp='1.320'/>
<print_nmethod compile_id='98' compiler='c1' level='3' stamp='1.320'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1319   98       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
 total in heap  [0x0000000115375b10,0x0000000115376270] = 1888
 relocation     [0x0000000115375c58,0x0000000115375cc8] = 112
 main code      [0x0000000115375ce0,0x0000000115376010] = 816
 stub code      [0x0000000115376010,0x0000000115376060] = 80
 metadata       [0x0000000115376060,0x0000000115376088] = 40
 scopes data    [0x0000000115376088,0x0000000115376108] = 128
 scopes pcs     [0x0000000115376108,0x0000000115376248] = 320
 dependencies   [0x0000000115376248,0x0000000115376258] = 16
 nul chk table  [0x0000000115376258,0x0000000115376270] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000115375ce0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115375ce4:   movabs r11,0x12ac00000
  0x0000000115375cee:   add    r10,r11
  0x0000000115375cf1:   cmp    r10,rax
  0x0000000115375cf4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115375cfa:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115375d00:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115375d07:   push   rbp
  0x0000000115375d08:   sub    rsp,0x50
  0x0000000115375d0c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115375d14:   je     0x0000000115375d1b
  0x0000000115375d16:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115375d1b:   mov    QWORD PTR [rsp+0x40],rsi
  0x0000000115375d20:   movabs rdi,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375d2a:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115375d30:   add    ebx,0x2
  0x0000000115375d33:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115375d39:   and    ebx,0x7fe
  0x0000000115375d3f:   cmp    ebx,0x0
  0x0000000115375d42:   je     0x0000000115375f61
  0x0000000115375d48:   jmp    0x0000000115375e63           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@0 (line 1458)
  0x0000000115375d4d:   data16 xchg ax,ax
  0x0000000115375d50:   mov    rsi,QWORD PTR [rsp+0x40]
  0x0000000115375d55:   mov    edi,DWORD PTR [rsi+0xc]
  0x0000000115375d58:   shl    rdi,0x3                      ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@13 (line 1459)
  0x0000000115375d5c:   cmp    rdi,0x0
  0x0000000115375d60:   je     0x0000000115375d8f
  0x0000000115375d66:   movabs r8,0x12ac65178               ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115375d70:   mov    ebx,DWORD PTR [rdi+0x8]
  0x0000000115375d73:   movabs r10,0x12ac00000
  0x0000000115375d7d:   add    rbx,r10
  0x0000000115375d80:   cmp    r8,QWORD PTR [rbx+0x40]
  0x0000000115375d84:   jne    0x0000000115375f82
  0x0000000115375d8a:   jmp    0x0000000115375d8f
  0x0000000115375d8f:   mov    rdx,rdi
  0x0000000115375d92:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x0000000115375f87
                                                            ;*invokeinterface remove {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
  0x0000000115375d95:   mov    rdx,rdi
  0x0000000115375d98:   movabs rcx,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375da2:   movabs r10,0x12ac65178              ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115375dac:   mov    QWORD PTR [rcx+0x158],r10
  0x0000000115375db3:   add    QWORD PTR [rcx+0x160],0x1
  0x0000000115375dbb:   movabs rdx,0x16bc22e18              ;   {metadata(method data for {method} {0x000000012ac65c08} &apos;remove&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115375dc5:   mov    ecx,DWORD PTR [rdx+0xac]
  0x0000000115375dcb:   add    ecx,0x2
  0x0000000115375dce:   mov    DWORD PTR [rdx+0xac],ecx
  0x0000000115375dd4:   and    ecx,0x1ffffe
  0x0000000115375dda:   cmp    ecx,0x0
  0x0000000115375ddd:   je     0x0000000115375f8c
  0x0000000115375de3:   mov    rdx,rdi
  0x0000000115375de6:   movabs rcx,0x16bc22e18              ;   {metadata(method data for {method} {0x000000012ac65c08} &apos;remove&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115375df0:   add    QWORD PTR [rcx+0xf0],0x1
  0x0000000115375df8:   mov    rdx,rax
  0x0000000115375dfb:   movabs rcx,0x0                      ;   {oop(NULL)}
  0x0000000115375e05:   movabs r8,0x0                       ;   {oop(NULL)}
  0x0000000115375e0f:   mov    rsi,rdi                      ;*invokevirtual replaceNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::remove@4 (line 1102)
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
  0x0000000115375e12:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000115375e17:   call   0x000000011c900600           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual replaceNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::remove@4 (line 1102)
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
                                                            ;   {optimized virtual_call}
  0x0000000115375e1c:   movabs rsi,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375e26:   mov    edi,DWORD PTR [rsi+0xb0]
  0x0000000115375e2c:   add    edi,0x2
  0x0000000115375e2f:   mov    DWORD PTR [rsi+0xb0],edi
  0x0000000115375e35:   and    edi,0x3ffe
  0x0000000115375e3b:   cmp    edi,0x0
  0x0000000115375e3e:   je     0x0000000115375fad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1459)
  0x0000000115375e44:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1459)
  0x0000000115375e4b:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000115375e4e:   movabs rsi,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375e58:   inc    DWORD PTR [rsi+0x180]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1459)
  0x0000000115375e5e:   mov    rsi,QWORD PTR [rsp+0x40]
  0x0000000115375e63:   mov    edi,DWORD PTR [rsi+0x10]
  0x0000000115375e66:   shl    rdi,0x3                      ;*getfield stale {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@1 (line 1458)
  0x0000000115375e6a:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x0000000115375fce
  0x0000000115375e6d:   mov    rbx,rdi
  0x0000000115375e70:   movabs rax,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375e7a:   mov    ebx,DWORD PTR [rbx+0x8]
  0x0000000115375e7d:   movabs r10,0x12ac00000
  0x0000000115375e87:   add    rbx,r10
  0x0000000115375e8a:   cmp    rbx,QWORD PTR [rax+0x100]
  0x0000000115375e91:   jne    0x0000000115375ea0
  0x0000000115375e93:   add    QWORD PTR [rax+0x108],0x1
  0x0000000115375e9b:   jmp    0x0000000115375f00
  0x0000000115375ea0:   cmp    rbx,QWORD PTR [rax+0x110]
  0x0000000115375ea7:   jne    0x0000000115375eb6
  0x0000000115375ea9:   add    QWORD PTR [rax+0x118],0x1
  0x0000000115375eb1:   jmp    0x0000000115375f00
  0x0000000115375eb6:   cmp    QWORD PTR [rax+0x100],0x0
  0x0000000115375ebe:   jne    0x0000000115375ed7
  0x0000000115375ec0:   mov    QWORD PTR [rax+0x100],rbx
  0x0000000115375ec7:   mov    QWORD PTR [rax+0x108],0x1
  0x0000000115375ed2:   jmp    0x0000000115375f00
  0x0000000115375ed7:   cmp    QWORD PTR [rax+0x110],0x0
  0x0000000115375edf:   jne    0x0000000115375ef8
  0x0000000115375ee1:   mov    QWORD PTR [rax+0x110],rbx
  0x0000000115375ee8:   mov    QWORD PTR [rax+0x118],0x1
  0x0000000115375ef3:   jmp    0x0000000115375f00
  0x0000000115375ef8:   add    QWORD PTR [rax+0xf0],0x1
  0x0000000115375f00:   mov    rsi,rdi                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1458)
  0x0000000115375f03:   xchg   ax,ax
  0x0000000115375f05:   movabs rax,0xffffffffffffffff
  0x0000000115375f0f:   call   0x000000011c8fd1a0           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1458)
                                                            ;   {virtual_call}
  0x0000000115375f14:   cmp    rax,0x0
  0x0000000115375f18:   movabs rdx,0x16bc22c40              ;   {metadata(method data for {method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375f22:   movabs rcx,0x138
  0x0000000115375f2c:   jne    0x0000000115375f3c
  0x0000000115375f32:   movabs rcx,0x128
  0x0000000115375f3c:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x0000000115375f40:   lea    r8,[r8+0x1]
  0x0000000115375f44:   mov    QWORD PTR [rdx+rcx*1],r8
  0x0000000115375f48:   jne    0x0000000115375d50           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@9 (line 1458)
  0x0000000115375f4e:   add    rsp,0x50
  0x0000000115375f52:   pop    rbp
  0x0000000115375f53:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115375f5a:   ja     0x0000000115375fd3
  0x0000000115375f60:   ret    
  0x0000000115375f61:   movabs r10,0x12ad64020              ;   {metadata({method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375f6b:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115375f70:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115375f78:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@-1 (line 1458)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115375f7d:   jmp    0x0000000115375d48
  0x0000000115375f82:   call   0x000000011c9bec80           ; ImmutableOopMap {rax=Oop rsi=Oop rdi=Oop [64]=Oop }
                                                            ;*invokeinterface remove {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
                                                            ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000000115375f87:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rsi=Oop rdi=Oop [64]=Oop }
                                                            ;*invokeinterface remove {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115375f8c:   movabs r10,0x12ac65c08              ;   {metadata({method} {0x000000012ac65c08} &apos;remove&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115375f96:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115375f9b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115375fa3:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop rsi=Oop rdi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::remove@-1 (line 1102)
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1459)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115375fa8:   jmp    0x0000000115375de3
  0x0000000115375fad:   movabs r10,0x12ad64020              ;   {metadata({method} {0x000000012ad64020} &apos;expungeStaleElements&apos; &apos;()V&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet&apos;)}
  0x0000000115375fb7:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115375fbc:   mov    QWORD PTR [rsp],0x17
  0x0000000115375fc4:   call   0x000000011c9c1480           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1459)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115375fc9:   jmp    0x0000000115375e44
  0x0000000115375fce:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop [64]=Oop }
                                                            ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1458)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115375fd3:   movabs r10,0x115375f53              ;   {internal_word}
  0x0000000115375fdd:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115375fe4:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115375fe9:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115375ff0:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115375ffb:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115376006:   add    rsp,0x50
  0x000000011537600a:   pop    rbp
  0x000000011537600b:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x0000000115376010:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x0000000115376015:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537601f:   jmp    0x000000011537601f           ;   {runtime_call}
[Exception Handler]
  0x0000000115376024:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115376029:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115376033:   and    rsp,0xfffffffffffffff0
  0x0000000115376037:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537603c:   hlt    
[Deopt Handler Code]
  0x000000011537603d:   movabs r10,0x11537603d              ;   {section_word}
  0x0000000115376047:   push   r10
  0x0000000115376049:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537604e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115376058:   jmp    0x0000000115376058           ;   {runtime_call}
  0x000000011537605d:   hlt    
  0x000000011537605e:   hlt    
  0x000000011537605f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='103' method='java.lang.invoke.LambdaForm$Name index ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.330' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='99' compiler='c1' level='3' entry='0x0000000115376440' size='1848' address='0x0000000115376290' relocation_offset='328' insts_offset='432' stub_offset='1232' scopes_data_offset='1312' scopes_pcs_offset='1480' dependencies_offset='1800' handler_table_offset='1808' nul_chk_table_offset='1832' metadata_offset='1296' method='java.lang.ref.NativeReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='412' iicount='412' stamp='1.330'/>
<print_nmethod compile_id='99' compiler='c1' level='3' stamp='1.330'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1329   99   !   3       java.lang.ref.NativeReferenceQueue::poll (28 bytes)
 total in heap  [0x0000000115376290,0x00000001153769c8] = 1848
 relocation     [0x00000001153763d8,0x0000000115376438] = 96
 main code      [0x0000000115376440,0x0000000115376760] = 800
 stub code      [0x0000000115376760,0x00000001153767a0] = 64
 metadata       [0x00000001153767a0,0x00000001153767b0] = 16
 scopes data    [0x00000001153767b0,0x0000000115376858] = 168
 scopes pcs     [0x0000000115376858,0x0000000115376998] = 320
 dependencies   [0x0000000115376998,0x00000001153769a0] = 8
 handler table  [0x00000001153769a0,0x00000001153769b8] = 24
 nul chk table  [0x00000001153769b8,0x00000001153769c8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000115376440:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115376444:   movabs r11,0x12ac00000
  0x000000011537644e:   add    r10,r11
  0x0000000115376451:   cmp    r10,rax
  0x0000000115376454:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537645a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115376460:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115376467:   push   rbp
  0x0000000115376468:   sub    rsp,0x50
  0x000000011537646c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115376474:   je     0x000000011537647b
  0x0000000115376476:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537647b:   movabs rax,0x16bc23a88              ;   {metadata(method data for {method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;)}
  0x0000000115376485:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011537648b:   add    edi,0x2
  0x000000011537648e:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115376494:   and    edi,0x7fe
  0x000000011537649a:   cmp    edi,0x0
  0x000000011537649d:   je     0x0000000115376686           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@0 (line 65)
  0x00000001153764a3:   mov    rax,rsi
  0x00000001153764a6:   movabs rdi,0x16bc23a88              ;   {metadata(method data for {method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;)}
  0x00000001153764b0:   add    QWORD PTR [rdi+0xf0],0x1
  0x00000001153764b8:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00000001153764c2:   mov    edi,DWORD PTR [rax+0xac]
  0x00000001153764c8:   add    edi,0x2
  0x00000001153764cb:   mov    DWORD PTR [rax+0xac],edi
  0x00000001153764d1:   and    edi,0x1ffffe
  0x00000001153764d7:   cmp    edi,0x0
  0x00000001153764da:   je     0x00000001153766a7
  0x00000001153764e0:   mov    eax,DWORD PTR [rsi+0xc]
  0x00000001153764e3:   shl    rax,0x3                      ;*getfield head {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@1 (line 111)
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@1 (line 65)
  0x00000001153764e7:   cmp    rax,0x0
  0x00000001153764eb:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00000001153764f5:   movabs rdi,0xf0
  0x00000001153764ff:   jne    0x000000011537650f
  0x0000000115376505:   movabs rdi,0x100
  0x000000011537650f:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x0000000115376513:   lea    rbx,[rbx+0x1]
  0x0000000115376517:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011537651b:   jne    0x000000011537653b           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@4 (line 111)
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@1 (line 65)
  0x0000000115376521:   movabs rax,0x16bc1efe8              ;   {metadata(method data for {method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011537652b:   inc    DWORD PTR [rax+0x110]
  0x0000000115376531:   mov    eax,0x1
  0x0000000115376536:   jmp    0x0000000115376540           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@8 (line 111)
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@1 (line 65)
  0x000000011537653b:   mov    eax,0x0                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@12 (line 111)
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@1 (line 65)
  0x0000000115376540:   and    eax,0x1
  0x0000000115376543:   cmp    eax,0x0
  0x0000000115376546:   movabs rax,0x16bc23a88              ;   {metadata(method data for {method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;)}
  0x0000000115376550:   movabs rdi,0x138
  0x000000011537655a:   jne    0x000000011537656a
  0x0000000115376560:   movabs rdi,0x128
  0x000000011537656a:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011537656e:   lea    rbx,[rbx+0x1]
  0x0000000115376572:   mov    QWORD PTR [rax+rdi*1],rbx
  0x0000000115376576:   jne    0x000000011537661c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@4 (line 65)
  0x000000011537657c:   mov    edi,DWORD PTR [rsi+0x20]
  0x000000011537657f:   shl    rdi,0x3                      ;*getfield lock {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@10 (line 68)
  0x0000000115376583:   lea    rbx,[rsp+0x30]
  0x0000000115376588:   mov    QWORD PTR [rbx+0x8],rdi
  0x000000011537658c:   mov    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x00000001153766c8
  0x000000011537658f:   or     rax,0x1
  0x0000000115376593:   mov    QWORD PTR [rbx],rax
  0x0000000115376596:   lock cmpxchg QWORD PTR [rdi],rbx
  0x000000011537659b:   je     0x00000001153765b3
  0x00000001153765a1:   sub    rax,rsp
  0x00000001153765a4:   and    rax,0xfffffffffffff007
  0x00000001153765aa:   mov    QWORD PTR [rbx],rax
  0x00000001153765ad:   jne    0x00000001153766cd
  0x00000001153765b3:   inc    QWORD PTR [r15+0x478]        ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@15 (line 68)
  0x00000001153765ba:   mov    QWORD PTR [rsp+0x28],rdi
  0x00000001153765bf:   mov    rbx,rsi
  0x00000001153765c2:   movabs rax,0x16bc23a88              ;   {metadata(method data for {method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;)}
  0x00000001153765cc:   add    QWORD PTR [rax+0x148],0x1
  0x00000001153765d4:   data16 xchg ax,ax
  0x00000001153765d7:   call   0x000000011c900600           ; ImmutableOopMap {[40]=Oop [56]=Oop }
                                                            ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@17 (line 69)
                                                            ;   {optimized virtual_call}
  0x00000001153765dc:   mov    rsi,rax                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@17 (line 69)
  0x00000001153765df:   lea    rax,[rsp+0x30]
  0x00000001153765e4:   mov    rdi,QWORD PTR [rax]
  0x00000001153765e7:   test   rdi,rdi
  0x00000001153765ea:   je     0x00000001153765ff
  0x00000001153765f0:   mov    rbx,QWORD PTR [rax+0x8]
  0x00000001153765f4:   lock cmpxchg QWORD PTR [rbx],rdi
  0x00000001153765f9:   jne    0x00000001153766e0
  0x00000001153765ff:   dec    QWORD PTR [r15+0x478]        ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@21 (line 69)
  0x0000000115376606:   mov    rax,rsi
  0x0000000115376609:   add    rsp,0x50
  0x000000011537660d:   pop    rbp
  0x000000011537660e:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115376615:   ja     0x00000001153766f3
  0x000000011537661b:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@22 (line 69)
  0x000000011537661c:   movabs rax,0x0                      ;   {oop(NULL)}
  0x0000000115376626:   add    rsp,0x50
  0x000000011537662a:   pop    rbp
  0x000000011537662b:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115376632:   ja     0x0000000115376709
  0x0000000115376638:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@8 (line 66)
  0x0000000115376639:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115376640:   xor    r10,r10
  0x0000000115376643:   mov    QWORD PTR [r15+0x428],r10
  0x000000011537664a:   xor    r10,r10
  0x000000011537664d:   mov    QWORD PTR [r15+0x430],r10
  0x0000000115376654:   mov    rsi,rax
  0x0000000115376657:   lea    rax,[rsp+0x30]
  0x000000011537665c:   mov    rdi,QWORD PTR [rax]
  0x000000011537665f:   test   rdi,rdi
  0x0000000115376662:   je     0x0000000115376677
  0x0000000115376668:   mov    rbx,QWORD PTR [rax+0x8]
  0x000000011537666c:   lock cmpxchg QWORD PTR [rbx],rdi
  0x0000000115376671:   jne    0x000000011537671f
  0x0000000115376677:   dec    QWORD PTR [r15+0x478]        ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@25 (line 70)
  0x000000011537667e:   mov    rax,rsi
  0x0000000115376681:   jmp    0x000000011537674f
  0x0000000115376686:   movabs r10,0x12ac41750              ;   {metadata({method} {0x000000012ac41750} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/NativeReferenceQueue&apos;)}
  0x0000000115376690:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115376695:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537669d:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@-1 (line 65)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153766a2:   jmp    0x00000001153764a3
  0x00000001153766a7:   movabs r10,0x12b012f28              ;   {metadata({method} {0x000000012b012f28} &apos;headIsNull&apos; &apos;()Z&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00000001153766b1:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153766b6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153766be:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.ref.ReferenceQueue::headIsNull@-1 (line 111)
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@1 (line 65)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153766c3:   jmp    0x00000001153764e0
  0x00000001153766c8:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@15 (line 68)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153766cd:   mov    QWORD PTR [rsp+0x8],rdi
  0x00000001153766d2:   mov    QWORD PTR [rsp],rbx
  0x00000001153766d6:   call   0x000000011c9bf580           ; ImmutableOopMap {rsi=Oop rdi=Oop [56]=Oop }
                                                            ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.ref.NativeReferenceQueue::poll@15 (line 68)
                                                            ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x00000001153766db:   jmp    0x00000001153765ba
  0x00000001153766e0:   lea    rax,[rsp+0x30]
  0x00000001153766e5:   mov    QWORD PTR [rsp],rax
  0x00000001153766e9:   call   0x000000011c9bfb80           ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00000001153766ee:   jmp    0x0000000115376606
  0x00000001153766f3:   movabs r10,0x11537660e              ;   {internal_word}
  0x00000001153766fd:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115376704:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115376709:   movabs r10,0x11537662b              ;   {internal_word}
  0x0000000115376713:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537671a:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537671f:   lea    rax,[rsp+0x30]
  0x0000000115376724:   mov    QWORD PTR [rsp],rax
  0x0000000115376728:   call   0x000000011c9bfb80           ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011537672d:   jmp    0x000000011537667e
  0x0000000115376732:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115376739:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115376744:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537674f:   add    rsp,0x50
  0x0000000115376753:   pop    rbp
  0x0000000115376754:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115376759:   hlt    
  0x000000011537675a:   hlt    
  0x000000011537675b:   hlt    
  0x000000011537675c:   hlt    
  0x000000011537675d:   hlt    
  0x000000011537675e:   hlt    
  0x000000011537675f:   hlt    
[Exception Handler]
  0x0000000115376760:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115376765:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537676f:   and    rsp,0xfffffffffffffff0
  0x0000000115376773:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115376778:   hlt    
[Deopt Handler Code]
  0x0000000115376779:   movabs r10,0x115376779              ;   {section_word}
  0x0000000115376783:   push   r10
  0x0000000115376785:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537678a:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115376794:   jmp    0x0000000115376794           ;   {runtime_call}
  0x0000000115376799:   hlt    
  0x000000011537679a:   hlt    
  0x000000011537679b:   hlt    
  0x000000011537679c:   hlt    
  0x000000011537679d:   hlt    
  0x000000011537679e:   hlt    
  0x000000011537679f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='104' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3b9e0' size='376' address='0x000000011ce3b890' relocation_offset='328' insts_offset='336' stub_offset='369' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.339'/>

Compiled method (n/a)    1339  104     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)
 total in heap  [0x000000011ce3b890,0x000000011ce3ba08] = 376
 relocation     [0x000000011ce3b9d8,0x000000011ce3b9e0] = 8
 main code      [0x000000011ce3b9e0,0x000000011ce3ba01] = 33
 stub code      [0x000000011ce3ba01,0x000000011ce3ba08] = 7

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc23f18} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x000000011ce3b9e0:   mov    rbx,QWORD PTR [rsp+0x8]
  0x000000011ce3b9e5:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce3b9e8:   shl    rbx,0x3
  0x000000011ce3b9ec:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3b9f0:   test   rbx,rbx
  0x000000011ce3b9f3:   je     0x000000011ce3b9fc
  0x000000011ce3b9f9:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3b9fc:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3ba01:   hlt    
  0x000000011ce3ba02:   hlt    
  0x000000011ce3ba03:   hlt    
  0x000000011ce3ba04:   hlt    
  0x000000011ce3ba05:   hlt    
  0x000000011ce3ba06:   hlt    
  0x000000011ce3ba07:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='101' compiler='c1' level='3' entry='0x0000000115376ba0' size='920' address='0x0000000115376a10' relocation_offset='328' insts_offset='400' stub_offset='664' scopes_data_offset='720' scopes_pcs_offset='768' dependencies_offset='896' nul_chk_table_offset='904' metadata_offset='712' method='java.lang.invoke.MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='421' iicount='421' stamp='1.342'/>
<print_nmethod compile_id='101' compiler='c1' level='3' stamp='1.342'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1341  101       3       java.lang.invoke.MethodType::parameterType (7 bytes)
 total in heap  [0x0000000115376a10,0x0000000115376da8] = 920
 relocation     [0x0000000115376b58,0x0000000115376b88] = 48
 main code      [0x0000000115376ba0,0x0000000115376ca8] = 264
 stub code      [0x0000000115376ca8,0x0000000115376cd8] = 48
 metadata       [0x0000000115376cd8,0x0000000115376ce0] = 8
 scopes data    [0x0000000115376ce0,0x0000000115376d10] = 48
 scopes pcs     [0x0000000115376d10,0x0000000115376d90] = 128
 dependencies   [0x0000000115376d90,0x0000000115376d98] = 8
 nul chk table  [0x0000000115376d98,0x0000000115376da8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b00e5e8} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodType&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000115376ba0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115376ba4:   movabs r11,0x12ac00000
  0x0000000115376bae:   add    r10,r11
  0x0000000115376bb1:   cmp    r10,rax
  0x0000000115376bb4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115376bba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115376bc0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115376bc7:   push   rbp
  0x0000000115376bc8:   sub    rsp,0x30
  0x0000000115376bcc:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115376bd4:   je     0x0000000115376bdb
  0x0000000115376bd6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115376bdb:   movabs rax,0x16bc23f80              ;   {metadata(method data for {method} {0x000000012b00e5e8} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000000115376be5:   mov    edi,DWORD PTR [rax+0xac]
  0x0000000115376beb:   add    edi,0x2
  0x0000000115376bee:   mov    DWORD PTR [rax+0xac],edi
  0x0000000115376bf4:   and    edi,0x7fe
  0x0000000115376bfa:   cmp    edi,0x0
  0x0000000115376bfd:   je     0x0000000115376c33           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::parameterType@0 (line 824)
  0x0000000115376c03:   mov    eax,DWORD PTR [rsi+0x10]
  0x0000000115376c06:   shl    rax,0x3                      ;*getfield ptypes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::parameterType@1 (line 824)
  0x0000000115376c0a:   mov    esi,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x0000000115376c51
  0x0000000115376c0d:   cmp    esi,edx
  0x0000000115376c0f:   jbe    0x0000000115376c56
  0x0000000115376c15:   movsxd rdx,edx
  0x0000000115376c18:   mov    eax,DWORD PTR [rax+rdx*4+0x10]
  0x0000000115376c1c:   shl    rax,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::parameterType@5 (line 824)
  0x0000000115376c20:   add    rsp,0x30
  0x0000000115376c24:   pop    rbp
  0x0000000115376c25:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115376c2c:   ja     0x0000000115376c64
  0x0000000115376c32:   ret    
  0x0000000115376c33:   movabs r10,0x12b00e5e8              ;   {metadata({method} {0x000000012b00e5e8} &apos;parameterType&apos; &apos;(I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x0000000115376c3d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115376c42:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115376c4a:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodType::parameterType@-1 (line 824)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115376c4f:   jmp    0x0000000115376c03
  0x0000000115376c51:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::parameterType@5 (line 824)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115376c56:   mov    QWORD PTR [rsp],rdx
  0x0000000115376c5a:   mov    QWORD PTR [rsp+0x8],rax
  0x0000000115376c5f:   call   0x000000011c9bb800           ; ImmutableOopMap {rax=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodType::parameterType@5 (line 824)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000115376c64:   movabs r10,0x115376c25              ;   {internal_word}
  0x0000000115376c6e:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115376c75:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115376c7a:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115376c81:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115376c8c:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115376c97:   add    rsp,0x30
  0x0000000115376c9b:   pop    rbp
  0x0000000115376c9c:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115376ca1:   hlt    
  0x0000000115376ca2:   hlt    
  0x0000000115376ca3:   hlt    
  0x0000000115376ca4:   hlt    
  0x0000000115376ca5:   hlt    
  0x0000000115376ca6:   hlt    
  0x0000000115376ca7:   hlt    
[Exception Handler]
  0x0000000115376ca8:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115376cad:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115376cb7:   and    rsp,0xfffffffffffffff0
  0x0000000115376cbb:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115376cc0:   hlt    
[Deopt Handler Code]
  0x0000000115376cc1:   movabs r10,0x115376cc1              ;   {section_word}
  0x0000000115376ccb:   push   r10
  0x0000000115376ccd:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115376cd2:   hlt    
  0x0000000115376cd3:   hlt    
  0x0000000115376cd4:   hlt    
  0x0000000115376cd5:   hlt    
  0x0000000115376cd6:   hlt    
  0x0000000115376cd7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='105' method='java.lang.invoke.LambdaForm$BasicType basicType (C)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='187' count='384' iicount='384' level='3' stamp='1.346' comment='tiered' hot_count='384'/>
<nmethod compile_id='106' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3bce0' size='384' address='0x000000011ce3bb90' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.346'/>

Compiled method (n/a)    1346  106     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)
 total in heap  [0x000000011ce3bb90,0x000000011ce3bd10] = 384
 relocation     [0x000000011ce3bcd8,0x000000011ce3bce0] = 8
 main code      [0x000000011ce3bce0,0x000000011ce3bd0a] = 42
 stub code      [0x000000011ce3bd0a,0x000000011ce3bd10] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc24640} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x000000011ce3bce0:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce3bce3:   shl    rbx,0x3
  0x000000011ce3bce7:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3bcea:   shl    rbx,0x3
  0x000000011ce3bcee:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce3bcf1:   shl    rbx,0x3
  0x000000011ce3bcf5:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3bcf9:   test   rbx,rbx
  0x000000011ce3bcfc:   je     0x000000011ce3bd05
  0x000000011ce3bd02:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3bd05:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3bd0a:   hlt    
  0x000000011ce3bd0b:   hlt    
  0x000000011ce3bd0c:   hlt    
  0x000000011ce3bd0d:   hlt    
  0x000000011ce3bd0e:   hlt    
  0x000000011ce3bd0f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='23555'/>
<nmethod compile_id='105' compiler='c1' level='3' entry='0x0000000115377080' size='4440' address='0x0000000115376e10' relocation_offset='328' insts_offset='624' stub_offset='3152' scopes_data_offset='3368' scopes_pcs_offset='3776' dependencies_offset='4416' nul_chk_table_offset='4424' oops_offset='3296' metadata_offset='3312' method='java.lang.invoke.LambdaForm$BasicType basicType (C)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='187' count='390' iicount='390' stamp='1.348'/>
<print_nmethod compile_id='105' compiler='c1' level='3' stamp='1.348'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1348  105       3       java.lang.invoke.LambdaForm$BasicType::basicType (187 bytes)
 total in heap  [0x0000000115376e10,0x0000000115377f68] = 4440
 relocation     [0x0000000115376f58,0x0000000115377080] = 296
 main code      [0x0000000115377080,0x0000000115377a60] = 2528
 stub code      [0x0000000115377a60,0x0000000115377af0] = 144
 oops           [0x0000000115377af0,0x0000000115377b00] = 16
 metadata       [0x0000000115377b00,0x0000000115377b38] = 56
 scopes data    [0x0000000115377b38,0x0000000115377cd0] = 408
 scopes pcs     [0x0000000115377cd0,0x0000000115377f50] = 640
 dependencies   [0x0000000115377f50,0x0000000115377f58] = 8
 nul chk table  [0x0000000115377f58,0x0000000115377f68] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;
  # parm0:    rsi       = char
  #           [sp+0x90]  (sp of caller)
  0x0000000115377080:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115377087:   push   rbp
  0x0000000115377088:   sub    rsp,0x80
  0x000000011537708f:   nop
  0x0000000115377090:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115377098:   je     0x000000011537709f
  0x000000011537709a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537709f:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153770a9:   mov    edx,DWORD PTR [rax+0xac]
  0x00000001153770af:   add    edx,0x2
  0x00000001153770b2:   mov    DWORD PTR [rax+0xac],edx
  0x00000001153770b8:   and    edx,0x7fe
  0x00000001153770be:   cmp    edx,0x0
  0x00000001153770c1:   je     0x0000000115377866           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@0 (line 190)
  0x00000001153770c7:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153770d1:   movabs rdx,0xf8
  0x00000001153770db:   cmp    esi,0x42
  0x00000001153770de:   mov    rdi,rdx
  0x00000001153770e1:   movabs rdx,0x108
  0x00000001153770eb:   cmovne rdx,rdi
  0x00000001153770ef:   cmp    esi,0x43
  0x00000001153770f2:   mov    rdi,rdx
  0x00000001153770f5:   movabs rdx,0x118
  0x00000001153770ff:   cmovne rdx,rdi
  0x0000000115377103:   cmp    esi,0x44
  0x0000000115377106:   mov    rdi,rdx
  0x0000000115377109:   movabs rdx,0x128
  0x0000000115377113:   cmovne rdx,rdi
  0x0000000115377117:   cmp    esi,0x45
  0x000000011537711a:   mov    rdi,rdx
  0x000000011537711d:   movabs rdx,0x138
  0x0000000115377127:   cmovne rdx,rdi
  0x000000011537712b:   cmp    esi,0x46
  0x000000011537712e:   mov    rdi,rdx
  0x0000000115377131:   movabs rdx,0x148
  0x000000011537713b:   cmovne rdx,rdi
  0x000000011537713f:   cmp    esi,0x47
  0x0000000115377142:   mov    rdi,rdx
  0x0000000115377145:   movabs rdx,0x158
  0x000000011537714f:   cmovne rdx,rdi
  0x0000000115377153:   cmp    esi,0x48
  0x0000000115377156:   mov    rdi,rdx
  0x0000000115377159:   movabs rdx,0x168
  0x0000000115377163:   cmovne rdx,rdi
  0x0000000115377167:   cmp    esi,0x49
  0x000000011537716a:   mov    rdi,rdx
  0x000000011537716d:   movabs rdx,0x178
  0x0000000115377177:   cmovne rdx,rdi
  0x000000011537717b:   cmp    esi,0x4a
  0x000000011537717e:   mov    rdi,rdx
  0x0000000115377181:   movabs rdx,0x188
  0x000000011537718b:   cmovne rdx,rdi
  0x000000011537718f:   cmp    esi,0x4b
  0x0000000115377192:   mov    rdi,rdx
  0x0000000115377195:   movabs rdx,0x198
  0x000000011537719f:   cmovne rdx,rdi
  0x00000001153771a3:   cmp    esi,0x4c
  0x00000001153771a6:   mov    rdi,rdx
  0x00000001153771a9:   movabs rdx,0x1a8
  0x00000001153771b3:   cmovne rdx,rdi
  0x00000001153771b7:   cmp    esi,0x4d
  0x00000001153771ba:   mov    rdi,rdx
  0x00000001153771bd:   movabs rdx,0x1b8
  0x00000001153771c7:   cmovne rdx,rdi
  0x00000001153771cb:   cmp    esi,0x4e
  0x00000001153771ce:   mov    rdi,rdx
  0x00000001153771d1:   movabs rdx,0x1c8
  0x00000001153771db:   cmovne rdx,rdi
  0x00000001153771df:   cmp    esi,0x4f
  0x00000001153771e2:   mov    rdi,rdx
  0x00000001153771e5:   movabs rdx,0x1d8
  0x00000001153771ef:   cmovne rdx,rdi
  0x00000001153771f3:   cmp    esi,0x50
  0x00000001153771f6:   mov    rdi,rdx
  0x00000001153771f9:   movabs rdx,0x1e8
  0x0000000115377203:   cmovne rdx,rdi
  0x0000000115377207:   cmp    esi,0x51
  0x000000011537720a:   mov    rdi,rdx
  0x000000011537720d:   movabs rdx,0x1f8
  0x0000000115377217:   cmovne rdx,rdi
  0x000000011537721b:   cmp    esi,0x52
  0x000000011537721e:   mov    rdi,rdx
  0x0000000115377221:   movabs rdx,0x208
  0x000000011537722b:   cmovne rdx,rdi
  0x000000011537722f:   cmp    esi,0x53
  0x0000000115377232:   mov    rdi,rdx
  0x0000000115377235:   movabs rdx,0x218
  0x000000011537723f:   cmovne rdx,rdi
  0x0000000115377243:   cmp    esi,0x54
  0x0000000115377246:   mov    rdi,rdx
  0x0000000115377249:   movabs rdx,0x228
  0x0000000115377253:   cmovne rdx,rdi
  0x0000000115377257:   cmp    esi,0x55
  0x000000011537725a:   mov    rdi,rdx
  0x000000011537725d:   movabs rdx,0x238
  0x0000000115377267:   cmovne rdx,rdi
  0x000000011537726b:   cmp    esi,0x56
  0x000000011537726e:   mov    rdi,rdx
  0x0000000115377271:   movabs rdx,0x248
  0x000000011537727b:   cmovne rdx,rdi
  0x000000011537727f:   cmp    esi,0x57
  0x0000000115377282:   mov    rdi,rdx
  0x0000000115377285:   movabs rdx,0x258
  0x000000011537728f:   cmovne rdx,rdi
  0x0000000115377293:   cmp    esi,0x58
  0x0000000115377296:   mov    rdi,rdx
  0x0000000115377299:   movabs rdx,0x268
  0x00000001153772a3:   cmovne rdx,rdi
  0x00000001153772a7:   cmp    esi,0x59
  0x00000001153772aa:   mov    rdi,rdx
  0x00000001153772ad:   movabs rdx,0x278
  0x00000001153772b7:   cmovne rdx,rdi
  0x00000001153772bb:   cmp    esi,0x5a
  0x00000001153772be:   mov    rdi,rdx
  0x00000001153772c1:   movabs rdx,0x288                    ;   {no_reloc}
  0x00000001153772cb:   cmovne rdx,rdi
  0x00000001153772cf:   mov    rdi,QWORD PTR [rax+rdx*1]
  0x00000001153772d3:   movabs r10,0x1
  0x00000001153772dd:   add    rdi,r10
  0x00000001153772e0:   mov    QWORD PTR [rax+rdx*1],rdi
  0x00000001153772e4:   cmp    esi,0x42
  0x00000001153772e7:   je     0x0000000115377347
  0x00000001153772ed:   cmp    esi,0x43
  0x00000001153772f0:   je     0x0000000115377347
  0x00000001153772f6:   cmp    esi,0x44
  0x00000001153772f9:   je     0x0000000115377467
  0x00000001153772ff:   cmp    esi,0x46
  0x0000000115377302:   je     0x0000000115377437
  0x0000000115377308:   cmp    esi,0x49
  0x000000011537730b:   je     0x0000000115377407
  0x0000000115377311:   cmp    esi,0x4a
  0x0000000115377314:   je     0x00000001153773d7
  0x000000011537731a:   cmp    esi,0x4c
  0x000000011537731d:   je     0x00000001153773a7
  0x0000000115377323:   cmp    esi,0x53
  0x0000000115377326:   je     0x0000000115377347
  0x000000011537732c:   cmp    esi,0x56
  0x000000011537732f:   je     0x0000000115377377
  0x0000000115377335:   cmp    esi,0x5a
  0x0000000115377338:   je     0x0000000115377347           ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 190)
  0x000000011537733e:   mov    DWORD PTR [rsp+0x60],esi
  0x0000000115377342:   jmp    0x0000000115377497           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@158 (line 199)
  0x0000000115377347:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377351:   inc    DWORD PTR [rax+0x330]
  0x0000000115377357:   movabs rax,0x70c65cf98              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@155 (line 198)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070c65cf98})}
  0x0000000115377361:   add    rsp,0x80
  0x0000000115377368:   pop    rbp
  0x0000000115377369:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115377370:   ja     0x0000000115377887
  0x0000000115377376:   ret    
  0x0000000115377377:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377381:   inc    DWORD PTR [rax+0x318]
  0x0000000115377387:   movabs rax,0x70caa70e0              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@149 (line 196)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070caa70e0})}
  0x0000000115377391:   add    rsp,0x80
  0x0000000115377398:   pop    rbp
  0x0000000115377399:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153773a0:   ja     0x000000011537789d
  0x00000001153773a6:   ret    
  0x00000001153773a7:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153773b1:   inc    DWORD PTR [rax+0x2a0]
  0x00000001153773b7:   movabs rax,0x70caa6060              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@119 (line 191)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070caa6060})}
  0x00000001153773c1:   add    rsp,0x80
  0x00000001153773c8:   pop    rbp
  0x00000001153773c9:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153773d0:   ja     0x00000001153778b3
  0x00000001153773d6:   ret    
  0x00000001153773d7:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153773e1:   inc    DWORD PTR [rax+0x2d0]
  0x00000001153773e7:   movabs rax,0x70c65c818              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@131 (line 193)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070c65c818})}
  0x00000001153773f1:   add    rsp,0x80
  0x00000001153773f8:   pop    rbp
  0x00000001153773f9:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115377400:   ja     0x00000001153778c9
  0x0000000115377406:   ret    
  0x0000000115377407:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377411:   inc    DWORD PTR [rax+0x2b8]
  0x0000000115377417:   movabs rax,0x70c65cf98              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@125 (line 192)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070c65cf98})}
  0x0000000115377421:   add    rsp,0x80
  0x0000000115377428:   pop    rbp
  0x0000000115377429:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115377430:   ja     0x00000001153778df
  0x0000000115377436:   ret    
  0x0000000115377437:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377441:   inc    DWORD PTR [rax+0x2e8]
  0x0000000115377447:   movabs rax,0x70caab0e0              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@137 (line 194)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070caab0e0})}
  0x0000000115377451:   add    rsp,0x80
  0x0000000115377458:   pop    rbp
  0x0000000115377459:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115377460:   ja     0x00000001153778f5
  0x0000000115377466:   ret    
  0x0000000115377467:   movabs rax,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377471:   inc    DWORD PTR [rax+0x300]
  0x0000000115377477:   movabs rax,0x70caaaf48              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@143 (line 195)
                                                            ;   {oop(a &apos;java/lang/invoke/LambdaForm$BasicType&apos;{0x000000070caaaf48})}
  0x0000000115377481:   add    rsp,0x80
  0x0000000115377488:   pop    rbp
  0x0000000115377489:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115377490:   ja     0x000000011537790b
  0x0000000115377496:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@186 (line 190)
  0x0000000115377497:   movabs rdx,0x12ac08438              ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000001153774a1:   mov    rax,QWORD PTR [r15+0xf8]
  0x00000001153774a8:   lea    rdi,[rax+0x18]
  0x00000001153774ac:   cmp    rdi,QWORD PTR [r15+0x108]
  0x00000001153774b3:   ja     0x0000000115377921
  0x00000001153774b9:   mov    QWORD PTR [r15+0xf8],rdi
  0x00000001153774c0:   mov    QWORD PTR [rax],0x1
  0x00000001153774c7:   mov    rcx,rdx
  0x00000001153774ca:   movabs r10,0x12ac00000
  0x00000001153774d4:   sub    rcx,r10
  0x00000001153774d7:   mov    DWORD PTR [rax+0x8],ecx
  0x00000001153774da:   xor    rcx,rcx
  0x00000001153774dd:   mov    DWORD PTR [rax+0xc],ecx
  0x00000001153774e0:   xor    rcx,rcx
  0x00000001153774e3:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@158 (line 199)
  0x00000001153774e7:   mov    rdx,rax
  0x00000001153774ea:   movabs rsi,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153774f4:   add    QWORD PTR [rsi+0x348],0x1
  0x00000001153774fc:   movabs rdx,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377506:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537750c:   add    esi,0x2
  0x000000011537750f:   mov    DWORD PTR [rdx+0xac],esi
  0x0000000115377515:   and    esi,0x1ffffe
  0x000000011537751b:   cmp    esi,0x0
  0x000000011537751e:   je     0x000000011537792e
  0x0000000115377524:   mov    rdx,rax
  0x0000000115377527:   movabs rsi,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377531:   add    QWORD PTR [rsi+0xf0],0x1
  0x0000000115377539:   mov    edx,0x10
  0x000000011537753e:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@162 (line 199)
  0x0000000115377541:   mov    QWORD PTR [rsp+0x58],rax
  0x0000000115377546:   nop
  0x0000000115377547:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@162 (line 199)
                                                            ;   {optimized virtual_call}
  0x000000011537754c:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377551:   movabs rdx,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000000011537755b:   add    QWORD PTR [rdx+0x358],0x1
  0x0000000115377563:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537756d:   mov    esi,DWORD PTR [rdx+0xac]
  0x0000000115377573:   add    esi,0x2
  0x0000000115377576:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537757c:   and    esi,0x1ffffe
  0x0000000115377582:   cmp    esi,0x0
  0x0000000115377585:   je     0x000000011537794f
  0x000000011537758b:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377590:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537759a:   add    QWORD PTR [rdx+0xf0],0x1
  0x00000001153775a2:   movabs rdx,0x7ffe0e678              ;   {oop(&quot;Unknown type char: &apos;&quot;{0x00000007ffe0e678})}
  0x00000001153775ac:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@167 (line 199)
  0x00000001153775b1:   nop    WORD PTR [rax+rax*1+0x0]
  0x00000001153775b7:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@167 (line 199)
                                                            ;   {optimized virtual_call}
  0x00000001153775bc:   mov    rax,QWORD PTR [rsp+0x58]
  0x00000001153775c1:   movabs rdx,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153775cb:   add    QWORD PTR [rdx+0x390],0x1
  0x00000001153775d3:   movabs rdx,0x16bc246a8              ;   {metadata(method data for {method} {0x000000012b0605a0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001153775dd:   mov    esi,DWORD PTR [rdx+0xac]
  0x00000001153775e3:   add    esi,0x2
  0x00000001153775e6:   mov    DWORD PTR [rdx+0xac],esi
  0x00000001153775ec:   and    esi,0x1ffffe
  0x00000001153775f2:   cmp    esi,0x0
  0x00000001153775f5:   je     0x0000000115377970
  0x00000001153775fb:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377600:   movabs rdx,0x16bc246a8              ;   {metadata(method data for {method} {0x000000012b0605a0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537760a:   add    QWORD PTR [rdx+0xf0],0x1
  0x0000000115377612:   mov    edx,DWORD PTR [rsp+0x60]
  0x0000000115377616:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 246)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@171 (line 199)
  0x000000011537761b:   nop    DWORD PTR [rax+0x0]
  0x000000011537761f:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 246)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@171 (line 199)
                                                            ;   {optimized virtual_call}
  0x0000000115377624:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377629:   movabs rdx,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377633:   add    QWORD PTR [rdx+0x3c8],0x1
  0x000000011537763b:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377645:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537764b:   add    esi,0x2
  0x000000011537764e:   mov    DWORD PTR [rdx+0xac],esi
  0x0000000115377654:   and    esi,0x1ffffe
  0x000000011537765a:   cmp    esi,0x0
  0x000000011537765d:   je     0x0000000115377991
  0x0000000115377663:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377668:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377672:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011537767a:   movabs rdx,0x7ffe00690              ;   {oop(&quot;&apos;&quot;{0x00000007ffe00690})}
  0x0000000115377684:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@176 (line 199)
  0x0000000115377689:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011537768f:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@176 (line 199)
                                                            ;   {optimized virtual_call}
  0x0000000115377694:   mov    rax,QWORD PTR [rsp+0x58]
  0x0000000115377699:   movabs rdx,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153776a3:   add    QWORD PTR [rdx+0x400],0x1
  0x00000001153776ab:   movabs rdx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001153776b5:   mov    esi,DWORD PTR [rdx+0xac]
  0x00000001153776bb:   add    esi,0x2
  0x00000001153776be:   mov    DWORD PTR [rdx+0xac],esi
  0x00000001153776c4:   and    esi,0x1ffffe
  0x00000001153776ca:   cmp    esi,0x0
  0x00000001153776cd:   je     0x00000001153779b2
  0x00000001153776d3:   movabs rdx,0x12ac0eb30              ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001153776dd:   mov    rax,QWORD PTR [r15+0xf8]
  0x00000001153776e4:   lea    rdi,[rax+0x18]
  0x00000001153776e8:   cmp    rdi,QWORD PTR [r15+0x108]
  0x00000001153776ef:   ja     0x00000001153779d3
  0x00000001153776f5:   mov    QWORD PTR [r15+0xf8],rdi
  0x00000001153776fc:   mov    QWORD PTR [rax],0x1
  0x0000000115377703:   mov    rcx,rdx
  0x0000000115377706:   movabs r10,0x12ac00000
  0x0000000115377710:   sub    rcx,r10
  0x0000000115377713:   mov    DWORD PTR [rax+0x8],ecx
  0x0000000115377716:   xor    rcx,rcx
  0x0000000115377719:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537771c:   xor    rcx,rcx
  0x000000011537771f:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
  0x0000000115377723:   mov    rdx,rax
  0x0000000115377726:   movabs rcx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377730:   add    QWORD PTR [rcx+0xf0],0x1
  0x0000000115377738:   movabs rdx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115377742:   mov    ecx,DWORD PTR [rdx+0xac]
  0x0000000115377748:   add    ecx,0x2
  0x000000011537774b:   mov    DWORD PTR [rdx+0xac],ecx
  0x0000000115377751:   and    ecx,0x1ffffe
  0x0000000115377757:   cmp    ecx,0x0
  0x000000011537775a:   je     0x00000001153779e0
  0x0000000115377760:   mov    rdx,rax
  0x0000000115377763:   movabs rcx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537776d:   add    QWORD PTR [rcx+0xf0],0x1
  0x0000000115377775:   mov    rdx,QWORD PTR [rsp+0x58]
  0x000000011537777a:   movabs rcx,0x0                      ;   {oop(NULL)}
  0x0000000115377784:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
  0x0000000115377787:   mov    QWORD PTR [rsp+0x68],rax
  0x000000011537778c:   data16 xchg ax,ax
  0x000000011537778f:   call   0x000000011c900600           ; ImmutableOopMap {[104]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
                                                            ;   {optimized virtual_call}
  0x0000000115377794:   movabs rdx,0x16bc240a8              ;   {metadata(method data for {method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000000011537779e:   add    QWORD PTR [rdx+0x438],0x1
  0x00000001153777a6:   movabs rdx,0x16bc24a88              ;   {metadata(method data for {method} {0x000000012b005f98} &apos;newInternalError&apos; &apos;(Ljava/lang/String;)Ljava/lang/InternalError;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x00000001153777b0:   mov    esi,DWORD PTR [rdx+0xac]
  0x00000001153777b6:   add    esi,0x2
  0x00000001153777b9:   mov    DWORD PTR [rdx+0xac],esi
  0x00000001153777bf:   and    esi,0x1ffffe
  0x00000001153777c5:   cmp    esi,0x0
  0x00000001153777c8:   je     0x0000000115377a01
  0x00000001153777ce:   movabs rdx,0x12ac10b20              ;   {metadata(&apos;java/lang/InternalError&apos;)}
  0x00000001153777d8:   cmp    BYTE PTR [rdx+0x123],0x5     ; implicit exception: dispatches to 0x0000000115377a22
  0x00000001153777df:   jne    0x0000000115377a27
  0x00000001153777e5:   mov    rax,QWORD PTR [r15+0xf8]
  0x00000001153777ec:   lea    rdi,[rax+0x28]
  0x00000001153777f0:   cmp    rdi,QWORD PTR [r15+0x108]
  0x00000001153777f7:   ja     0x0000000115377a27
  0x00000001153777fd:   mov    QWORD PTR [r15+0xf8],rdi
  0x0000000115377804:   mov    QWORD PTR [rax],0x1
  0x000000011537780b:   mov    rcx,rdx
  0x000000011537780e:   movabs r10,0x12ac00000
  0x0000000115377818:   sub    rcx,r10
  0x000000011537781b:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537781e:   xor    rcx,rcx
  0x0000000115377821:   mov    DWORD PTR [rax+0xc],ecx
  0x0000000115377824:   xor    rcx,rcx
  0x0000000115377827:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011537782b:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011537782f:   mov    QWORD PTR [rax+0x20],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@0 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
  0x0000000115377833:   mov    rdx,rax
  0x0000000115377836:   movabs rsi,0x16bc24a88              ;   {metadata(method data for {method} {0x000000012b005f98} &apos;newInternalError&apos; &apos;(Ljava/lang/String;)Ljava/lang/InternalError;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000000115377840:   add    QWORD PTR [rsi+0xf0],0x1
  0x0000000115377848:   mov    rdx,QWORD PTR [rsp+0x68]
  0x000000011537784d:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@5 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
  0x0000000115377850:   mov    QWORD PTR [rsp+0x70],rax
  0x0000000115377855:   xchg   ax,ax
  0x0000000115377857:   call   0x000000011c900600           ; ImmutableOopMap {[112]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@5 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
                                                            ;   {optimized virtual_call}
  0x000000011537785c:   mov    rax,QWORD PTR [rsp+0x70]
  0x0000000115377861:   jmp    0x0000000115377a51
  0x0000000115377866:   movabs r10,0x12b002838              ;   {metadata({method} {0x000000012b002838} &apos;basicType&apos; &apos;(C)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115377870:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115377875:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537787d:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 190)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115377882:   jmp    0x00000001153770c7
  0x0000000115377887:   movabs r10,0x115377369              ;   {internal_word}
  0x0000000115377891:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115377898:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537789d:   movabs r10,0x115377399              ;   {internal_word}
  0x00000001153778a7:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153778ae:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153778b3:   movabs r10,0x1153773c9              ;   {internal_word}
  0x00000001153778bd:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153778c4:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153778c9:   movabs r10,0x1153773f9              ;   {internal_word}
  0x00000001153778d3:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153778da:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153778df:   movabs r10,0x115377429              ;   {internal_word}
  0x00000001153778e9:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153778f0:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x00000001153778f5:   movabs r10,0x115377459              ;   {internal_word}
  0x00000001153778ff:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115377906:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537790b:   movabs r10,0x115377489              ;   {internal_word}
  0x0000000115377915:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537791c:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115377921:   mov    rdx,rdx
  0x0000000115377924:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@158 (line 199)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000000115377929:   jmp    0x00000001153774e7
  0x000000011537792e:   movabs r10,0x12b0609c0              ;   {metadata({method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377938:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537793d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115377945:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 106)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@162 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537794a:   jmp    0x0000000115377524
  0x000000011537794f:   movabs r10,0x12b0607b0              ;   {metadata({method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000115377959:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537795e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115377966:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@167 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537796b:   jmp    0x000000011537758b
  0x0000000115377970:   movabs r10,0x12b0605a0              ;   {metadata({method} {0x000000012b0605a0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537797a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537797f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115377987:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 246)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@171 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537798c:   jmp    0x00000001153775fb
  0x0000000115377991:   movabs r10,0x12b0607b0              ;   {metadata({method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537799b:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153779a0:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153779a8:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@176 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153779ad:   jmp    0x0000000115377663
  0x00000001153779b2:   movabs r10,0x12ac08ce8              ;   {metadata({method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001153779bc:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153779c1:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153779c9:   call   0x000000011c9c1480           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::toString@-1 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153779ce:   jmp    0x00000001153776d3
  0x00000001153779d3:   mov    rdx,rdx
  0x00000001153779d6:   call   0x000000011c9bca00           ; ImmutableOopMap {[88]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000001153779db:   jmp    0x0000000115377723
  0x00000001153779e0:   movabs r10,0x12b054be0              ;   {metadata({method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001153779ea:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153779ef:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153779f7:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::&lt;init&gt;@-1 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@179 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153779fc:   jmp    0x0000000115377760
  0x0000000115377a01:   movabs r10,0x12b005f98              ;   {metadata({method} {0x000000012b005f98} &apos;newInternalError&apos; &apos;(Ljava/lang/String;)Ljava/lang/InternalError;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x0000000115377a0b:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115377a10:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115377a18:   call   0x000000011c9c1480           ; ImmutableOopMap {[104]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@-1 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115377a1d:   jmp    0x00000001153777ce
  0x0000000115377a22:   call   0x000000011c9bc100           ; ImmutableOopMap {[104]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@0 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115377a27:   mov    rdx,rdx
  0x0000000115377a2a:   call   0x000000011c9bcd00           ; ImmutableOopMap {[104]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.MethodHandleStatics::newInternalError@0 (line 149)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@182 (line 199)
                                                            ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x0000000115377a2f:   jmp    0x0000000115377833
  0x0000000115377a34:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115377a3b:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115377a46:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115377a51:   add    rsp,0x80
  0x0000000115377a58:   pop    rbp
  0x0000000115377a59:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115377a5e:   hlt    
  0x0000000115377a5f:   hlt    
[Stub Code]
  0x0000000115377a60:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x0000000115377a65:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377a6f:   jmp    0x0000000115377a6f           ;   {runtime_call}
  0x0000000115377a74:   nop
  0x0000000115377a75:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377a7f:   jmp    0x0000000115377a7f           ;   {runtime_call}
  0x0000000115377a84:   nop
  0x0000000115377a85:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377a8f:   jmp    0x0000000115377a8f           ;   {runtime_call}
  0x0000000115377a94:   nop
  0x0000000115377a95:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377a9f:   jmp    0x0000000115377a9f           ;   {runtime_call}
[Exception Handler]
  0x0000000115377aa4:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115377aa9:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115377ab3:   and    rsp,0xfffffffffffffff0
  0x0000000115377ab7:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115377abc:   hlt    
[Deopt Handler Code]
  0x0000000115377abd:   movabs r10,0x115377abd              ;   {section_word}
  0x0000000115377ac7:   push   r10
  0x0000000115377ac9:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115377ace:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377ad8:   jmp    0x0000000115377ad8           ;   {runtime_call}
  0x0000000115377add:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115377ae7:   jmp    0x0000000115377ae7           ;   {runtime_call}
  0x0000000115377aec:   hlt    
  0x0000000115377aed:   hlt    
  0x0000000115377aee:   hlt    
  0x0000000115377aef:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='107' method='java.lang.invoke.LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='8' count='384' iicount='384' level='3' stamp='1.374' comment='tiered' hot_count='384'/>
<task_queued compile_id='108' method='sun.invoke.util.Wrapper basicTypeChar (Ljava/lang/Class;)C' bytes='18' count='384' iicount='384' level='3' stamp='1.374' comment='tiered' hot_count='384'/>
<task_queued compile_id='109' method='java.lang.String charAt (I)C' bytes='25' count='9728' iicount='9728' stamp='1.374' comment='tiered' hot_count='9728'/>
<task_queued compile_id='110' method='java.lang.invoke.LambdaForm$BasicType basicTypeClass ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='1.374' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='107' compiler='c1' level='3' entry='0x0000000115378140' size='1368' address='0x0000000115377f90' relocation_offset='328' insts_offset='432' stub_offset='920' scopes_data_offset='1016' scopes_pcs_offset='1112' dependencies_offset='1336' nul_chk_table_offset='1344' metadata_offset='992' method='java.lang.invoke.LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='8' count='394' iicount='394' stamp='1.374'/>
<print_nmethod compile_id='107' compiler='c1' level='3' stamp='1.374'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1374  107       3       java.lang.invoke.LambdaForm$BasicType::basicType (8 bytes)
 total in heap  [0x0000000115377f90,0x00000001153784e8] = 1368
 relocation     [0x00000001153780d8,0x0000000115378130] = 88
 main code      [0x0000000115378140,0x0000000115378328] = 488
 stub code      [0x0000000115378328,0x0000000115378370] = 72
 metadata       [0x0000000115378370,0x0000000115378388] = 24
 scopes data    [0x0000000115378388,0x00000001153783e8] = 96
 scopes pcs     [0x00000001153783e8,0x00000001153784c8] = 224
 dependencies   [0x00000001153784c8,0x00000001153784d0] = 8
 nul chk table  [0x00000001153784d0,0x00000001153784e8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b0027e0} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000115378140:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115378147:   push   rbp
  0x0000000115378148:   sub    rsp,0x40
  0x000000011537814c:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115378154:   je     0x000000011537815b
  0x0000000115378156:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537815b:   movabs rdi,0x16bc24c40              ;   {metadata(method data for {method} {0x000000012b0027e0} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x0000000115378165:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537816b:   add    ebx,0x2
  0x000000011537816e:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115378174:   and    ebx,0x7fe
  0x000000011537817a:   cmp    ebx,0x0
  0x000000011537817d:   je     0x000000011537829f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@0 (line 203)
  0x0000000115378183:   movabs rdi,0x16bc24c40              ;   {metadata(method data for {method} {0x000000012b0027e0} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000000011537818d:   add    QWORD PTR [rdi+0xf0],0x1
  0x0000000115378195:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011537819f:   mov    ebx,DWORD PTR [rdi+0xac]
  0x00000001153781a5:   add    ebx,0x2
  0x00000001153781a8:   mov    DWORD PTR [rdi+0xac],ebx
  0x00000001153781ae:   and    ebx,0x1ffffe
  0x00000001153781b4:   cmp    ebx,0x0
  0x00000001153781b7:   je     0x00000001153782c0
  0x00000001153781bd:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00000001153782e1
  0x00000001153781c0:   mov    rdi,rsi
  0x00000001153781c3:   movabs rbx,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153781cd:   add    QWORD PTR [rbx+0xf0],0x1
  0x00000001153781d5:   mov    rdi,QWORD PTR [rsi+0x10]
  0x00000001153781d9:   cmp    rdi,0x0
  0x00000001153781dd:   mov    edi,0x0
  0x00000001153781e2:   jne    0x00000001153781ed
  0x00000001153781e8:   mov    edi,0x1                      ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 436)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
  0x00000001153781ed:   cmp    edi,0x0
  0x00000001153781f0:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153781fa:   movabs rbx,0x128
  0x0000000115378204:   jne    0x0000000115378214
  0x000000011537820a:   movabs rbx,0x138
  0x0000000115378214:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115378218:   lea    rax,[rax+0x1]
  0x000000011537821c:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115378220:   jne    0x0000000115378230           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@4 (line 436)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
  0x0000000115378226:   mov    esi,0x4c
  0x000000011537822b:   jmp    0x0000000115378274           ;*invokestatic basicType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@4 (line 203)
  0x0000000115378230:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011537823a:   add    QWORD PTR [rdi+0x148],0x1
  0x0000000115378242:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000115378247:   call   0x0000000115378352           ; ImmutableOopMap {}
                                                            ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@11 (line 439)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
                                                            ;   {static_call}
  0x000000011537824c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x00000001153782e6
                                                            ;*invokevirtual basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
  0x000000011537824f:   mov    rsi,rax
  0x0000000115378252:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011537825c:   add    QWORD PTR [rdi+0x158],0x1
  0x0000000115378264:   movzx  esi,WORD PTR [rax+0x18]      ;*getfield basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 445)
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
  0x0000000115378268:   and    esi,0xffff
  0x000000011537826e:   and    esi,0xffff
  0x0000000115378274:   movabs rdi,0x16bc24c40              ;   {metadata(method data for {method} {0x000000012b0027e0} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x000000011537827e:   add    QWORD PTR [rdi+0x100],0x1
  0x0000000115378286:   nop
  0x0000000115378287:   call   0x0000000115377080           ; ImmutableOopMap {}
                                                            ;*invokestatic basicType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@4 (line 203)
                                                            ;   {static_call}
  0x000000011537828c:   add    rsp,0x40
  0x0000000115378290:   pop    rbp
  0x0000000115378291:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115378298:   ja     0x00000001153782eb
  0x000000011537829e:   ret    
  0x000000011537829f:   movabs r10,0x12b0027e0              ;   {metadata({method} {0x000000012b0027e0} &apos;basicType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;&apos; in &apos;java/lang/invoke/LambdaForm$BasicType&apos;)}
  0x00000001153782a9:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153782ae:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153782b6:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 203)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153782bb:   jmp    0x0000000115378183
  0x00000001153782c0:   movabs r10,0x12ad032e0              ;   {metadata({method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153782ca:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153782cf:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153782d7:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@-1 (line 436)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153782dc:   jmp    0x00000001153781bd
  0x00000001153782e1:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 436)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153782e6:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
                                                            ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 203)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153782eb:   movabs r10,0x115378291              ;   {internal_word}
  0x00000001153782f5:   mov    QWORD PTR [r15+0x390],r10
  0x00000001153782fc:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115378301:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115378308:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115378313:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537831e:   add    rsp,0x40
  0x0000000115378322:   pop    rbp
  0x0000000115378323:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x0000000115378328:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537832d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115378337:   and    rsp,0xfffffffffffffff0
  0x000000011537833b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115378340:   hlt    
[Deopt Handler Code]
  0x0000000115378341:   movabs r10,0x115378341              ;   {section_word}
  0x000000011537834b:   push   r10
  0x000000011537834d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115378352:   movabs rbx,0x12ad02f70              ;   {static_stub}
  0x000000011537835c:   jmp    0x000000011c904fd3           ;   {runtime_call I2C/C2I adapters}
  0x0000000115378361:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537836b:   jmp    0x000000011537836b           ;   {runtime_call}
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='111' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3bfe0' size='384' address='0x000000011ce3be90' relocation_offset='328' insts_offset='336' stub_offset='378' method='java.lang.invoke.MethodHandle invokeBasic (JI)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.381'/>

Compiled method (n/a)    1381  111     n 0       java.lang.invoke.MethodHandle::invokeBasic(JI)L (native)
 total in heap  [0x000000011ce3be90,0x000000011ce3c010] = 384
 relocation     [0x000000011ce3bfd8,0x000000011ce3bfe0] = 8
 main code      [0x000000011ce3bfe0,0x000000011ce3c00a] = 42
 stub code      [0x000000011ce3c00a,0x000000011ce3c010] = 6

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc252e0} &apos;invokeBasic&apos; &apos;(JI)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3bfe0:   mov    ebx,DWORD PTR [rsi+0x14]
  0x000000011ce3bfe3:   shl    rbx,0x3
  0x000000011ce3bfe7:   mov    ebx,DWORD PTR [rbx+0x28]
  0x000000011ce3bfea:   shl    rbx,0x3
  0x000000011ce3bfee:   mov    ebx,DWORD PTR [rbx+0x24]
  0x000000011ce3bff1:   shl    rbx,0x3
  0x000000011ce3bff5:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3bff9:   test   rbx,rbx
  0x000000011ce3bffc:   je     0x000000011ce3c005
  0x000000011ce3c002:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3c005:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
[Stub Code]
  0x000000011ce3c00a:   hlt    
  0x000000011ce3c00b:   hlt    
  0x000000011ce3c00c:   hlt    
  0x000000011ce3c00d:   hlt    
  0x000000011ce3c00e:   hlt    
  0x000000011ce3c00f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<writer thread='23555'/>
<nmethod compile_id='108' compiler='c1' level='3' entry='0x00000001153786c0' size='1216' address='0x0000000115378510' relocation_offset='328' insts_offset='432' stub_offset='840' scopes_data_offset='920' scopes_pcs_offset='992' dependencies_offset='1184' nul_chk_table_offset='1192' metadata_offset='904' method='sun.invoke.util.Wrapper basicTypeChar (Ljava/lang/Class;)C' bytes='18' count='397' iicount='397' stamp='1.383'/>
<print_nmethod compile_id='108' compiler='c1' level='3' stamp='1.383'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1382  108       3       sun.invoke.util.Wrapper::basicTypeChar (18 bytes)
 total in heap  [0x0000000115378510,0x00000001153789d0] = 1216
 relocation     [0x0000000115378658,0x00000001153786a8] = 80
 main code      [0x00000001153786c0,0x0000000115378858] = 408
 stub code      [0x0000000115378858,0x0000000115378898] = 64
 metadata       [0x0000000115378898,0x00000001153788a8] = 16
 scopes data    [0x00000001153788a8,0x00000001153788f0] = 72
 scopes pcs     [0x00000001153788f0,0x00000001153789b0] = 192
 dependencies   [0x00000001153789b0,0x00000001153789b8] = 8
 nul chk table  [0x00000001153789b8,0x00000001153789d0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001153786c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153786c7:   push   rbp
  0x00000001153786c8:   sub    rsp,0x30
  0x00000001153786cc:   cmp    DWORD PTR [r15+0x20],0x0
  0x00000001153786d4:   je     0x00000001153786db
  0x00000001153786d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153786db:   movabs rax,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153786e5:   mov    edi,DWORD PTR [rax+0xac]
  0x00000001153786eb:   add    edi,0x2
  0x00000001153786ee:   mov    DWORD PTR [rax+0xac],edi
  0x00000001153786f4:   and    edi,0x7fe
  0x00000001153786fa:   cmp    edi,0x0
  0x00000001153786fd:   je     0x00000001153787d5           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@0 (line 436)
  0x0000000115378703:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00000001153787f6
  0x0000000115378706:   mov    rax,rsi
  0x0000000115378709:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000000115378713:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537871b:   mov    rax,QWORD PTR [rsi+0x10]
  0x000000011537871f:   cmp    rax,0x0
  0x0000000115378723:   mov    eax,0x0
  0x0000000115378728:   jne    0x0000000115378733
  0x000000011537872e:   mov    eax,0x1                      ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 436)
  0x0000000115378733:   cmp    eax,0x0
  0x0000000115378736:   movabs rax,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x0000000115378740:   movabs rdi,0x128
  0x000000011537874a:   jne    0x000000011537875a
  0x0000000115378750:   movabs rdi,0x138
  0x000000011537875a:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011537875e:   lea    rbx,[rbx+0x1]
  0x0000000115378762:   mov    QWORD PTR [rax+rdi*1],rbx
  0x0000000115378766:   jne    0x0000000115378784           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@4 (line 436)
  0x000000011537876c:   mov    eax,0x4c
  0x0000000115378771:   add    rsp,0x30
  0x0000000115378775:   pop    rbp
  0x0000000115378776:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537877d:   ja     0x00000001153787fb
  0x0000000115378783:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@9 (line 437)
  0x0000000115378784:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011537878e:   add    QWORD PTR [rdi+0x148],0x1
  0x0000000115378796:   nop
  0x0000000115378797:   call   0x000000011c900c00           ; ImmutableOopMap {}
                                                            ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@11 (line 439)
                                                            ;   {static_call}
  0x000000011537879c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x0000000115378811
                                                            ;*invokevirtual basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
  0x000000011537879f:   mov    rsi,rax
  0x00000001153787a2:   movabs rdi,0x16bc24d90              ;   {metadata(method data for {method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153787ac:   add    QWORD PTR [rdi+0x158],0x1
  0x00000001153787b4:   movzx  eax,WORD PTR [rax+0x18]      ;*getfield basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 445)
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
  0x00000001153787b8:   and    eax,0xffff
  0x00000001153787bd:   and    eax,0xffff
  0x00000001153787c2:   add    rsp,0x30
  0x00000001153787c6:   pop    rbp
  0x00000001153787c7:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153787ce:   ja     0x0000000115378816
  0x00000001153787d4:   ret    
  0x00000001153787d5:   movabs r10,0x12ad032e0              ;   {metadata({method} {0x000000012ad032e0} &apos;basicTypeChar&apos; &apos;(Ljava/lang/Class;)C&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x00000001153787df:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153787e4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153787ec:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@-1 (line 436)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153787f1:   jmp    0x0000000115378703
  0x00000001153787f6:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 436)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153787fb:   movabs r10,0x115378776              ;   {internal_word}
  0x0000000115378805:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537880c:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115378811:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual basicTypeChar {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - sun.invoke.util.Wrapper::basicTypeChar@14 (line 439)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115378816:   movabs r10,0x1153787c7              ;   {internal_word}
  0x0000000115378820:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115378827:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537882c:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115378833:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537883e:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115378849:   add    rsp,0x30
  0x000000011537884d:   pop    rbp
  0x000000011537884e:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115378853:   hlt    
  0x0000000115378854:   hlt    
  0x0000000115378855:   hlt    
  0x0000000115378856:   hlt    
  0x0000000115378857:   hlt    
[Exception Handler]
  0x0000000115378858:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537885d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115378867:   and    rsp,0xfffffffffffffff0
  0x000000011537886b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115378870:   hlt    
[Deopt Handler Code]
  0x0000000115378871:   movabs r10,0x115378871              ;   {section_word}
  0x000000011537887b:   push   r10
  0x000000011537887d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115378882:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537888c:   jmp    0x000000011537888c           ;   {runtime_call}
  0x0000000115378891:   hlt    
  0x0000000115378892:   hlt    
  0x0000000115378893:   hlt    
  0x0000000115378894:   hlt    
  0x0000000115378895:   hlt    
  0x0000000115378896:   hlt    
  0x0000000115378897:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<nmethod compile_id='112' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3c2e0' size='368' address='0x000000011ce3c190' relocation_offset='328' insts_offset='336' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;JILjava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='1.388'/>

Compiled method (n/a)    1388  112     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LJIL)L (native)
 total in heap  [0x000000011ce3c190,0x000000011ce3c300] = 368
 relocation     [0x000000011ce3c2d8,0x000000011ce3c2e0] = 8
 main code      [0x000000011ce3c2e0,0x000000011ce3c300] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016bc253f8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;JILjava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = long
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000011ce3c2e0:   cmp    rax,QWORD PTR [rsi]
  0x000000011ce3c2e3:   mov    ebx,DWORD PTR [r8+0x24]
  0x000000011ce3c2e7:   shl    rbx,0x3
  0x000000011ce3c2eb:   mov    rbx,QWORD PTR [rbx+0x10]
  0x000000011ce3c2ef:   test   rbx,rbx
  0x000000011ce3c2f2:   je     0x000000011ce3c2fb
  0x000000011ce3c2f8:   jmp    QWORD PTR [rbx+0x40]
  0x000000011ce3c2fb:   jmp    0x000000011c8dca00           ;   {runtime_call AbstractMethodError throw_exception}
--------------------------------------------------------------------------------
[/Disassembly]
<nmethod compile_id='113' compile_kind='c2n' compiler='' level='0' entry='0x000000011ce3caa0' size='872' address='0x000000011ce3c910' relocation_offset='328' insts_offset='400' method='java.lang.Class isArray ()Z' bytes='0' count='384' iicount='384' stamp='1.390'/>

Compiled method (n/a)    1389  113     n 0       java.lang.Class::isArray (native)
 total in heap  [0x000000011ce3c910,0x000000011ce3cc78] = 872
 relocation     [0x000000011ce3ca58,0x000000011ce3ca88] = 48
 main code      [0x000000011ce3caa0,0x000000011ce3cc78] = 472

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac08258} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ce3caa0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3caa4:   movabs r11,0x12ac00000
  0x000000011ce3caae:   add    r10,r11
  0x000000011ce3cab1:   cmp    rax,r10
  0x000000011ce3cab4:   je     0x000000011ce3cac0
  0x000000011ce3caba:   jmp    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3cabf:   nop
[Verified Entry Point]
  0x000000011ce3cac0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3cac7:   push   rbp
  0x000000011ce3cac8:   mov    rbp,rsp
  0x000000011ce3cacb:   sub    rsp,0x40
  0x000000011ce3cacf:   nop
  0x000000011ce3cad0:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3cad8:   je     0x000000011ce3cadf
  0x000000011ce3cada:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3cadf:   mov    QWORD PTR [rsp],rsi
  0x000000011ce3cae3:   cmp    rsi,0x0
  0x000000011ce3cae7:   lea    rsi,[rsp]
  0x000000011ce3caeb:   cmove  rsi,QWORD PTR [rsp]
  0x000000011ce3caf0:   vzeroupper 
  0x000000011ce3caf3:   movabs r10,0x11ce3caf0              ;   {internal_word}
  0x000000011ce3cafd:   mov    QWORD PTR [r15+0x2c8],r10
  0x000000011ce3cb04:   mov    QWORD PTR [r15+0x2c0],rsp
  0x000000011ce3cb0b:   cmp    BYTE PTR [rip+0xffffffffefea2047],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3cb12:   je     0x000000011ce3cb48
  0x000000011ce3cb18:   push   rsi
  0x000000011ce3cb19:   movabs rsi,0x12ac08258              ;   {metadata({method} {0x000000012ac08258} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000000011ce3cb23:   mov    rdi,r15
  0x000000011ce3cb26:   test   spl,0xf
  0x000000011ce3cb2a:   je     0x000000011ce3cb42
  0x000000011ce3cb30:   sub    rsp,0x8
  0x000000011ce3cb34:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce3cb39:   add    rsp,0x8
  0x000000011ce3cb3d:   jmp    0x000000011ce3cb47
  0x000000011ce3cb42:   call   0x000000010c855410           ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000011ce3cb47:   pop    rsi
  0x000000011ce3cb48:   lea    rdi,[r15+0x2e0]
  0x000000011ce3cb4f:   mov    DWORD PTR [r15+0x374],0x4
  0x000000011ce3cb5a:   call   0x000000010c4e0c80           ;   {runtime_call JVM_IsArrayClass}
  0x000000011ce3cb5f:   vzeroupper 
  0x000000011ce3cb62:   and    eax,0xff
  0x000000011ce3cb67:   setne  al
  0x000000011ce3cb6a:   mov    DWORD PTR [r15+0x374],0x5
  0x000000011ce3cb75:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce3cb7b:   cmp    rbp,QWORD PTR [r15+0x378]
  0x000000011ce3cb82:   ja     0x000000011ce3cb96
  0x000000011ce3cb88:   cmp    DWORD PTR [r15+0x370],0x0
  0x000000011ce3cb90:   je     0x000000011ce3cbba
  0x000000011ce3cb96:   vzeroupper 
  0x000000011ce3cb99:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3cb9d:   mov    rdi,r15
  0x000000011ce3cba0:   mov    r12,rsp
  0x000000011ce3cba3:   sub    rsp,0x0
  0x000000011ce3cba7:   and    rsp,0xfffffffffffffff0
  0x000000011ce3cbab:   call   0x000000010c446c50           ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000011ce3cbb0:   mov    rsp,r12
  0x000000011ce3cbb3:   xor    r12,r12
  0x000000011ce3cbb6:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3cbba:   mov    DWORD PTR [r15+0x374],0x8
  0x000000011ce3cbc5:   cmp    DWORD PTR [r15+0x3f0],0x2
  0x000000011ce3cbcd:   je     0x000000011ce3cc52
  0x000000011ce3cbd3:   cmp    BYTE PTR [rip+0xffffffffefea1f7f],0x0        # 0x000000010ccdeb59
                                                            ;   {external_word}
  0x000000011ce3cbda:   je     0x000000011ce3cc16
  0x000000011ce3cbe0:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3cbe4:   movabs rsi,0x12ac08258              ;   {metadata({method} {0x000000012ac08258} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x000000011ce3cbee:   mov    rdi,r15
  0x000000011ce3cbf1:   test   spl,0xf
  0x000000011ce3cbf5:   je     0x000000011ce3cc0d
  0x000000011ce3cbfb:   sub    rsp,0x8
  0x000000011ce3cbff:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce3cc04:   add    rsp,0x8
  0x000000011ce3cc08:   jmp    0x000000011ce3cc12
  0x000000011ce3cc0d:   call   0x000000010c8554f0           ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x000000011ce3cc12:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3cc16:   mov    QWORD PTR [r15+0x2c0],0x0
  0x000000011ce3cc21:   mov    QWORD PTR [r15+0x2c8],0x0
  0x000000011ce3cc2c:   vzeroupper 
  0x000000011ce3cc2f:   mov    rcx,QWORD PTR [r15+0x350]
  0x000000011ce3cc36:   mov    DWORD PTR [rcx+0x100],0x0
  0x000000011ce3cc40:   leave  
  0x000000011ce3cc41:   cmp    QWORD PTR [r15+0x8],0x0
  0x000000011ce3cc46:   jne    0x000000011ce3cc4d
  0x000000011ce3cc4c:   ret    
  0x000000011ce3cc4d:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000000011ce3cc52:   vzeroupper 
  0x000000011ce3cc55:   mov    QWORD PTR [rbp-0x8],rax
  0x000000011ce3cc59:   mov    r12,rsp
  0x000000011ce3cc5c:   sub    rsp,0x0
  0x000000011ce3cc60:   and    rsp,0xfffffffffffffff0
  0x000000011ce3cc64:   call   0x000000010c857860           ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000011ce3cc69:   mov    rsp,r12
  0x000000011ce3cc6c:   xor    r12,r12
  0x000000011ce3cc6f:   mov    rax,QWORD PTR [rbp-0x8]
  0x000000011ce3cc73:   jmp    0x000000011ce3cbd3
--------------------------------------------------------------------------------
[/Disassembly]
<writer thread='30467'/>
<nmethod compile_id='109' compiler='c2' level='4' entry='0x000000011ce3c600' size='1032' address='0x000000011ce3c490' relocation_offset='328' insts_offset='368' stub_offset='592' scopes_data_offset='656' scopes_pcs_offset='800' dependencies_offset='1008' nul_chk_table_offset='1016' oops_offset='616' metadata_offset='624' method='java.lang.String charAt (I)C' bytes='25' count='10040' iicount='10040' stamp='1.395'/>
<make_not_entrant thread='30467' compile_id='6' compiler='c1' level='3' stamp='1.395'/>
<print_nmethod compile_id='109' compiler='c2' level='4' stamp='1.395'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1394  109       4       java.lang.String::charAt (25 bytes)
 total in heap  [0x000000011ce3c490,0x000000011ce3c898] = 1032
 relocation     [0x000000011ce3c5d8,0x000000011ce3c5f8] = 32
 main code      [0x000000011ce3c600,0x000000011ce3c6e0] = 224
 stub code      [0x000000011ce3c6e0,0x000000011ce3c6f8] = 24
 oops           [0x000000011ce3c6f8,0x000000011ce3c700] = 8
 metadata       [0x000000011ce3c700,0x000000011ce3c720] = 32
 scopes data    [0x000000011ce3c720,0x000000011ce3c7b0] = 144
 scopes pcs     [0x000000011ce3c7b0,0x000000011ce3c880] = 208
 dependencies   [0x000000011ce3c880,0x000000011ce3c888] = 8
 nul chk table  [0x000000011ce3c888,0x000000011ce3c898] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac0f1f8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000011ce3c600:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3c604:   movabs r11,0x12ac00000
  0x000000011ce3c60e:   add    r10,r11
  0x000000011ce3c611:   cmp    rax,r10
  0x000000011ce3c614:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3c61a:   xchg   ax,ax
  0x000000011ce3c61c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce3c620:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3c627:   push   rbp
  0x000000011ce3c628:   sub    rsp,0x20
  0x000000011ce3c62c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3c634:   jne    0x000000011ce3c6d6           ;*synchronization entry
                                                            ; - java.lang.String::charAt@-1 (line 1534)
  0x000000011ce3c63a:   movsx  r10d,BYTE PTR [rsi+0x10]     ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x000000011ce3c63f:   nop
  0x000000011ce3c640:   test   r10d,r10d
  0x000000011ce3c643:   jne    0x000000011ce3c69c           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
  0x000000011ce3c649:   mov    r11d,DWORD PTR [rsi+0x14]    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@8 (line 1535)
  0x000000011ce3c64d:   mov    ebp,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3c6b4
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x000000011ce3c652:   cmp    edx,ebp
  0x000000011ce3c654:   jae    0x000000011ce3c677           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x000000011ce3c656:   cmp    edx,ebp
  0x000000011ce3c658:   jae    0x000000011ce3c68c
  0x000000011ce3c65a:   lea    r10,[r12+r11*8]
  0x000000011ce3c65e:   movzx  eax,BYTE PTR [r10+rdx*1+0x10];*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@12 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
  0x000000011ce3c664:   add    rsp,0x20
  0x000000011ce3c668:   pop    rbp
  0x000000011ce3c669:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3c670:   ja     0x000000011ce3c6c0
  0x000000011ce3c676:   ret    
  0x000000011ce3c677:   mov    esi,0xffffffe4
  0x000000011ce3c67c:   mov    DWORD PTR [rsp+0x4],edx
  0x000000011ce3c680:   mov    DWORD PTR [rsp+0x8],r11d
  0x000000011ce3c685:   xchg   ax,ax
  0x000000011ce3c687:   call   0x000000011c906180           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4575)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3c68c:   mov    esi,0xffffffe4
  0x000000011ce3c691:   mov    ebp,edx
  0x000000011ce3c693:   mov    DWORD PTR [rsp],r11d
  0x000000011ce3c697:   call   0x000000011c906180           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3c69c:   mov    rbp,rsi
  0x000000011ce3c69f:   mov    DWORD PTR [rsp],edx
  0x000000011ce3c6a2:   mov    DWORD PTR [rsp+0x4],r10d
  0x000000011ce3c6a7:   mov    esi,0xffffff45
  0x000000011ce3c6ac:   data16 xchg ax,ax
  0x000000011ce3c6af:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4564)
                                                            ; - java.lang.String::charAt@1 (line 1534)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3c6b4:   mov    esi,0xfffffff6
  0x000000011ce3c6b9:   xchg   ax,ax
  0x000000011ce3c6bb:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1535)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3c6c0:   movabs r10,0x11ce3c669              ;   {internal_word}
  0x000000011ce3c6ca:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3c6d1:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3c6d6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3c6db:   jmp    0x000000011ce3c63a
[Exception Handler]
  0x000000011ce3c6e0:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3c6e5:   call   0x000000011ce3c6ea
  0x000000011ce3c6ea:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3c6ef:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3c6f4:   hlt    
  0x000000011ce3c6f5:   hlt    
  0x000000011ce3c6f6:   hlt    
  0x000000011ce3c6f7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='114' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='384' backedge_count='2' iicount='384' level='3' stamp='1.399' comment='tiered' hot_count='384'/>
<writer thread='23555'/>
<nmethod compile_id='96' compiler='c1' level='3' entry='0x0000000115378ba0' size='1048' address='0x0000000115378a10' relocation_offset='328' insts_offset='400' stub_offset='808' scopes_data_offset='872' scopes_pcs_offset='928' dependencies_offset='1040' metadata_offset='856' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='283' iicount='283' stamp='1.399'/>
<print_nmethod compile_id='96' compiler='c1' level='3' stamp='1.399'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1399   96       3       java.lang.String::&lt;init&gt; (15 bytes)
 total in heap  [0x0000000115378a10,0x0000000115378e28] = 1048
 relocation     [0x0000000115378b58,0x0000000115378b90] = 56
 main code      [0x0000000115378ba0,0x0000000115378d38] = 408
 stub code      [0x0000000115378d38,0x0000000115378d68] = 48
 metadata       [0x0000000115378d68,0x0000000115378d78] = 16
 scopes data    [0x0000000115378d78,0x0000000115378db0] = 56
 scopes pcs     [0x0000000115378db0,0x0000000115378e20] = 112
 dependencies   [0x0000000115378e20,0x0000000115378e28] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012b054870} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = byte
  #           [sp+0x40]  (sp of caller)
  0x0000000115378ba0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x0000000115378ba4:   movabs r11,0x12ac00000
  0x0000000115378bae:   add    r10,r11
  0x0000000115378bb1:   cmp    r10,rax
  0x0000000115378bb4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x0000000115378bba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x0000000115378bc0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115378bc7:   push   rbp
  0x0000000115378bc8:   sub    rsp,0x30
  0x0000000115378bcc:   cmp    DWORD PTR [r15+0x20],0x3
  0x0000000115378bd4:   je     0x0000000115378bdb
  0x0000000115378bd6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115378bdb:   movabs rdi,0x16bc25460              ;   {metadata(method data for {method} {0x000000012b054870} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115378be5:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115378beb:   add    ebx,0x2
  0x0000000115378bee:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115378bf4:   and    ebx,0x7fe
  0x0000000115378bfa:   cmp    ebx,0x0
  0x0000000115378bfd:   je     0x0000000115378c83           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@0 (line 4550)
  0x0000000115378c03:   mov    rdi,rsi
  0x0000000115378c06:   movabs rbx,0x16bc25460              ;   {metadata(method data for {method} {0x000000012b054870} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115378c10:   add    QWORD PTR [rbx+0xf0],0x1
  0x0000000115378c18:   movabs rdi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115378c22:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115378c28:   add    ebx,0x2
  0x0000000115378c2b:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115378c31:   and    ebx,0x1ffffe
  0x0000000115378c37:   cmp    ebx,0x0
  0x0000000115378c3a:   je     0x0000000115378ca4
  0x0000000115378c40:   movsx  edi,BYTE PTR [r15+0x40]
  0x0000000115378c45:   cmp    edi,0x0
  0x0000000115378c48:   jne    0x0000000115378cc5
  0x0000000115378c4e:   mov    r10,rdx
  0x0000000115378c51:   shr    r10,0x3
  0x0000000115378c55:   mov    DWORD PTR [rsi+0x14],r10d
  0x0000000115378c59:   mov    rdi,rsi
  0x0000000115378c5c:   xor    rdi,rdx
  0x0000000115378c5f:   shr    rdi,0x15
  0x0000000115378c63:   cmp    rdi,0x0
  0x0000000115378c67:   jne    0x0000000115378ce4           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@6 (line 4551)
  0x0000000115378c6d:   mov    BYTE PTR [rsi+0x10],cl       ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@11 (line 4552)
  0x0000000115378c70:   add    rsp,0x30
  0x0000000115378c74:   pop    rbp
  0x0000000115378c75:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115378c7c:   ja     0x0000000115378cf8
  0x0000000115378c82:   ret    
  0x0000000115378c83:   movabs r10,0x12b054870              ;   {metadata({method} {0x000000012b054870} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000115378c8d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115378c92:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115378c9a:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::&lt;init&gt;@-1 (line 4550)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115378c9f:   jmp    0x0000000115378c03
  0x0000000115378ca4:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000115378cae:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115378cb3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115378cbb:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - java.lang.String::&lt;init&gt;@1 (line 4550)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115378cc0:   jmp    0x0000000115378c40
  0x0000000115378cc5:   mov    edi,DWORD PTR [rsi+0x14]
  0x0000000115378cc8:   shl    rdi,0x3
  0x0000000115378ccc:   cmp    rdi,0x0
  0x0000000115378cd0:   je     0x0000000115378c4e
  0x0000000115378cd6:   mov    QWORD PTR [rsp],rdi
  0x0000000115378cda:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000000115378cdf:   jmp    0x0000000115378c4e
  0x0000000115378ce4:   cmp    rdx,0x0
  0x0000000115378ce8:   je     0x0000000115378c6d
  0x0000000115378cea:   mov    QWORD PTR [rsp],rsi
  0x0000000115378cee:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x0000000115378cf3:   jmp    0x0000000115378c6d
  0x0000000115378cf8:   movabs r10,0x115378c75              ;   {internal_word}
  0x0000000115378d02:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115378d09:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115378d0e:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115378d15:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115378d20:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115378d2b:   add    rsp,0x30
  0x0000000115378d2f:   pop    rbp
  0x0000000115378d30:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115378d35:   hlt    
  0x0000000115378d36:   hlt    
  0x0000000115378d37:   hlt    
[Exception Handler]
  0x0000000115378d38:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115378d3d:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115378d47:   and    rsp,0xfffffffffffffff0
  0x0000000115378d4b:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115378d50:   hlt    
[Deopt Handler Code]
  0x0000000115378d51:   movabs r10,0x115378d51              ;   {section_word}
  0x0000000115378d5b:   push   r10
  0x0000000115378d5d:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115378d62:   hlt    
  0x0000000115378d63:   hlt    
  0x0000000115378d64:   hlt    
  0x0000000115378d65:   hlt    
  0x0000000115378d66:   hlt    
  0x0000000115378d67:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='115' method='java.util.Arrays copyOfRange ([BII)[B' bytes='64' count='384' iicount='384' level='3' stamp='1.404' comment='tiered' hot_count='384'/>
<task_queued compile_id='116' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='384' iicount='384' level='3' stamp='1.404' comment='tiered' hot_count='384'/>
<task_queued compile_id='117' method='jdk.internal.org.objectweb.asm.ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='507' iicount='507' level='3' stamp='1.405' comment='tiered' hot_count='507'/>
<writer thread='23555'/>
<nmethod compile_id='114' compiler='c1' level='3' entry='0x00000001153790c0' size='5000' address='0x0000000115378e90' relocation_offset='328' insts_offset='560' stub_offset='3232' scopes_data_offset='3376' scopes_pcs_offset='3896' dependencies_offset='4936' nul_chk_table_offset='4944' metadata_offset='3360' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='387' backedge_count='2' iicount='387' stamp='1.405'/>
<print_nmethod compile_id='114' compiler='c1' level='3' stamp='1.405'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1404  114       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
 total in heap  [0x0000000115378e90,0x000000011537a218] = 5000
 relocation     [0x0000000115378fd8,0x00000001153790c0] = 232
 main code      [0x00000001153790c0,0x0000000115379b30] = 2672
 stub code      [0x0000000115379b30,0x0000000115379bb0] = 128
 metadata       [0x0000000115379bb0,0x0000000115379bc0] = 16
 scopes data    [0x0000000115379bc0,0x0000000115379dc8] = 520
 scopes pcs     [0x0000000115379dc8,0x000000011537a1d8] = 1040
 dependencies   [0x000000011537a1d8,0x000000011537a1e0] = 8
 nul chk table  [0x000000011537a1e0,0x000000011537a218] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x80]  (sp of caller)
  0x00000001153790c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00000001153790c4:   movabs r11,0x12ac00000
  0x00000001153790ce:   add    r10,r11
  0x00000001153790d1:   cmp    r10,rax
  0x00000001153790d4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x00000001153790da:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x00000001153790e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153790e7:   push   rbp
  0x00000001153790e8:   sub    rsp,0x70
  0x00000001153790ec:   cmp    DWORD PTR [r15+0x20],0x3
  0x00000001153790f4:   je     0x00000001153790fb
  0x00000001153790f6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153790fb:   mov    QWORD PTR [rsp+0x48],rdx
  0x0000000115379100:   movabs rdi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537910a:   mov    ebx,DWORD PTR [rdi+0xac]
  0x0000000115379110:   add    ebx,0x2
  0x0000000115379113:   mov    DWORD PTR [rdi+0xac],ebx
  0x0000000115379119:   and    ebx,0x7fe
  0x000000011537911f:   cmp    ebx,0x0
  0x0000000115379122:   je     0x00000001153799d6           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@0 (line 936)
  0x0000000115379128:   mov    QWORD PTR [rsp+0x40],rsi
  0x000000011537912d:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x00000001153799f7
  0x0000000115379130:   mov    rdi,rdx
  0x0000000115379133:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537913d:   mov    edi,DWORD PTR [rdi+0x8]
  0x0000000115379140:   movabs r10,0x12ac00000
  0x000000011537914a:   add    rdi,r10
  0x000000011537914d:   cmp    rdi,QWORD PTR [rbx+0x100]
  0x0000000115379154:   jne    0x0000000115379163
  0x0000000115379156:   add    QWORD PTR [rbx+0x108],0x1
  0x000000011537915e:   jmp    0x00000001153791c3
  0x0000000115379163:   cmp    rdi,QWORD PTR [rbx+0x110]
  0x000000011537916a:   jne    0x0000000115379179
  0x000000011537916c:   add    QWORD PTR [rbx+0x118],0x1
  0x0000000115379174:   jmp    0x00000001153791c3
  0x0000000115379179:   cmp    QWORD PTR [rbx+0x100],0x0
  0x0000000115379181:   jne    0x000000011537919a
  0x0000000115379183:   mov    QWORD PTR [rbx+0x100],rdi
  0x000000011537918a:   mov    QWORD PTR [rbx+0x108],0x1
  0x0000000115379195:   jmp    0x00000001153791c3
  0x000000011537919a:   cmp    QWORD PTR [rbx+0x110],0x0
  0x00000001153791a2:   jne    0x00000001153791bb
  0x00000001153791a4:   mov    QWORD PTR [rbx+0x110],rdi
  0x00000001153791ab:   mov    QWORD PTR [rbx+0x118],0x1
  0x00000001153791b6:   jmp    0x00000001153791c3
  0x00000001153791bb:   add    QWORD PTR [rbx+0xf0],0x1
  0x00000001153791c3:   mov    rsi,rdx                      ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
  0x00000001153791c6:   nop    DWORD PTR [rax+0x0]
  0x00000001153791cd:   movabs rax,0x12ac0eb30
  0x00000001153791d7:   call   0x000000011536b9c0           ; ImmutableOopMap {[64]=Oop [72]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                            ;   {virtual_call}
  0x00000001153791dc:   movabs rsi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153791e6:   add    QWORD PTR [rsi+0x128],0x1
  0x00000001153791ee:   movabs rsi,0x16bc167e8              ;   {metadata(method data for {method} {0x000000012b0088a8} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153791f8:   mov    edx,DWORD PTR [rsi+0xac]
  0x00000001153791fe:   add    edx,0x2
  0x0000000115379201:   mov    DWORD PTR [rsi+0xac],edx
  0x0000000115379207:   and    edx,0x1ffffe
  0x000000011537920d:   cmp    edx,0x0
  0x0000000115379210:   je     0x00000001153799fc
  0x0000000115379216:   mov    rsi,rax
  0x0000000115379219:   shr    esi,0x10
  0x000000011537921c:   xor    rsi,rax
  0x000000011537921f:   and    esi,0x7fffffff
  0x0000000115379225:   mov    DWORD PTR [rsp+0x50],esi
  0x0000000115379229:   mov    rdx,QWORD PTR [rsp+0x40]
  0x000000011537922e:   mov    edx,DWORD PTR [rdx+0x28]
  0x0000000115379231:   shl    rdx,0x3                      ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@10 (line 937)
  0x0000000115379235:   cmp    rdx,0x0
  0x0000000115379239:   movabs rdi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379243:   movabs rbx,0x138
  0x000000011537924d:   je     0x000000011537925d
  0x0000000115379253:   movabs rbx,0x148
  0x000000011537925d:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x0000000115379261:   lea    rax,[rax+0x1]
  0x0000000115379265:   mov    QWORD PTR [rdi+rbx*1],rax
  0x0000000115379269:   je     0x0000000115379985           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@15 (line 937)
  0x000000011537926f:   mov    edi,DWORD PTR [rdx+0xc]      ; implicit exception: dispatches to 0x0000000115379a1d
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
  0x0000000115379272:   cmp    edi,0x0
  0x0000000115379275:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537927f:   movabs rax,0x158
  0x0000000115379289:   jle    0x0000000115379299
  0x000000011537928f:   movabs rax,0x168
  0x0000000115379299:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x000000011537929d:   lea    rcx,[rcx+0x1]
  0x00000001153792a1:   mov    QWORD PTR [rbx+rax*1],rcx
  0x00000001153792a5:   jle    0x0000000115379985           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@23 (line 937)
  0x00000001153792ab:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153792b5:   add    QWORD PTR [rbx+0x178],0x1
  0x00000001153792bd:   dec    edi
  0x00000001153792bf:   and    rdi,rsi
  0x00000001153792c2:   mov    rsi,rdx
  0x00000001153792c5:   mov    rdx,rdi                      ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
  0x00000001153792c8:   nop    DWORD PTR [rax+0x0]
  0x00000001153792cf:   call   0x000000011536a4a0           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                            ;   {static_call}
  0x00000001153792d4:   cmp    rax,0x0
  0x00000001153792d8:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153792e2:   movabs rsi,0x188
  0x00000001153792ec:   je     0x00000001153792fc
  0x00000001153792f2:   movabs rsi,0x198
  0x00000001153792fc:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x0000000115379300:   lea    rdi,[rdi+0x1]
  0x0000000115379304:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x0000000115379308:   je     0x0000000115379985           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@39 (line 938)
  0x000000011537930e:   mov    esi,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x0000000115379a22
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
  0x0000000115379311:   cmp    esi,DWORD PTR [rsp+0x50]
  0x0000000115379315:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537931f:   movabs rdi,0x1a8
  0x0000000115379329:   jne    0x0000000115379339
  0x000000011537932f:   movabs rdi,0x1b8
  0x0000000115379339:   mov    rbx,QWORD PTR [rdx+rdi*1]
  0x000000011537933d:   lea    rbx,[rbx+0x1]
  0x0000000115379341:   mov    QWORD PTR [rdx+rdi*1],rbx
  0x0000000115379345:   jne    0x00000001153794d0           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@51 (line 939)
  0x000000011537934b:   mov    rdx,QWORD PTR [rsp+0x48]
  0x0000000115379350:   mov    esi,DWORD PTR [rax+0x10]
  0x0000000115379353:   shl    rsi,0x3                      ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@55 (line 940)
  0x0000000115379357:   cmp    rsi,rdx
  0x000000011537935a:   movabs rdi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379364:   movabs rbx,0x1c8
  0x000000011537936e:   je     0x000000011537937e
  0x0000000115379374:   movabs rbx,0x1d8
  0x000000011537937e:   mov    rcx,QWORD PTR [rdi+rbx*1]
  0x0000000115379382:   lea    rcx,[rcx+0x1]
  0x0000000115379386:   mov    QWORD PTR [rdi+rbx*1],rcx
  0x000000011537938a:   je     0x00000001153799bc           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@62 (line 940)
  0x0000000115379390:   cmp    rsi,0x0
  0x0000000115379394:   movabs rdi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537939e:   movabs rbx,0x1f8
  0x00000001153793a8:   jne    0x00000001153793b8
  0x00000001153793ae:   movabs rbx,0x1e8
  0x00000001153793b8:   mov    rcx,QWORD PTR [rdi+rbx*1]
  0x00000001153793bc:   lea    rcx,[rcx+0x1]
  0x00000001153793c0:   mov    QWORD PTR [rdi+rbx*1],rcx
  0x00000001153793c4:   jne    0x00000001153793d3           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@67 (line 940)
  0x00000001153793ca:   mov    esi,DWORD PTR [rsp+0x50]
  0x00000001153793ce:   jmp    0x0000000115379520           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)
  0x00000001153793d3:   mov    QWORD PTR [rsp+0x58],rax
  0x00000001153793d8:   mov    rdi,rdx
  0x00000001153793db:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153793e5:   mov    edi,DWORD PTR [rdi+0x8]
  0x00000001153793e8:   movabs r10,0x12ac00000
  0x00000001153793f2:   add    rdi,r10
  0x00000001153793f5:   cmp    rdi,QWORD PTR [rbx+0x218]
  0x00000001153793fc:   jne    0x000000011537940b
  0x00000001153793fe:   add    QWORD PTR [rbx+0x220],0x1
  0x0000000115379406:   jmp    0x000000011537946b
  0x000000011537940b:   cmp    rdi,QWORD PTR [rbx+0x228]
  0x0000000115379412:   jne    0x0000000115379421
  0x0000000115379414:   add    QWORD PTR [rbx+0x230],0x1
  0x000000011537941c:   jmp    0x000000011537946b
  0x0000000115379421:   cmp    QWORD PTR [rbx+0x218],0x0
  0x0000000115379429:   jne    0x0000000115379442
  0x000000011537942b:   mov    QWORD PTR [rbx+0x218],rdi
  0x0000000115379432:   mov    QWORD PTR [rbx+0x220],0x1
  0x000000011537943d:   jmp    0x000000011537946b
  0x0000000115379442:   cmp    QWORD PTR [rbx+0x228],0x0
  0x000000011537944a:   jne    0x0000000115379463
  0x000000011537944c:   mov    QWORD PTR [rbx+0x228],rdi
  0x0000000115379453:   mov    QWORD PTR [rbx+0x230],0x1
  0x000000011537945e:   jmp    0x000000011537946b
  0x0000000115379463:   add    QWORD PTR [rbx+0x208],0x1
  0x000000011537946b:   mov    rdi,rdx
  0x000000011537946e:   mov    rdx,rsi
  0x0000000115379471:   mov    rsi,rdi                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
  0x0000000115379474:   nop
  0x0000000115379475:   movabs rax,0x12ac0eb30
  0x000000011537947f:   call   0x0000000115373c40           ; ImmutableOopMap {[72]=Oop [88]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
                                                            ;   {virtual_call}
  0x0000000115379484:   cmp    eax,0x0
  0x0000000115379487:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379491:   movabs rsi,0x250
  0x000000011537949b:   jne    0x00000001153794ab
  0x00000001153794a1:   movabs rsi,0x240
  0x00000001153794ab:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x00000001153794af:   lea    rdi,[rdi+0x1]
  0x00000001153794b3:   mov    QWORD PTR [rdx+rsi*1],rdi    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)
  0x00000001153794b7:   mov    rax,QWORD PTR [rsp+0x58]     ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)
  0x00000001153794bc:   jne    0x00000001153799bc           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)
  0x00000001153794c2:   mov    esi,DWORD PTR [rsp+0x50]
  0x00000001153794c6:   mov    rdx,QWORD PTR [rsp+0x48]
  0x00000001153794cb:   jmp    0x0000000115379520           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)
  0x00000001153794d0:   mov    QWORD PTR [rsp+0x58],rax
  0x00000001153794d5:   cmp    esi,0x0
  0x00000001153794d8:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153794e2:   movabs rsi,0x270
  0x00000001153794ec:   jl     0x00000001153794fc
  0x00000001153794f2:   movabs rsi,0x260
  0x00000001153794fc:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x0000000115379500:   lea    rdi,[rdi+0x1]
  0x0000000115379504:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x0000000115379508:   jl     0x000000011537984f           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@86 (line 943)
  0x000000011537950e:   mov    rax,QWORD PTR [rsp+0x58]     ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)
  0x0000000115379513:   mov    esi,DWORD PTR [rsp+0x50]
  0x0000000115379517:   mov    rdx,QWORD PTR [rsp+0x48]
  0x000000011537951c:   nop    DWORD PTR [rax+0x0]
  0x0000000115379520:   mov    edi,DWORD PTR [rax+0x18]     ; implicit exception: dispatches to 0x0000000115379a27
  0x0000000115379523:   shl    rdi,0x3                      ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
  0x0000000115379527:   cmp    rdi,0x0
  0x000000011537952b:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379535:   movabs rax,0x2f0
  0x000000011537953f:   je     0x000000011537954f
  0x0000000115379545:   movabs rax,0x300
  0x000000011537954f:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x0000000115379553:   lea    rcx,[rcx+0x1]
  0x0000000115379557:   mov    QWORD PTR [rbx+rax*1],rcx
  0x000000011537955b:   je     0x0000000115379985           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@118 (line 945)
  0x0000000115379561:   mov    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x0000000115379a2c
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
  0x0000000115379564:   cmp    ebx,esi
  0x0000000115379566:   mov    eax,0x2
  0x000000011537956b:   jne    0x0000000115379576
  0x0000000115379571:   mov    eax,0x0
  0x0000000115379576:   movabs rcx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379580:   mov    r8d,DWORD PTR [rcx+0xb0]
  0x0000000115379587:   add    r8d,eax
  0x000000011537958a:   mov    DWORD PTR [rcx+0xb0],r8d
  0x0000000115379591:   cmp    eax,0x0
  0x0000000115379594:   jne    0x00000001153795a0
  0x000000011537959a:   mov    r8d,0x2
  0x00000001153795a0:   and    r8d,0x3ffe
  0x00000001153795a7:   cmp    r8d,0x0
  0x00000001153795ab:   je     0x0000000115379a31           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
  0x00000001153795b1:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdx=Oop rdi=Oop [72]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
  0x00000001153795b8:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00000001153795bb:   cmp    ebx,esi
  0x00000001153795bd:   movabs rbx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153795c7:   movabs rax,0x310
  0x00000001153795d1:   jne    0x00000001153795e1
  0x00000001153795d7:   movabs rax,0x320
  0x00000001153795e1:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x00000001153795e5:   lea    rcx,[rcx+0x1]
  0x00000001153795e9:   mov    QWORD PTR [rbx+rax*1],rcx
  0x00000001153795ed:   jne    0x000000011537982d           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
  0x00000001153795f3:   mov    ebx,DWORD PTR [rdi+0x10]
  0x00000001153795f6:   shl    rbx,0x3                      ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@131 (line 946)
  0x00000001153795fa:   cmp    rbx,rdx
  0x00000001153795fd:   movabs rax,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379607:   movabs rcx,0x330
  0x0000000115379611:   je     0x0000000115379621
  0x0000000115379617:   movabs rcx,0x340
  0x0000000115379621:   mov    r8,QWORD PTR [rax+rcx*1]
  0x0000000115379625:   lea    r8,[r8+0x1]
  0x0000000115379629:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011537962d:   je     0x00000001153799a2           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@138 (line 946)
  0x0000000115379633:   cmp    rbx,0x0
  0x0000000115379637:   mov    eax,0x2
  0x000000011537963c:   je     0x0000000115379647
  0x0000000115379642:   mov    eax,0x0
  0x0000000115379647:   movabs rcx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379651:   mov    r8d,DWORD PTR [rcx+0xb0]
  0x0000000115379658:   add    r8d,eax
  0x000000011537965b:   mov    DWORD PTR [rcx+0xb0],r8d
  0x0000000115379662:   cmp    eax,0x0
  0x0000000115379665:   jne    0x0000000115379671
  0x000000011537966b:   mov    r8d,0x2
  0x0000000115379671:   and    r8d,0x3ffe
  0x0000000115379678:   cmp    r8d,0x0
  0x000000011537967c:   je     0x0000000115379a52           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
  0x0000000115379682:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdx=Oop rdi=Oop rbx=Oop [72]=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
  0x0000000115379689:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011537968c:   cmp    rbx,0x0
  0x0000000115379690:   movabs rax,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537969a:   movabs rcx,0x350
  0x00000001153796a4:   je     0x00000001153796b4
  0x00000001153796aa:   movabs rcx,0x360
  0x00000001153796b4:   mov    r8,QWORD PTR [rax+rcx*1]
  0x00000001153796b8:   lea    r8,[r8+0x1]
  0x00000001153796bc:   mov    QWORD PTR [rax+rcx*1],r8
  0x00000001153796c0:   mov    QWORD PTR [rsp+0x60],rdi
  0x00000001153796c5:   je     0x000000011537981a           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
  0x00000001153796cb:   mov    rax,rdx
  0x00000001153796ce:   movabs rcx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153796d8:   mov    eax,DWORD PTR [rax+0x8]
  0x00000001153796db:   movabs r10,0x12ac00000
  0x00000001153796e5:   add    rax,r10
  0x00000001153796e8:   cmp    rax,QWORD PTR [rcx+0x380]
  0x00000001153796ef:   jne    0x00000001153796fe
  0x00000001153796f1:   add    QWORD PTR [rcx+0x388],0x1
  0x00000001153796f9:   jmp    0x000000011537975e
  0x00000001153796fe:   cmp    rax,QWORD PTR [rcx+0x390]
  0x0000000115379705:   jne    0x0000000115379714
  0x0000000115379707:   add    QWORD PTR [rcx+0x398],0x1
  0x000000011537970f:   jmp    0x000000011537975e
  0x0000000115379714:   cmp    QWORD PTR [rcx+0x380],0x0
  0x000000011537971c:   jne    0x0000000115379735
  0x000000011537971e:   mov    QWORD PTR [rcx+0x380],rax
  0x0000000115379725:   mov    QWORD PTR [rcx+0x388],0x1
  0x0000000115379730:   jmp    0x000000011537975e
  0x0000000115379735:   cmp    QWORD PTR [rcx+0x390],0x0
  0x000000011537973d:   jne    0x0000000115379756
  0x000000011537973f:   mov    QWORD PTR [rcx+0x390],rax
  0x0000000115379746:   mov    QWORD PTR [rcx+0x398],0x1
  0x0000000115379751:   jmp    0x000000011537975e
  0x0000000115379756:   add    QWORD PTR [rcx+0x370],0x1
  0x000000011537975e:   mov    rax,rdx
  0x0000000115379761:   mov    rdx,rbx
  0x0000000115379764:   mov    rsi,rax                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
  0x0000000115379767:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011537976d:   movabs rax,0xffffffffffffffff
  0x0000000115379777:   call   0x000000011c900900           ; ImmutableOopMap {[72]=Oop [96]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
                                                            ;   {virtual_call}
  0x000000011537977c:   cmp    eax,0x0
  0x000000011537977f:   mov    edx,0x2
  0x0000000115379784:   je     0x000000011537978f
  0x000000011537978a:   mov    edx,0x0
  0x000000011537978f:   movabs rcx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379799:   mov    esi,DWORD PTR [rcx+0xb0]
  0x000000011537979f:   add    esi,edx
  0x00000001153797a1:   mov    DWORD PTR [rcx+0xb0],esi
  0x00000001153797a7:   cmp    edx,0x0
  0x00000001153797aa:   jne    0x00000001153797b5
  0x00000001153797b0:   mov    esi,0x2
  0x00000001153797b5:   and    esi,0x3ffe
  0x00000001153797bb:   cmp    esi,0x0
  0x00000001153797be:   je     0x0000000115379a73           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
  0x00000001153797c4:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[72]=Oop [96]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
  0x00000001153797cb:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00000001153797ce:   cmp    eax,0x0
  0x00000001153797d1:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153797db:   movabs rcx,0x3b8
  0x00000001153797e5:   jne    0x00000001153797f5
  0x00000001153797eb:   movabs rcx,0x3a8
  0x00000001153797f5:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00000001153797f9:   lea    rsi,[rsi+0x1]
  0x00000001153797fd:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x0000000115379801:   jne    0x0000000115379845           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
  0x0000000115379807:   mov    rax,QWORD PTR [rsp+0x60]
  0x000000011537980c:   mov    esi,DWORD PTR [rsp+0x50]
  0x0000000115379810:   mov    rdx,QWORD PTR [rsp+0x48]
  0x0000000115379815:   jmp    0x0000000115379520
  0x000000011537981a:   mov    rax,QWORD PTR [rsp+0x60]
  0x000000011537981f:   mov    esi,DWORD PTR [rsp+0x50]
  0x0000000115379823:   mov    rdx,QWORD PTR [rsp+0x48]
  0x0000000115379828:   jmp    0x0000000115379520
  0x000000011537982d:   mov    QWORD PTR [rsp+0x60],rdi
  0x0000000115379832:   mov    rax,QWORD PTR [rsp+0x60]
  0x0000000115379837:   mov    esi,DWORD PTR [rsp+0x50]
  0x000000011537983b:   mov    rdx,QWORD PTR [rsp+0x48]
  0x0000000115379840:   jmp    0x0000000115379520           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)
  0x0000000115379845:   mov    rdi,QWORD PTR [rsp+0x60]
  0x000000011537984a:   jmp    0x00000001153799a2           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@155 (line 948)
  0x000000011537984f:   mov    esi,DWORD PTR [rsp+0x50]
  0x0000000115379853:   mov    rcx,QWORD PTR [rsp+0x48]
  0x0000000115379858:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011537985d:   movabs rdx,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379867:   mov    eax,DWORD PTR [rax+0x8]
  0x000000011537986a:   movabs r10,0x12ac00000
  0x0000000115379874:   add    rax,r10
  0x0000000115379877:   cmp    rax,QWORD PTR [rdx+0x290]
  0x000000011537987e:   jne    0x000000011537988d
  0x0000000115379880:   add    QWORD PTR [rdx+0x298],0x1
  0x0000000115379888:   jmp    0x00000001153798ed
  0x000000011537988d:   cmp    rax,QWORD PTR [rdx+0x2a0]
  0x0000000115379894:   jne    0x00000001153798a3
  0x0000000115379896:   add    QWORD PTR [rdx+0x2a8],0x1
  0x000000011537989e:   jmp    0x00000001153798ed
  0x00000001153798a3:   cmp    QWORD PTR [rdx+0x290],0x0
  0x00000001153798ab:   jne    0x00000001153798c4
  0x00000001153798ad:   mov    QWORD PTR [rdx+0x290],rax
  0x00000001153798b4:   mov    QWORD PTR [rdx+0x298],0x1
  0x00000001153798bf:   jmp    0x00000001153798ed
  0x00000001153798c4:   cmp    QWORD PTR [rdx+0x2a0],0x0
  0x00000001153798cc:   jne    0x00000001153798e5
  0x00000001153798ce:   mov    QWORD PTR [rdx+0x2a0],rax
  0x00000001153798d5:   mov    QWORD PTR [rdx+0x2a8],0x1
  0x00000001153798e0:   jmp    0x00000001153798ed
  0x00000001153798e5:   add    QWORD PTR [rdx+0x280],0x1
  0x00000001153798ed:   mov    rdx,rsi
  0x00000001153798f0:   mov    rsi,QWORD PTR [rsp+0x58]     ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
  0x00000001153798f5:   movabs rax,0xffffffffffffffff
  0x00000001153798ff:   call   0x000000011c900900           ; ImmutableOopMap {}
                                                            ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
                                                            ;   {virtual_call}
  0x0000000115379904:   cmp    rax,0x0
  0x0000000115379908:   movabs rsi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379912:   movabs rdi,0x2b8
  0x000000011537991c:   je     0x000000011537992c
  0x0000000115379922:   movabs rdi,0x2c8
  0x000000011537992c:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x0000000115379930:   lea    rbx,[rbx+0x1]
  0x0000000115379934:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x0000000115379938:   je     0x0000000115379968           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@99 (line 944)
  0x000000011537993e:   mov    eax,DWORD PTR [rax+0x14]     ; implicit exception: dispatches to 0x0000000115379a94
  0x0000000115379941:   shl    rax,0x3                      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
  0x0000000115379945:   movabs rsi,0x16bc255a0              ;   {metadata(method data for {method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011537994f:   inc    DWORD PTR [rsi+0x2d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@107 (line 944)
  0x0000000115379955:   add    rsp,0x70
  0x0000000115379959:   pop    rbp
  0x000000011537995a:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115379961:   ja     0x0000000115379a99
  0x0000000115379967:   ret    
  0x0000000115379968:   movabs rax,0x0                      ;   {oop(NULL)}
  0x0000000115379972:   add    rsp,0x70
  0x0000000115379976:   pop    rbp
  0x0000000115379977:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537997e:   ja     0x0000000115379aaf
  0x0000000115379984:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@111 (line 944)
  0x0000000115379985:   movabs rax,0x0                      ;   {oop(NULL)}
  0x000000011537998f:   add    rsp,0x70
  0x0000000115379993:   pop    rbp
  0x0000000115379994:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537999b:   ja     0x0000000115379ac5
  0x00000001153799a1:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@161 (line 951)
  0x00000001153799a2:   mov    eax,DWORD PTR [rdi+0x14]
  0x00000001153799a5:   shl    rax,0x3                      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@156 (line 948)
  0x00000001153799a9:   add    rsp,0x70
  0x00000001153799ad:   pop    rbp
  0x00000001153799ae:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153799b5:   ja     0x0000000115379adb
  0x00000001153799bb:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@159 (line 948)
  0x00000001153799bc:   mov    eax,DWORD PTR [rax+0x14]
  0x00000001153799bf:   shl    rax,0x3                      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@80 (line 941)
  0x00000001153799c3:   add    rsp,0x70
  0x00000001153799c7:   pop    rbp
  0x00000001153799c8:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x00000001153799cf:   ja     0x0000000115379af1
  0x00000001153799d5:   ret    
  0x00000001153799d6:   movabs r10,0x12ac65cb8              ;   {metadata({method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000001153799e0:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153799e5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153799ed:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop rdx=Oop [72]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@-1 (line 936)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153799f2:   jmp    0x0000000115379128
  0x00000001153799f7:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop [64]=Oop [72]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153799fc:   movabs r10,0x12b0088a8              ;   {metadata({method} {0x000000012b0088a8} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379a06:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115379a0b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x0000000115379a13:   call   0x000000011c9c1480           ; ImmutableOopMap {[64]=Oop [72]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@4 (line 936)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115379a18:   jmp    0x0000000115379216
  0x0000000115379a1d:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop [72]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115379a22:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [72]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115379a27:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop [72]=Oop }
                                                            ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115379a2c:   call   0x000000011c9bc100           ; ImmutableOopMap {rdx=Oop rdi=Oop [72]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115379a31:   movabs r10,0x12ac65cb8              ;   {metadata({method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379a3b:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115379a40:   mov    QWORD PTR [rsp],0x7f
  0x0000000115379a48:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop rdi=Oop [72]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115379a4d:   jmp    0x00000001153795b1
  0x0000000115379a52:   movabs r10,0x12ac65cb8              ;   {metadata({method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379a5c:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115379a61:   mov    QWORD PTR [rsp],0x8f
  0x0000000115379a69:   call   0x000000011c9c1480           ; ImmutableOopMap {rdx=Oop rdi=Oop rbx=Oop [72]=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115379a6e:   jmp    0x0000000115379682
  0x0000000115379a73:   movabs r10,0x12ac65cb8              ;   {metadata({method} {0x000000012ac65cb8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000115379a7d:   mov    QWORD PTR [rsp+0x8],r10
  0x0000000115379a82:   mov    QWORD PTR [rsp],0x98
  0x0000000115379a8a:   call   0x000000011c9c1480           ; ImmutableOopMap {[72]=Oop [96]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000115379a8f:   jmp    0x00000001153797c4
  0x0000000115379a94:   call   0x000000011c9bc100           ; ImmutableOopMap {}
                                                            ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000115379a99:   movabs r10,0x11537995a              ;   {internal_word}
  0x0000000115379aa3:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115379aaa:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115379aaf:   movabs r10,0x115379977              ;   {internal_word}
  0x0000000115379ab9:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115379ac0:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115379ac5:   movabs r10,0x115379994              ;   {internal_word}
  0x0000000115379acf:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115379ad6:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115379adb:   movabs r10,0x1153799ae              ;   {internal_word}
  0x0000000115379ae5:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115379aec:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115379af1:   movabs r10,0x1153799c8              ;   {internal_word}
  0x0000000115379afb:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115379b02:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115379b07:   mov    rax,QWORD PTR [r15+0x428]
  0x0000000115379b0e:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115379b19:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115379b24:   add    rsp,0x70
  0x0000000115379b28:   pop    rbp
  0x0000000115379b29:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000115379b2e:   hlt    
  0x0000000115379b2f:   hlt    
[Stub Code]
  0x0000000115379b30:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x0000000115379b35:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115379b3f:   jmp    0x0000000115379b3f           ;   {runtime_call}
  0x0000000115379b44:   nop
  0x0000000115379b45:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115379b4f:   jmp    0x0000000115379b4f           ;   {runtime_call}
  0x0000000115379b54:   nop
  0x0000000115379b55:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115379b5f:   jmp    0x0000000115379b5f           ;   {runtime_call}
  0x0000000115379b64:   nop
  0x0000000115379b65:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115379b6f:   jmp    0x0000000115379b6f           ;   {runtime_call}
[Exception Handler]
  0x0000000115379b74:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000000115379b79:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x0000000115379b83:   and    rsp,0xfffffffffffffff0
  0x0000000115379b87:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115379b8c:   hlt    
[Deopt Handler Code]
  0x0000000115379b8d:   movabs r10,0x115379b8d              ;   {section_word}
  0x0000000115379b97:   push   r10
  0x0000000115379b99:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x0000000115379b9e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000115379ba8:   jmp    0x0000000115379ba8           ;   {runtime_call}
  0x0000000115379bad:   hlt    
  0x0000000115379bae:   hlt    
  0x0000000115379baf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='118' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='512' iicount='512' level='3' stamp='1.432' comment='tiered' hot_count='512'/>
<writer thread='23555'/>
<nmethod compile_id='118' compiler='c1' level='3' entry='0x000000011537a420' size='928' address='0x000000011537a290' relocation_offset='328' insts_offset='400' stub_offset='704' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='920' oops_offset='752' metadata_offset='760' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='4091' iicount='4095' stamp='1.432'/>
<print_nmethod compile_id='118' compiler='c1' level='3' stamp='1.432'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1431  118       3       foo.rida.GetterWrapper::&lt;init&gt; (10 bytes)
 total in heap  [0x000000011537a290,0x000000011537a630] = 928
 relocation     [0x000000011537a3d8,0x000000011537a410] = 56
 main code      [0x000000011537a420,0x000000011537a550] = 304
 stub code      [0x000000011537a550,0x000000011537a580] = 48
 oops           [0x000000011537a580,0x000000011537a588] = 8
 metadata       [0x000000011537a588,0x000000011537a598] = 16
 scopes data    [0x000000011537a598,0x000000011537a5c8] = 48
 scopes pcs     [0x000000011537a5c8,0x000000011537a628] = 96
 dependencies   [0x000000011537a628,0x000000011537a630] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;
  # this:     rsi:rsi   = &apos;foo/rida/GetterWrapper&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011537a420:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011537a424:   movabs r11,0x12ac00000
  0x000000011537a42e:   add    r10,r11
  0x000000011537a431:   cmp    r10,rax
  0x000000011537a434:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537a43a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011537a440:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537a447:   push   rbp
  0x000000011537a448:   sub    rsp,0x30
  0x000000011537a44c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011537a454:   je     0x000000011537a45b
  0x000000011537a456:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537a45b:   movabs rdi,0x16c0023c0              ;   {metadata(method data for {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537a465:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537a46b:   add    ebx,0x2
  0x000000011537a46e:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011537a474:   and    ebx,0x7fe
  0x000000011537a47a:   cmp    ebx,0x0
  0x000000011537a47d:   je     0x000000011537a4d6           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@0 (line 6)
  0x000000011537a483:   mov    rdi,rsi
  0x000000011537a486:   movabs rbx,0x16c0023c0              ;   {metadata(method data for {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537a490:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011537a498:   movabs rdi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537a4a2:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537a4a8:   add    ebx,0x2
  0x000000011537a4ab:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011537a4b1:   and    ebx,0x1ffffe
  0x000000011537a4b7:   cmp    ebx,0x0
  0x000000011537a4ba:   je     0x000000011537a4f4
  0x000000011537a4c0:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@6 (line 7)
  0x000000011537a4c3:   add    rsp,0x30
  0x000000011537a4c7:   pop    rbp
  0x000000011537a4c8:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537a4cf:   ja     0x000000011537a512
  0x000000011537a4d5:   ret    
  0x000000011537a4d6:   movabs r10,0x16c001c30              ;   {metadata({method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537a4e0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537a4e5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537a4ed:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537a4f2:   jmp    0x000000011537a483
  0x000000011537a4f4:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537a4fe:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537a503:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537a50b:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@1 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537a510:   jmp    0x000000011537a4c0
  0x000000011537a512:   movabs r10,0x11537a4c8              ;   {internal_word}
  0x000000011537a51c:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537a523:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537a528:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537a52f:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537a53a:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537a545:   add    rsp,0x30
  0x000000011537a549:   pop    rbp
  0x000000011537a54a:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537a54f:   hlt    
[Exception Handler]
  0x000000011537a550:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537a555:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537a55f:   and    rsp,0xfffffffffffffff0
  0x000000011537a563:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537a568:   hlt    
[Deopt Handler Code]
  0x000000011537a569:   movabs r10,0x11537a569              ;   {section_word}
  0x000000011537a573:   push   r10
  0x000000011537a575:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537a57a:   hlt    
  0x000000011537a57b:   hlt    
  0x000000011537a57c:   hlt    
  0x000000011537a57d:   hlt    
  0x000000011537a57e:   hlt    
  0x000000011537a57f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='119' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='105984' iicount='105984' stamp='1.436' comment='tiered' hot_count='105984'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='119' compiler='c2' level='4' entry='0x000000011ce3ce00' size='584' address='0x000000011ce3cc90' relocation_offset='328' insts_offset='368' stub_offset='480' scopes_data_offset='520' scopes_pcs_offset='528' dependencies_offset='576' oops_offset='504' metadata_offset='512' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='114505' iicount='114515' stamp='1.436'/>
<make_not_entrant thread='30467' compile_id='118' compiler='c1' level='3' stamp='1.436'/>
<print_nmethod compile_id='119' compiler='c2' level='4' stamp='1.436'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1436  119       4       foo.rida.GetterWrapper::&lt;init&gt; (10 bytes)
 total in heap  [0x000000011ce3cc90,0x000000011ce3ced8] = 584
 relocation     [0x000000011ce3cdd8,0x000000011ce3cdf0] = 24
 main code      [0x000000011ce3ce00,0x000000011ce3ce70] = 112
 stub code      [0x000000011ce3ce70,0x000000011ce3ce88] = 24
 oops           [0x000000011ce3ce88,0x000000011ce3ce90] = 8
 metadata       [0x000000011ce3ce90,0x000000011ce3ce98] = 8
 scopes data    [0x000000011ce3ce98,0x000000011ce3cea0] = 8
 scopes pcs     [0x000000011ce3cea0,0x000000011ce3ced0] = 48
 dependencies   [0x000000011ce3ced0,0x000000011ce3ced8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;
  # this:     rsi:rsi   = &apos;foo/rida/GetterWrapper&apos;
  # parm0:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000011ce3ce00:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3ce04:   movabs r11,0x12ac00000
  0x000000011ce3ce0e:   add    r10,r11
  0x000000011ce3ce11:   cmp    rax,r10
  0x000000011ce3ce14:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3ce1a:   xchg   ax,ax
  0x000000011ce3ce1c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce3ce20:   sub    rsp,0x18
  0x000000011ce3ce27:   mov    QWORD PTR [rsp+0x10],rbp
  0x000000011ce3ce2c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011ce3ce34:   jne    0x000000011ce3ce66
  0x000000011ce3ce3a:   mov    DWORD PTR [rsi+0xc],edx      ;*synchronization entry
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@-1 (line 6)
  0x000000011ce3ce3d:   add    rsp,0x10
  0x000000011ce3ce41:   pop    rbp
  0x000000011ce3ce42:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3ce49:   ja     0x000000011ce3ce50
  0x000000011ce3ce4f:   ret    
  0x000000011ce3ce50:   movabs r10,0x11ce3ce42              ;   {internal_word}
  0x000000011ce3ce5a:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3ce61:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3ce66:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3ce6b:   jmp    0x000000011ce3ce3a
[Exception Handler]
  0x000000011ce3ce70:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3ce75:   call   0x000000011ce3ce7a
  0x000000011ce3ce7a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3ce7f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3ce84:   hlt    
  0x000000011ce3ce85:   hlt    
  0x000000011ce3ce86:   hlt    
  0x000000011ce3ce87:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='23555'/>
<nmethod compile_id='115' compiler='c1' level='3' entry='0x000000011537a8e0' size='4000' address='0x000000011537a690' relocation_offset='328' insts_offset='592' stub_offset='2568' scopes_data_offset='2792' scopes_pcs_offset='3336' dependencies_offset='3976' nul_chk_table_offset='3984' oops_offset='2728' metadata_offset='2736' method='java.util.Arrays copyOfRange ([BII)[B' bytes='64' count='416' iicount='416' stamp='1.438'/>
<print_nmethod compile_id='115' compiler='c1' level='3' stamp='1.438'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1437  115       3       java.util.Arrays::copyOfRange (64 bytes)
 total in heap  [0x000000011537a690,0x000000011537b630] = 4000
 relocation     [0x000000011537a7d8,0x000000011537a8c8] = 240
 main code      [0x000000011537a8e0,0x000000011537b098] = 1976
 stub code      [0x000000011537b098,0x000000011537b138] = 160
 oops           [0x000000011537b138,0x000000011537b140] = 8
 metadata       [0x000000011537b140,0x000000011537b178] = 56
 scopes data    [0x000000011537b178,0x000000011537b398] = 544
 scopes pcs     [0x000000011537b398,0x000000011537b618] = 640
 dependencies   [0x000000011537b618,0x000000011537b620] = 8
 nul chk table  [0x000000011537b620,0x000000011537b630] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000011537a8e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537a8e7:   push   rbp
  0x000000011537a8e8:   sub    rsp,0xb0
  0x000000011537a8ef:   nop
  0x000000011537a8f0:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537a8f8:   je     0x000000011537a8ff
  0x000000011537a8fa:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537a8ff:   mov    r8,rsi
  0x000000011537a902:   movabs rbx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537a90c:   mov    esi,DWORD PTR [rbx+0xac]
  0x000000011537a912:   add    esi,0x2
  0x000000011537a915:   mov    DWORD PTR [rbx+0xac],esi
  0x000000011537a91b:   and    esi,0x7fe
  0x000000011537a921:   cmp    esi,0x0
  0x000000011537a924:   je     0x000000011537aef1           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@0 (line 3819)
  0x000000011537a92a:   mov    r9,rcx
  0x000000011537a92d:   sub    r9d,edx
  0x000000011537a930:   cmp    r9d,0x0
  0x000000011537a934:   movabs rbx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537a93e:   movabs rsi,0x100
  0x000000011537a948:   jl     0x000000011537a958
  0x000000011537a94e:   movabs rsi,0xf0
  0x000000011537a958:   mov    rdi,QWORD PTR [rbx+rsi*1]
  0x000000011537a95c:   lea    rdi,[rdi+0x1]
  0x000000011537a960:   mov    QWORD PTR [rbx+rsi*1],rdi
  0x000000011537a964:   jl     0x000000011537ab29           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@5 (line 3820)
  0x000000011537a96a:   mov    rbx,r9
  0x000000011537a96d:   mov    r11,rdx
  0x000000011537a970:   movabs rdx,0x12ac02258              ;   {metadata({type array byte})}
  0x000000011537a97a:   movsxd rbx,ebx
  0x000000011537a97d:   mov    rdi,rbx
  0x000000011537a980:   cmp    rbx,0xffffff
  0x000000011537a987:   ja     0x000000011537af12
  0x000000011537a98d:   movabs rsi,0x17
  0x000000011537a997:   lea    rsi,[rsi+rbx*1]
  0x000000011537a99b:   and    rsi,0xfffffffffffffff8
  0x000000011537a99f:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537a9a6:   lea    rsi,[rax+rsi*1]
  0x000000011537a9aa:   cmp    rsi,QWORD PTR [r15+0x108]
  0x000000011537a9b1:   ja     0x000000011537af12
  0x000000011537a9b7:   mov    QWORD PTR [r15+0xf8],rsi
  0x000000011537a9be:   sub    rsi,rax
  0x000000011537a9c1:   mov    QWORD PTR [rax],0x1
  0x000000011537a9c8:   mov    rcx,rdx
  0x000000011537a9cb:   movabs r10,0x12ac00000
  0x000000011537a9d5:   sub    rcx,r10
  0x000000011537a9d8:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537a9db:   mov    DWORD PTR [rax+0xc],ebx
  0x000000011537a9de:   sub    rsi,0x10
  0x000000011537a9e2:   test   rsi,rsi
  0x000000011537a9e5:   je     0x000000011537a9fc
  0x000000011537a9eb:   xor    rbx,rbx
  0x000000011537a9ee:   shr    rsi,0x3
  0x000000011537a9f2:   mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x000000011537a9f7:   dec    rsi
  0x000000011537a9fa:   jne    0x000000011537a9f2           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@41 (line 3822)
  0x000000011537a9fc:   mov    esi,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011537af1c
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@51 (line 3823)
  0x000000011537aa00:   sub    esi,r11d
  0x000000011537aa03:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537aa0d:   add    QWORD PTR [rdx+0x210],0x1
  0x000000011537aa15:   movabs rdx,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011537aa1f:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011537aa25:   add    ecx,0x2
  0x000000011537aa28:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011537aa2e:   and    ecx,0x1ffffe
  0x000000011537aa34:   cmp    ecx,0x0
  0x000000011537aa37:   je     0x000000011537af21
  0x000000011537aa3d:   cmp    esi,r9d
  0x000000011537aa40:   movabs rdx,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011537aa4a:   movabs rcx,0xf0
  0x000000011537aa54:   jg     0x000000011537aa64
  0x000000011537aa5a:   movabs rcx,0x100
  0x000000011537aa64:   mov    rdi,QWORD PTR [rdx+rcx*1]
  0x000000011537aa68:   lea    rdi,[rdi+0x1]
  0x000000011537aa6c:   mov    QWORD PTR [rdx+rcx*1],rdi
  0x000000011537aa70:   jg     0x000000011537aa89           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@2 (line 2115)
                                                            ; - java.util.Arrays::copyOfRange@55 (line 3824)
  0x000000011537aa76:   movabs rdx,0x16bc156f0              ;   {metadata(method data for {method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011537aa80:   inc    DWORD PTR [rdx+0x110]
  0x000000011537aa86:   mov    r9,rsi                       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@6 (line 2115)
                                                            ; - java.util.Arrays::copyOfRange@55 (line 3824)
  0x000000011537aa89:   movabs rsi,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537aa93:   add    QWORD PTR [rsi+0x220],0x1
  0x000000011537aa9b:   mov    rsi,r8
  0x000000011537aa9e:   mov    rdx,r11
  0x000000011537aaa1:   mov    rcx,rax
  0x000000011537aaa4:   mov    r8d,0x0
  0x000000011537aaaa:   mov    QWORD PTR [rsp+0x78],rax
  0x000000011537aaaf:   test   edx,edx
  0x000000011537aab1:   jl     0x000000011537af42
  0x000000011537aab7:   lea    rdi,[rdx+r9*1]
  0x000000011537aabb:   cmp    edi,DWORD PTR [rsi+0xc]
  0x000000011537aabe:   ja     0x000000011537af42
  0x000000011537aac4:   lea    rdi,[r8+r9*1]
  0x000000011537aac8:   cmp    edi,DWORD PTR [rcx+0xc]
  0x000000011537aacb:   ja     0x000000011537af42
  0x000000011537aad1:   test   r9d,r9d
  0x000000011537aad4:   jl     0x000000011537af42
  0x000000011537aada:   movsxd rdx,edx
  0x000000011537aadd:   movsxd r8,r8d
  0x000000011537aae0:   lea    rdi,[rsi+rdx*1+0x10]
  0x000000011537aae5:   lea    rsi,[rcx+r8*1+0x10]
  0x000000011537aaea:   mov    rdx,r9
  0x000000011537aaed:   test   spl,0xf
  0x000000011537aaf1:   je     0x000000011537ab09
  0x000000011537aaf7:   sub    rsp,0x8
  0x000000011537aafb:   call   Stub::jbyte_disjoint_arraycopy;   {runtime_call StubRoutines (2)}
  0x000000011537ab00:   add    rsp,0x8
  0x000000011537ab04:   jmp    0x000000011537ab0e
  0x000000011537ab09:   call   Stub::jbyte_disjoint_arraycopy;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@58 (line 3823)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011537ab0e:   mov    rax,QWORD PTR [rsp+0x78]
  0x000000011537ab13:   add    rsp,0xb0
  0x000000011537ab1a:   pop    rbp
  0x000000011537ab1b:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537ab22:   ja     0x000000011537af51
  0x000000011537ab28:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@63 (line 3825)
  0x000000011537ab29:   mov    DWORD PTR [rsp+0x8c],ecx
  0x000000011537ab30:   mov    DWORD PTR [rsp+0x88],edx
  0x000000011537ab37:   nop
  0x000000011537ab38:   jmp    0x000000011537af76           ;   {no_reloc}
  0x000000011537ab3d:   add    BYTE PTR [rax],al
  0x000000011537ab3f:   add    BYTE PTR [rax],al
  0x000000011537ab41:   add    BYTE PTR [rcx-0x75],cl
  0x000000011537ab44:   xchg   eax,edi
  0x000000011537ab46:   add    BYTE PTR [rax],al
  0x000000011537ab48:   add    BYTE PTR [rax-0x73],cl
  0x000000011537ab4b:   js     0x000000011537ab75
  0x000000011537ab4d:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537ab54:   ja     0x000000011537af80
  0x000000011537ab5a:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537ab61:   mov    QWORD PTR [rax],0x1
  0x000000011537ab68:   mov    rcx,rdx
  0x000000011537ab6b:   movabs r10,0x12ac00000
  0x000000011537ab75:   sub    rcx,r10
  0x000000011537ab78:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537ab7b:   xor    rcx,rcx
  0x000000011537ab7e:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537ab81:   xor    rcx,rcx
  0x000000011537ab84:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011537ab88:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011537ab8c:   mov    QWORD PTR [rax+0x20],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@8 (line 3821)
  0x000000011537ab90:   movabs rdx,0x12ac08438              ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000011537ab9a:   mov    QWORD PTR [rsp+0x90],rax
  0x000000011537aba2:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537aba9:   lea    rdi,[rax+0x18]
  0x000000011537abad:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537abb4:   ja     0x000000011537af8d
  0x000000011537abba:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537abc1:   mov    QWORD PTR [rax],0x1
  0x000000011537abc8:   mov    rcx,rdx
  0x000000011537abcb:   movabs r10,0x12ac00000
  0x000000011537abd5:   sub    rcx,r10
  0x000000011537abd8:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537abdb:   xor    rcx,rcx
  0x000000011537abde:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537abe1:   xor    rcx,rcx
  0x000000011537abe4:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@12 (line 3821)
  0x000000011537abe8:   mov    rdx,rax
  0x000000011537abeb:   movabs rsi,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537abf5:   add    QWORD PTR [rsi+0x110],0x1
  0x000000011537abfd:   movabs rdx,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ac07:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537ac0d:   add    esi,0x2
  0x000000011537ac10:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537ac16:   and    esi,0x1ffffe
  0x000000011537ac1c:   cmp    esi,0x0
  0x000000011537ac1f:   je     0x000000011537af9a
  0x000000011537ac25:   mov    rdx,rax
  0x000000011537ac28:   movabs rsi,0x16bc1df30              ;   {metadata(method data for {method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ac32:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011537ac3a:   mov    edx,0x10
  0x000000011537ac3f:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.util.Arrays::copyOfRange@16 (line 3821)
  0x000000011537ac42:   mov    QWORD PTR [rsp+0x80],rax
  0x000000011537ac4a:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011537ac4f:   call   0x000000011c900600           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 106)
                                                            ; - java.util.Arrays::copyOfRange@16 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537ac54:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537ac5c:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537ac66:   add    QWORD PTR [rdx+0x120],0x1
  0x000000011537ac6e:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ac78:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537ac7e:   add    esi,0x2
  0x000000011537ac81:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537ac87:   and    esi,0x1ffffe
  0x000000011537ac8d:   cmp    esi,0x0
  0x000000011537ac90:   je     0x000000011537afbb
  0x000000011537ac96:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537ac9e:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537aca8:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011537acb0:   mov    edx,DWORD PTR [rsp+0x88]
  0x000000011537acb7:   mov    rsi,QWORD PTR [rsp+0x80]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@20 (line 3821)
  0x000000011537acbf:   call   0x000000011c900600           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@20 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537acc4:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537accc:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537acd6:   add    QWORD PTR [rdx+0x158],0x1
  0x000000011537acde:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ace8:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537acee:   add    esi,0x2
  0x000000011537acf1:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537acf7:   and    esi,0x1ffffe
  0x000000011537acfd:   cmp    esi,0x0
  0x000000011537ad00:   je     0x000000011537afdc
  0x000000011537ad06:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537ad0e:   movabs rdx,0x16bc1e1e0              ;   {metadata(method data for {method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ad18:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011537ad20:   movabs rdx,0x7ffe06e90              ;   {oop(&quot; &gt; &quot;{0x00000007ffe06e90})}
  0x000000011537ad2a:   mov    rsi,QWORD PTR [rsp+0x80]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.Arrays::copyOfRange@26 (line 3821)
  0x000000011537ad32:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011537ad37:   call   0x000000011c900600           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.Arrays::copyOfRange@26 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537ad3c:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537ad44:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537ad4e:   add    QWORD PTR [rdx+0x190],0x1
  0x000000011537ad56:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ad60:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537ad66:   add    esi,0x2
  0x000000011537ad69:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537ad6f:   and    esi,0x1ffffe
  0x000000011537ad75:   cmp    esi,0x0
  0x000000011537ad78:   je     0x000000011537affd
  0x000000011537ad7e:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537ad86:   movabs rdx,0x16bc1e548              ;   {metadata(method data for {method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ad90:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011537ad98:   mov    edx,DWORD PTR [rsp+0x8c]
  0x000000011537ad9f:   mov    rsi,QWORD PTR [rsp+0x80]     ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@30 (line 3821)
  0x000000011537ada7:   call   0x000000011c900600           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@30 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537adac:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537adb4:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537adbe:   add    QWORD PTR [rdx+0x1c8],0x1
  0x000000011537adc6:   movabs rdx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537add0:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537add6:   add    esi,0x2
  0x000000011537add9:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537addf:   and    esi,0x1ffffe
  0x000000011537ade5:   cmp    esi,0x0
  0x000000011537ade8:   je     0x000000011537b01e
  0x000000011537adee:   movabs rdx,0x12ac0eb30              ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011537adf8:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537adff:   lea    rdi,[rax+0x18]
  0x000000011537ae03:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537ae0a:   ja     0x000000011537b03f
  0x000000011537ae10:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537ae17:   mov    QWORD PTR [rax],0x1
  0x000000011537ae1e:   mov    rcx,rdx
  0x000000011537ae21:   movabs r10,0x12ac00000
  0x000000011537ae2b:   sub    rcx,r10
  0x000000011537ae2e:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537ae31:   xor    rcx,rcx
  0x000000011537ae34:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537ae37:   xor    rcx,rcx
  0x000000011537ae3a:   mov    QWORD PTR [rax+0x10],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
  0x000000011537ae3e:   mov    rdx,rax
  0x000000011537ae41:   movabs rcx,0x16bc1e888              ;   {metadata(method data for {method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537ae4b:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011537ae53:   movabs rdx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537ae5d:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011537ae63:   add    ecx,0x2
  0x000000011537ae66:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011537ae6c:   and    ecx,0x1ffffe
  0x000000011537ae72:   cmp    ecx,0x0
  0x000000011537ae75:   je     0x000000011537b04c
  0x000000011537ae7b:   mov    rdx,rax
  0x000000011537ae7e:   movabs rcx,0x16bc1e9b0              ;   {metadata(method data for {method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537ae88:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011537ae90:   mov    rdx,QWORD PTR [rsp+0x80]
  0x000000011537ae98:   movabs rcx,0x0                      ;   {oop(NULL)}
  0x000000011537aea2:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
  0x000000011537aea5:   mov    QWORD PTR [rsp+0x98],rax
  0x000000011537aead:   xchg   ax,ax
  0x000000011537aeaf:   call   0x000000011c900600           ; ImmutableOopMap {[144]=Oop [152]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::&lt;init&gt;@3 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537aeb4:   mov    rax,QWORD PTR [rsp+0x90]
  0x000000011537aebc:   movabs rdx,0x16bc26c40              ;   {metadata(method data for {method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537aec6:   add    QWORD PTR [rdx+0x200],0x1
  0x000000011537aece:   mov    rdx,QWORD PTR [rsp+0x98]
  0x000000011537aed6:   mov    rsi,QWORD PTR [rsp+0x90]     ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@36 (line 3821)
  0x000000011537aede:   nop
  0x000000011537aedf:   call   0x000000011c900600           ; ImmutableOopMap {[144]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@36 (line 3821)
                                                            ;   {optimized virtual_call}
  0x000000011537aee4:   mov    rax,QWORD PTR [rsp+0x90]
  0x000000011537aeec:   jmp    0x000000011537b08a
  0x000000011537aef1:   movabs r10,0x12b01d8e8              ;   {metadata({method} {0x000000012b01d8e8} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011537aefb:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537af00:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537af08:   call   0x000000011c9c1480           ; ImmutableOopMap {r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Arrays::copyOfRange@-1 (line 3819)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537af0d:   jmp    0x000000011537a92a
  0x000000011537af12:   call   0x000000011c9bd000           ; ImmutableOopMap {r8=Oop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@41 (line 3822)
                                                            ;   {runtime_call new_type_array Runtime1 stub}
  0x000000011537af17:   jmp    0x000000011537a9fc
  0x000000011537af1c:   call   0x000000011c9bc100           ; ImmutableOopMap {r8=Oop rax=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@51 (line 3823)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537af21:   movabs r10,0x12b0268e8              ;   {metadata({method} {0x000000012b0268e8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011537af2b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537af30:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537af38:   call   0x000000011c9c1480           ; ImmutableOopMap {r8=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::min@-1 (line 2115)
                                                            ; - java.util.Arrays::copyOfRange@55 (line 3824)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537af3d:   jmp    0x000000011537aa3d
  0x000000011537af42:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011537af47:   call   0x000000011c900c00           ; ImmutableOopMap {[120]=Oop }
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@58 (line 3823)
                                                            ;   {static_call}
  0x000000011537af4c:   jmp    0x000000011537ab0e
  0x000000011537af51:   movabs r10,0x11537ab1b              ;   {internal_word}
  0x000000011537af5b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537af62:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537af67:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011537af71:   mov    eax,0xa050f00
  0x000000011537af76:   call   0x000000011c9c0580           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Arrays::copyOfRange@8 (line 3821)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011537af7b:   jmp    0x000000011537ab38
  0x000000011537af80:   mov    rdx,rdx
  0x000000011537af83:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@8 (line 3821)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537af88:   jmp    0x000000011537ab90
  0x000000011537af8d:   mov    rdx,rdx
  0x000000011537af90:   call   0x000000011c9bca00           ; ImmutableOopMap {[144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOfRange@12 (line 3821)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537af95:   jmp    0x000000011537abe8
  0x000000011537af9a:   movabs r10,0x12b0609c0              ;   {metadata({method} {0x000000012b0609c0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537afa4:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537afa9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537afb1:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 106)
                                                            ; - java.util.Arrays::copyOfRange@16 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537afb6:   jmp    0x000000011537ac25
  0x000000011537afbb:   movabs r10,0x12b060548              ;   {metadata({method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537afc5:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537afca:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537afd2:   call   0x000000011c9c1480           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@20 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537afd7:   jmp    0x000000011537ac96
  0x000000011537afdc:   movabs r10,0x12b0607b0              ;   {metadata({method} {0x000000012b0607b0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537afe6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537afeb:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537aff3:   call   0x000000011c9c1480           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.util.Arrays::copyOfRange@26 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537aff8:   jmp    0x000000011537ad06
  0x000000011537affd:   movabs r10,0x12b060548              ;   {metadata({method} {0x000000012b060548} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537b007:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537b00c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537b014:   call   0x000000011c9c1480           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 253)
                                                            ; - java.util.Arrays::copyOfRange@30 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537b019:   jmp    0x000000011537ad7e
  0x000000011537b01e:   movabs r10,0x12ac08ce8              ;   {metadata({method} {0x000000012ac08ce8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011537b028:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537b02d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537b035:   call   0x000000011c9c1480           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::toString@-1 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537b03a:   jmp    0x000000011537adee
  0x000000011537b03f:   mov    rdx,rdx
  0x000000011537b042:   call   0x000000011c9bca00           ; ImmutableOopMap {[128]=Oop [144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@0 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537b047:   jmp    0x000000011537ae3e
  0x000000011537b04c:   movabs r10,0x12b054be0              ;   {metadata({method} {0x000000012b054be0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/StringBuilder;)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011537b056:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537b05b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537b063:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [128]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::&lt;init&gt;@-1 (line 1487)
                                                            ; - java.lang.StringBuilder::toString@5 (line 453)
                                                            ; - java.util.Arrays::copyOfRange@33 (line 3821)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537b068:   jmp    0x000000011537ae7b
  0x000000011537b06d:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537b074:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537b07f:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537b08a:   add    rsp,0xb0
  0x000000011537b091:   pop    rbp
  0x000000011537b092:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537b097:   hlt    
[Stub Code]
  0x000000011537b098:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011537b09d:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b0a7:   jmp    0x000000011537b0a7           ;   {runtime_call}
  0x000000011537b0ac:   nop
  0x000000011537b0ad:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b0b7:   jmp    0x000000011537b0b7           ;   {runtime_call}
  0x000000011537b0bc:   nop
  0x000000011537b0bd:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b0c7:   jmp    0x000000011537b0c7           ;   {runtime_call}
  0x000000011537b0cc:   nop
  0x000000011537b0cd:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b0d7:   jmp    0x000000011537b0d7           ;   {runtime_call}
[Exception Handler]
  0x000000011537b0dc:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011537b0e1:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537b0eb:   and    rsp,0xfffffffffffffff0
  0x000000011537b0ef:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537b0f4:   hlt    
[Deopt Handler Code]
  0x000000011537b0f5:   movabs r10,0x11537b0f5              ;   {section_word}
  0x000000011537b0ff:   push   r10
  0x000000011537b101:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537b106:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b110:   jmp    0x000000011537b110           ;   {runtime_call}
  0x000000011537b115:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b11f:   jmp    0x000000011537b11f           ;   {runtime_call}
  0x000000011537b124:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537b12e:   jmp    0x000000011537b12e           ;   {runtime_call}
  0x000000011537b133:   hlt    
  0x000000011537b134:   hlt    
  0x000000011537b135:   hlt    
  0x000000011537b136:   hlt    
  0x000000011537b137:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='120' compile_kind='osr' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='120832' iicount='1' osr_bci='15' level='3' stamp='1.460' comment='tiered' hot_count='120832'/>
<writer thread='23555'/>
<nmethod compile_id='120' compile_kind='osr' compiler='c1' level='3' entry='0x000000011537b880' size='3304' address='0x000000011537b690' relocation_offset='328' insts_offset='496' stub_offset='2232' scopes_data_offset='2368' scopes_pcs_offset='2704' dependencies_offset='3248' nul_chk_table_offset='3264' oops_offset='2312' metadata_offset='2320' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='129597' iicount='1' stamp='1.460'/>
<print_nmethod compile_id='120' compile_kind='osr' compiler='c1' level='3' stamp='1.460'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1459  120 %     3       foo.rida.SimpleBenchmark::generateGetterWrappers @ 15 (50 bytes)
 total in heap  [0x000000011537b690,0x000000011537c378] = 3304
 relocation     [0x000000011537b7d8,0x000000011537b870] = 152
 main code      [0x000000011537b880,0x000000011537bf48] = 1736
 stub code      [0x000000011537bf48,0x000000011537bf98] = 80
 oops           [0x000000011537bf98,0x000000011537bfa0] = 8
 metadata       [0x000000011537bfa0,0x000000011537bfd0] = 48
 scopes data    [0x000000011537bfd0,0x000000011537c120] = 336
 scopes pcs     [0x000000011537c120,0x000000011537c340] = 544
 dependencies   [0x000000011537c340,0x000000011537c350] = 16
 nul chk table  [0x000000011537c350,0x000000011537c378] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011537b880:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537b887:   push   rbp
  0x000000011537b888:   sub    rsp,0x90
  0x000000011537b88f:   nop
  0x000000011537b890:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011537b898:   je     0x000000011537b89f
  0x000000011537b89a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537b89f:   movabs rbx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537b8a9:   mov    edx,DWORD PTR [rbx+0xac]
  0x000000011537b8af:   add    edx,0x2
  0x000000011537b8b2:   mov    DWORD PTR [rbx+0xac],edx
  0x000000011537b8b8:   and    edx,0x7fe
  0x000000011537b8be:   cmp    edx,0x0
  0x000000011537b8c1:   je     0x000000011537bdd7           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@0 (line 47)
  0x000000011537b8c7:   mov    rbx,rsi
  0x000000011537b8ca:   movabs rdx,0x12bc01000              ;   {metadata(&apos;foo/rida/GetterWrapper&apos;[])}
  0x000000011537b8d4:   mov    DWORD PTR [rsp+0x50],esi
  0x000000011537b8d8:   movsxd rbx,ebx
  0x000000011537b8db:   mov    rdi,rbx
  0x000000011537b8de:   cmp    rbx,0xffffff
  0x000000011537b8e5:   ja     0x000000011537bdf8
  0x000000011537b8eb:   movabs rsi,0x17
  0x000000011537b8f5:   lea    rsi,[rsi+rbx*4]
  0x000000011537b8f9:   and    rsi,0xfffffffffffffff8
  0x000000011537b8fd:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537b904:   lea    rsi,[rax+rsi*1]
  0x000000011537b908:   cmp    rsi,QWORD PTR [r15+0x108]
  0x000000011537b90f:   ja     0x000000011537bdf8
  0x000000011537b915:   mov    QWORD PTR [r15+0xf8],rsi
  0x000000011537b91c:   sub    rsi,rax
  0x000000011537b91f:   mov    QWORD PTR [rax],0x1
  0x000000011537b926:   mov    rcx,rdx
  0x000000011537b929:   movabs r10,0x12ac00000
  0x000000011537b933:   sub    rcx,r10
  0x000000011537b936:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537b939:   mov    DWORD PTR [rax+0xc],ebx
  0x000000011537b93c:   sub    rsi,0x10
  0x000000011537b940:   test   rsi,rsi
  0x000000011537b943:   je     0x000000011537b95a
  0x000000011537b949:   xor    rbx,rbx
  0x000000011537b94c:   shr    rsi,0x3
  0x000000011537b950:   mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x000000011537b955:   dec    rsi
  0x000000011537b958:   jne    0x000000011537b950           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011537b95a:   movabs rdx,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011537b964:   mov    QWORD PTR [rsp+0x48],rax
  0x000000011537b969:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537b970:   lea    rdi,[rax+0x20]
  0x000000011537b974:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537b97b:   ja     0x000000011537be02
  0x000000011537b981:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537b988:   mov    QWORD PTR [rax],0x1
  0x000000011537b98f:   mov    rcx,rdx
  0x000000011537b992:   movabs r10,0x12ac00000
  0x000000011537b99c:   sub    rcx,r10
  0x000000011537b99f:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537b9a2:   xor    rcx,rcx
  0x000000011537b9a5:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537b9a8:   xor    rcx,rcx
  0x000000011537b9ab:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011537b9af:   mov    QWORD PTR [rax+0x18],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@5 (line 48)
  0x000000011537b9b3:   mov    rsi,rax
  0x000000011537b9b6:   movabs rdi,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537b9c0:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537b9c8:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011537b9cb:   mov    QWORD PTR [rsp+0x40],rax
  0x000000011537b9d0:   nop    DWORD PTR [rax+0x0]
  0x000000011537b9d7:   call   0x000000011c900600           ; ImmutableOopMap {[64]=Oop [72]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
                                                            ;   {optimized virtual_call}
  0x000000011537b9dc:   mov    rax,QWORD PTR [rsp+0x40]
  0x000000011537b9e1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x000000011537b9e6:   mov    esi,DWORD PTR [rsp+0x50]
  0x000000011537b9ea:   mov    ebx,0x0
  0x000000011537b9ef:   mov    QWORD PTR [rsp+0x70],rdi
  0x000000011537b9f4:   jmp    0x000000011537bcf0           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@15 (line 49)
  0x000000011537b9f9:   nop    DWORD PTR [rax+0x0]
  0x000000011537ba00:   mov    DWORD PTR [rsp+0x6c],ebx
  0x000000011537ba04:   mov    DWORD PTR [rsp+0x78],esi
  0x000000011537ba08:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011537be0f
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011537ba0b:   mov    rdx,rax
  0x000000011537ba0e:   movabs rcx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537ba18:   add    QWORD PTR [rcx+0x138],0x1
  0x000000011537ba20:   movabs rdx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537ba2a:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011537ba30:   add    ecx,0x2
  0x000000011537ba33:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011537ba39:   and    ecx,0x1ffffe
  0x000000011537ba3f:   cmp    ecx,0x0
  0x000000011537ba42:   je     0x000000011537be14
  0x000000011537ba48:   mov    rdx,rax
  0x000000011537ba4b:   movabs rcx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537ba55:   add    QWORD PTR [rcx+0x108],0x1
  0x000000011537ba5d:   mov    edx,0x20
  0x000000011537ba62:   mov    rsi,rax                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011537ba65:   mov    QWORD PTR [rsp+0x80],rax
  0x000000011537ba6d:   xchg   ax,ax
  0x000000011537ba6f:   call   0x000000011ce302a0           ; ImmutableOopMap {[112]=Oop [128]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {optimized virtual_call}
  0x000000011537ba74:   mov    rbx,rax                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011537ba77:   movabs rdx,0x12bc005e8              ;   {metadata(&apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537ba81:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537ba88:   lea    rdi,[rax+0x10]
  0x000000011537ba8c:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537ba93:   ja     0x000000011537be35
  0x000000011537ba99:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537baa0:   mov    QWORD PTR [rax],0x1
  0x000000011537baa7:   mov    rcx,rdx
  0x000000011537baaa:   movabs r10,0x12ac00000
  0x000000011537bab4:   sub    rcx,r10
  0x000000011537bab7:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537baba:   xor    rcx,rcx
  0x000000011537babd:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537bac0:   xor    rcx,rcx                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
  0x000000011537bac3:   mov    rsi,rax
  0x000000011537bac6:   movabs rdi,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bad0:   add    QWORD PTR [rdi+0x158],0x1
  0x000000011537bad8:   movabs rsi,0x16c0023c0              ;   {metadata(method data for {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537bae2:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011537bae8:   add    edi,0x2
  0x000000011537baeb:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011537baf1:   and    edi,0x1ffffe
  0x000000011537baf7:   cmp    edi,0x0
  0x000000011537bafa:   je     0x000000011537be42
  0x000000011537bb00:   mov    rsi,rax
  0x000000011537bb03:   movabs rdi,0x16c0023c0              ;   {metadata(method data for {method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537bb0d:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537bb15:   movabs rsi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537bb1f:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011537bb25:   add    edi,0x2
  0x000000011537bb28:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011537bb2e:   and    edi,0x1ffffe
  0x000000011537bb34:   cmp    edi,0x0
  0x000000011537bb37:   je     0x000000011537be63
  0x000000011537bb3d:   mov    DWORD PTR [rax+0xc],ebx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@6 (line 7)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@32 (line 51)
  0x000000011537bb40:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x000000011537bb44:   mov    rdi,QWORD PTR [rsp+0x70]
  0x000000011537bb49:   cmp    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011537be84
  0x000000011537bb4c:   jae    0x000000011537be8e
  0x000000011537bb52:   cmp    rax,0x0
  0x000000011537bb56:   jne    0x000000011537bb6e
  0x000000011537bb58:   movabs rdx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bb62:   or     BYTE PTR [rdx+0x161],0x1
  0x000000011537bb69:   jmp    0x000000011537bc67
  0x000000011537bb6e:   mov    esi,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x000000011537be9c
  0x000000011537bb71:   movabs r10,0x12ac00000
  0x000000011537bb7b:   add    rsi,r10
  0x000000011537bb7e:   mov    edx,DWORD PTR [rax+0x8]
  0x000000011537bb81:   movabs r10,0x12ac00000
  0x000000011537bb8b:   add    rdx,r10
  0x000000011537bb8e:   mov    rsi,QWORD PTR [rsi+0xd0]
  0x000000011537bb95:   cmp    rdx,rsi
  0x000000011537bb98:   je     0x000000011537bbc6
  0x000000011537bb9e:   mov    ecx,DWORD PTR [rsi+0x14]
  0x000000011537bba1:   cmp    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011537bba5:   je     0x000000011537bbc6
  0x000000011537bbab:   cmp    ecx,0x20
  0x000000011537bbae:   jne    0x000000011537bc50
  0x000000011537bbb4:   push   rdx
  0x000000011537bbb5:   push   rsi
  0x000000011537bbb6:   call   0x000000011c9bef80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011537bbbb:   pop    rdx
  0x000000011537bbbc:   pop    rsi
  0x000000011537bbbd:   cmp    esi,0x0
  0x000000011537bbc0:   je     0x000000011537bc50
  0x000000011537bbc6:   movabs rdx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bbd0:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011537bbd3:   movabs r10,0x12ac00000
  0x000000011537bbdd:   add    rsi,r10
  0x000000011537bbe0:   cmp    rsi,QWORD PTR [rdx+0x178]
  0x000000011537bbe7:   jne    0x000000011537bbf6
  0x000000011537bbe9:   add    QWORD PTR [rdx+0x180],0x1
  0x000000011537bbf1:   jmp    0x000000011537bc67
  0x000000011537bbf6:   cmp    rsi,QWORD PTR [rdx+0x188]
  0x000000011537bbfd:   jne    0x000000011537bc0c
  0x000000011537bbff:   add    QWORD PTR [rdx+0x190],0x1
  0x000000011537bc07:   jmp    0x000000011537bc67
  0x000000011537bc0c:   cmp    QWORD PTR [rdx+0x178],0x0
  0x000000011537bc14:   jne    0x000000011537bc2d
  0x000000011537bc16:   mov    QWORD PTR [rdx+0x178],rsi
  0x000000011537bc1d:   mov    QWORD PTR [rdx+0x180],0x1
  0x000000011537bc28:   jmp    0x000000011537bc67
  0x000000011537bc2d:   cmp    QWORD PTR [rdx+0x188],0x0
  0x000000011537bc35:   jne    0x000000011537bc4e
  0x000000011537bc37:   mov    QWORD PTR [rdx+0x188],rsi
  0x000000011537bc3e:   mov    QWORD PTR [rdx+0x190],0x1
  0x000000011537bc49:   jmp    0x000000011537bc67
  0x000000011537bc4e:   jmp    0x000000011537bc67
  0x000000011537bc50:   movabs rdx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bc5a:   sub    QWORD PTR [rdx+0x168],0x1
  0x000000011537bc62:   jmp    0x000000011537bea1
  0x000000011537bc67:   movsxd rsi,ebx
  0x000000011537bc6a:   lea    rsi,[rdi+rsi*4+0x10]
  0x000000011537bc6f:   movsx  edx,BYTE PTR [r15+0x40]
  0x000000011537bc74:   cmp    edx,0x0
  0x000000011537bc77:   jne    0x000000011537beaa
  0x000000011537bc7d:   mov    r10,rax
  0x000000011537bc80:   shr    r10,0x3
  0x000000011537bc84:   mov    DWORD PTR [rsi],r10d
  0x000000011537bc87:   mov    rdx,rsi
  0x000000011537bc8a:   xor    rdx,rax
  0x000000011537bc8d:   shr    rdx,0x15
  0x000000011537bc91:   cmp    rdx,0x0
  0x000000011537bc95:   jne    0x000000011537bec8           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011537bc9b:   inc    ebx
  0x000000011537bc9d:   movabs rax,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bca7:   mov    esi,DWORD PTR [rax+0xb0]
  0x000000011537bcad:   add    esi,0x2
  0x000000011537bcb0:   mov    DWORD PTR [rax+0xb0],esi
  0x000000011537bcb6:   and    esi,0x3ffe
  0x000000011537bcbc:   cmp    esi,0x0
  0x000000011537bcbf:   je     0x000000011537bee0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
  0x000000011537bcc5:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdi=Oop [128]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
  0x000000011537bccc:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011537bccf:   movabs rax,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bcd9:   inc    DWORD PTR [rax+0x1a0]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
  0x000000011537bcdf:   mov    rax,QWORD PTR [rsp+0x80]
  0x000000011537bce7:   mov    QWORD PTR [rsp+0x70],rdi
  0x000000011537bcec:   mov    esi,DWORD PTR [rsp+0x78]
  0x000000011537bcf0:   cmp    ebx,esi
  0x000000011537bcf2:   movabs rdx,0x16c0024f8              ;   {metadata(method data for {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bcfc:   movabs rcx,0x110
  0x000000011537bd06:   jl     0x000000011537bd16
  0x000000011537bd0c:   movabs rcx,0x100
  0x000000011537bd16:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011537bd1a:   lea    r8,[r8+0x1]
  0x000000011537bd1e:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011537bd22:   jl     0x000000011537ba00           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011537bd28:   mov    rdi,QWORD PTR [rsp+0x70]
  0x000000011537bd2d:   mov    rax,rdi
  0x000000011537bd30:   add    rsp,0x90
  0x000000011537bd37:   pop    rbp
  0x000000011537bd38:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537bd3f:   ja     0x000000011537bf01
  0x000000011537bd45:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@49 (line 54)
  0x000000011537bd46:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537bd4d:   push   rbp
  0x000000011537bd4e:   sub    rsp,0x90
  0x000000011537bd55:   data16 xchg ax,ax
  0x000000011537bd58:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537bd60:   je     0x000000011537bd67
  0x000000011537bd62:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537bd67:   mov    edi,0x28
  0x000000011537bd6c:   movsxd rdi,edi
  0x000000011537bd6f:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x000000011537bd72:   mov    edi,0x20
  0x000000011537bd77:   movsxd rdi,edi
  0x000000011537bd7a:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x000000011537bd7e:   mov    edi,0x18
  0x000000011537bd83:   movsxd rdi,edi
  0x000000011537bd86:   mov    rdx,QWORD PTR [rsi+rdi*1]
  0x000000011537bd8a:   mov    edi,0x10
  0x000000011537bd8f:   movsxd rdi,edi
  0x000000011537bd92:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x000000011537bd95:   mov    rdi,rsi
  0x000000011537bd98:   mov    DWORD PTR [rsp+0x68],ebx
  0x000000011537bd9c:   mov    QWORD PTR [rsp+0x60],rax
  0x000000011537bda1:   mov    QWORD PTR [rsp+0x58],rdx
  0x000000011537bda6:   mov    DWORD PTR [rsp+0x54],ecx
  0x000000011537bdaa:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011537bdaf:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011537bdb3:   mov    rbx,rcx
  0x000000011537bdb6:   mov    rdx,QWORD PTR [rsp+0x58]
  0x000000011537bdbb:   mov    rax,rdx
  0x000000011537bdbe:   mov    rdx,QWORD PTR [rsp+0x60]
  0x000000011537bdc3:   mov    rdi,rdx
  0x000000011537bdc6:   mov    edx,DWORD PTR [rsp+0x68]
  0x000000011537bdca:   mov    rsi,rdx
  0x000000011537bdcd:   mov    QWORD PTR [rsp+0x70],rdi
  0x000000011537bdd2:   jmp    0x000000011537bcf0
  0x000000011537bdd7:   movabs r10,0x16c000b28              ;   {metadata({method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537bde1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537bde6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537bdee:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@-1 (line 47)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537bdf3:   jmp    0x000000011537b8c7
  0x000000011537bdf8:   call   0x000000011c9bd300           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
                                                            ;   {runtime_call new_object_array Runtime1 stub}
  0x000000011537bdfd:   jmp    0x000000011537b95a
  0x000000011537be02:   mov    rdx,rdx
  0x000000011537be05:   call   0x000000011c9bca00           ; ImmutableOopMap {[72]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@5 (line 48)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537be0a:   jmp    0x000000011537b9b3
  0x000000011537be0f:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [112]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537be14:   movabs r10,0x12ad8a378              ;   {metadata({method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537be1e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537be23:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537be2b:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537be30:   jmp    0x000000011537ba48
  0x000000011537be35:   mov    rdx,rdx
  0x000000011537be38:   call   0x000000011c9bca00           ; ImmutableOopMap {[112]=Oop [128]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537be3d:   jmp    0x000000011537bac3
  0x000000011537be42:   movabs r10,0x16c001c30              ;   {metadata({method} {0x000000016c001c30} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/GetterWrapper&apos;)}
  0x000000011537be4c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537be51:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537be59:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@32 (line 51)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537be5e:   jmp    0x000000011537bb00
  0x000000011537be63:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537be6d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537be72:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537be7a:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [112]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@32 (line 51)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537be7f:   jmp    0x000000011537bb3d
  0x000000011537be84:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537be89:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537be8e:   mov    QWORD PTR [rsp],rbx
  0x000000011537be92:   mov    QWORD PTR [rsp+0x8],rdi
  0x000000011537be97:   call   0x000000011c9bb800           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011537be9c:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537bea1:   mov    QWORD PTR [rsp],rax
  0x000000011537bea5:   call   0x000000011c9be200           ; ImmutableOopMap {rax=Oop rdi=Oop [128]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011537beaa:   mov    edx,DWORD PTR [rsi]
  0x000000011537beac:   shl    rdx,0x3
  0x000000011537beb0:   cmp    rdx,0x0
  0x000000011537beb4:   je     0x000000011537bc7d
  0x000000011537beba:   mov    QWORD PTR [rsp],rdx
  0x000000011537bebe:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x000000011537bec3:   jmp    0x000000011537bc7d
  0x000000011537bec8:   cmp    rax,0x0
  0x000000011537becc:   je     0x000000011537bc9b
  0x000000011537bed2:   mov    QWORD PTR [rsp],rsi
  0x000000011537bed6:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x000000011537bedb:   jmp    0x000000011537bc9b
  0x000000011537bee0:   movabs r10,0x16c000b28              ;   {metadata({method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537beea:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537beef:   mov    QWORD PTR [rsp],0x2d
  0x000000011537bef7:   call   0x000000011c9c1480           ; ImmutableOopMap {rdi=Oop [128]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537befc:   jmp    0x000000011537bcc5
  0x000000011537bf01:   movabs r10,0x11537bd38              ;   {internal_word}
  0x000000011537bf0b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537bf12:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537bf17:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537bf1e:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537bf29:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537bf34:   add    rsp,0x90
  0x000000011537bf3b:   pop    rbp
  0x000000011537bf3c:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537bf41:   hlt    
  0x000000011537bf42:   hlt    
  0x000000011537bf43:   hlt    
  0x000000011537bf44:   hlt    
  0x000000011537bf45:   hlt    
  0x000000011537bf46:   hlt    
  0x000000011537bf47:   hlt    
[Stub Code]
  0x000000011537bf48:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011537bf4d:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537bf57:   jmp    0x000000011537bf57           ;   {runtime_call}
[Exception Handler]
  0x000000011537bf5c:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011537bf61:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537bf6b:   and    rsp,0xfffffffffffffff0
  0x000000011537bf6f:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537bf74:   hlt    
[Deopt Handler Code]
  0x000000011537bf75:   movabs r10,0x11537bf75              ;   {section_word}
  0x000000011537bf7f:   push   r10
  0x000000011537bf81:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537bf86:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537bf90:   jmp    0x000000011537bf90           ;   {runtime_call}
  0x000000011537bf95:   hlt    
  0x000000011537bf96:   hlt    
  0x000000011537bf97:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='121' compile_kind='osr' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1103872' iicount='1' osr_bci='15' stamp='1.479' comment='tiered' hot_count='1103872'/>
<writer thread='23555'/>
<nmethod compile_id='117' compiler='c1' level='3' entry='0x000000011537c520' size='1312' address='0x000000011537c390' relocation_offset='328' insts_offset='400' stub_offset='816' scopes_data_offset='896' scopes_pcs_offset='1000' dependencies_offset='1272' nul_chk_table_offset='1280' metadata_offset='880' method='jdk.internal.org.objectweb.asm.ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='518' iicount='518' stamp='1.479'/>
<print_nmethod compile_id='117' compiler='c1' level='3' stamp='1.479'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1479  117       3       jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)
 total in heap  [0x000000011537c390,0x000000011537c8b0] = 1312
 relocation     [0x000000011537c4d8,0x000000011537c520] = 72
 main code      [0x000000011537c520,0x000000011537c6c0] = 416
 stub code      [0x000000011537c6c0,0x000000011537c700] = 64
 metadata       [0x000000011537c700,0x000000011537c710] = 16
 scopes data    [0x000000011537c710,0x000000011537c778] = 104
 scopes pcs     [0x000000011537c778,0x000000011537c888] = 272
 dependencies   [0x000000011537c888,0x000000011537c890] = 8
 nul chk table  [0x000000011537c890,0x000000011537c8b0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012af6d640} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011537c520:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011537c524:   movabs r11,0x12ac00000
  0x000000011537c52e:   add    r10,r11
  0x000000011537c531:   cmp    r10,rax
  0x000000011537c534:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537c53a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011537c540:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537c547:   push   rbp
  0x000000011537c548:   sub    rsp,0x40
  0x000000011537c54c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537c554:   je     0x000000011537c55b
  0x000000011537c556:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537c55b:   movabs rdi,0x16bc22998              ;   {metadata(method data for {method} {0x000000012af6d640} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011537c565:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537c56b:   add    ebx,0x2
  0x000000011537c56e:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011537c574:   and    ebx,0x7fe
  0x000000011537c57a:   cmp    ebx,0x0
  0x000000011537c57d:   je     0x000000011537c645           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@0 (line 116)
  0x000000011537c583:   mov    edi,DWORD PTR [rsi+0xc]      ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@1 (line 116)
  0x000000011537c586:   mov    rbx,rdi
  0x000000011537c589:   inc    ebx
  0x000000011537c58b:   mov    eax,DWORD PTR [rsi+0x10]
  0x000000011537c58e:   shl    rax,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@9 (line 117)
  0x000000011537c592:   mov    eax,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x000000011537c666
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 117)
  0x000000011537c595:   cmp    ebx,eax
  0x000000011537c597:   movabs rax,0x16bc22998              ;   {metadata(method data for {method} {0x000000012af6d640} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011537c5a1:   movabs rcx,0xf0
  0x000000011537c5ab:   jle    0x000000011537c5bb
  0x000000011537c5b1:   movabs rcx,0x100
  0x000000011537c5bb:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011537c5bf:   lea    r8,[r8+0x1]
  0x000000011537c5c3:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011537c5c7:   jle    0x000000011537c615           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@13 (line 117)
  0x000000011537c5cd:   mov    DWORD PTR [rsp+0x30],ebx
  0x000000011537c5d1:   mov    DWORD PTR [rsp+0x2c],edi
  0x000000011537c5d5:   mov    DWORD PTR [rsp+0x28],edx
  0x000000011537c5d9:   mov    rax,rsi
  0x000000011537c5dc:   movabs rcx,0x16bc22998              ;   {metadata(method data for {method} {0x000000012af6d640} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011537c5e6:   add    QWORD PTR [rcx+0x110],0x1
  0x000000011537c5ee:   mov    edx,0x1
  0x000000011537c5f3:   mov    rcx,rsi
  0x000000011537c5f6:   mov    rsi,rcx                      ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 118)
  0x000000011537c5f9:   mov    QWORD PTR [rsp+0x20],rcx
  0x000000011537c5fe:   nop
  0x000000011537c5ff:   call   0x000000011c900600           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 118)
                                                            ;   {optimized virtual_call}
  0x000000011537c604:   mov    ebx,DWORD PTR [rsp+0x30]
  0x000000011537c608:   mov    edi,DWORD PTR [rsp+0x2c]
  0x000000011537c60c:   mov    edx,DWORD PTR [rsp+0x28]
  0x000000011537c610:   mov    rsi,QWORD PTR [rsp+0x20]
  0x000000011537c615:   mov    eax,DWORD PTR [rsi+0x10]
  0x000000011537c618:   shl    rax,0x3                      ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@22 (line 120)
  0x000000011537c61c:   cmp    edi,DWORD PTR [rax+0xc]      ; implicit exception: dispatches to 0x000000011537c66b
  0x000000011537c61f:   jae    0x000000011537c675
  0x000000011537c625:   movsxd rdi,edi
  0x000000011537c628:   mov    BYTE PTR [rax+rdi*1+0x10],dl ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 120)
  0x000000011537c62c:   mov    DWORD PTR [rsi+0xc],ebx      ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@34 (line 121)
  0x000000011537c62f:   mov    rax,rsi
  0x000000011537c632:   add    rsp,0x40
  0x000000011537c636:   pop    rbp
  0x000000011537c637:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537c63e:   ja     0x000000011537c683
  0x000000011537c644:   ret    
  0x000000011537c645:   movabs r10,0x12af6d640              ;   {metadata({method} {0x000000012af6d640} &apos;putByte&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011537c64f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537c654:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537c65c:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@-1 (line 116)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537c661:   jmp    0x000000011537c583
  0x000000011537c666:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 117)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537c66b:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 120)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537c670:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 120)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537c675:   mov    QWORD PTR [rsp],rdi
  0x000000011537c679:   mov    QWORD PTR [rsp+0x8],rax
  0x000000011537c67e:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 120)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011537c683:   movabs r10,0x11537c637              ;   {internal_word}
  0x000000011537c68d:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537c694:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537c699:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537c6a0:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537c6ab:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537c6b6:   add    rsp,0x40
  0x000000011537c6ba:   pop    rbp
  0x000000011537c6bb:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x000000011537c6c0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537c6c5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537c6cf:   and    rsp,0xfffffffffffffff0
  0x000000011537c6d3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537c6d8:   hlt    
[Deopt Handler Code]
  0x000000011537c6d9:   movabs r10,0x11537c6d9              ;   {section_word}
  0x000000011537c6e3:   push   r10
  0x000000011537c6e5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537c6ea:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537c6f4:   jmp    0x000000011537c6f4           ;   {runtime_call}
  0x000000011537c6f9:   hlt    
  0x000000011537c6fa:   hlt    
  0x000000011537c6fb:   hlt    
  0x000000011537c6fc:   hlt    
  0x000000011537c6fd:   hlt    
  0x000000011537c6fe:   hlt    
  0x000000011537c6ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='121' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce3d120' size='2320' address='0x000000011ce3cf90' relocation_offset='328' insts_offset='400' stub_offset='1280' scopes_data_offset='1376' scopes_pcs_offset='1704' dependencies_offset='2248' handler_table_offset='2264' nul_chk_table_offset='2288' oops_offset='1304' metadata_offset='1312' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1450483' iicount='1' stamp='1.486'/>
<make_not_entrant thread='30467' compile_id='120' compile_kind='osr' compiler='c1' level='3' stamp='1.486'/>
<print_nmethod compile_id='121' compile_kind='osr' compiler='c2' level='4' stamp='1.486'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1485  121 %     4       foo.rida.SimpleBenchmark::generateGetterWrappers @ 15 (50 bytes)
 total in heap  [0x000000011ce3cf90,0x000000011ce3d8a0] = 2320
 relocation     [0x000000011ce3d0d8,0x000000011ce3d108] = 48
 main code      [0x000000011ce3d120,0x000000011ce3d490] = 880
 stub code      [0x000000011ce3d490,0x000000011ce3d4a8] = 24
 oops           [0x000000011ce3d4a8,0x000000011ce3d4b0] = 8
 metadata       [0x000000011ce3d4b0,0x000000011ce3d4f0] = 64
 scopes data    [0x000000011ce3d4f0,0x000000011ce3d638] = 328
 scopes pcs     [0x000000011ce3d638,0x000000011ce3d858] = 544
 dependencies   [0x000000011ce3d858,0x000000011ce3d868] = 16
 handler table  [0x000000011ce3d868,0x000000011ce3d880] = 24
 nul chk table  [0x000000011ce3d880,0x000000011ce3d8a0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce3d120:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce3d125:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce3d130:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3d137:   push   rbp
  0x000000011ce3d138:   sub    rsp,0x40
  0x000000011ce3d13c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3d144:   jne    0x000000011ce3d480
  0x000000011ce3d14a:   mov    rbp,QWORD PTR [rsi+0x20]
  0x000000011ce3d14e:   mov    r14,QWORD PTR [rsi+0x18]
  0x000000011ce3d152:   mov    ebx,DWORD PTR [rsi+0x10]
  0x000000011ce3d155:   mov    r13d,DWORD PTR [rsi+0x28]
  0x000000011ce3d159:   mov    rdi,rsi
  0x000000011ce3d15c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3d160:   movabs r10,0x10c859500
  0x000000011ce3d16a:   call   r10
  0x000000011ce3d16d:   test   rbp,rbp
  0x000000011ce3d170:   je     0x000000011ce3d428
  0x000000011ce3d176:   mov    r11d,DWORD PTR [rbp+0x8]
  0x000000011ce3d17a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3d180:   cmp    r11d,0x1001000               ;   {metadata(&apos;foo/rida/GetterWrapper&apos;[])}
  0x000000011ce3d187:   jne    0x000000011ce3d430
  0x000000011ce3d18d:   mov    r10,rbp
  0x000000011ce3d190:   mov    r8d,DWORD PTR [r14+0x8]      ; implicit exception: dispatches to 0x000000011ce3d461
  0x000000011ce3d194:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3d19c:   data16 data16 xchg ax,ax
  0x000000011ce3d1a0:   cmp    r8d,0x189ec8                 ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011ce3d1a7:   jne    0x000000011ce3d430           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@15 (line 49)
  0x000000011ce3d1ad:   mov    esi,DWORD PTR [r10+0xc]      ; implicit exception: dispatches to 0x000000011ce3d464
                                                            ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d1b1:   jmp    0x000000011ce3d1ea
  0x000000011ce3d1b3:   mov    DWORD PTR [rsp],esi
  0x000000011ce3d1b6:   mov    rbp,r10
  0x000000011ce3d1b9:   mov    rsi,r15
  0x000000011ce3d1bc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3d1c0:   movabs r10,0x10c3183d0
  0x000000011ce3d1ca:   call   r10
  0x000000011ce3d1cd:   mov    r10,rbp
  0x000000011ce3d1d0:   mov    esi,DWORD PTR [rsp]
  0x000000011ce3d1d3:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3d1dc:   data16 data16 xchg ax,ax            ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d1e0:   mov    r11,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r10=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
  0x000000011ce3d1e7:   test   DWORD PTR [r11],eax          ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@15 (line 49)
                                                            ;   {poll}
  0x000000011ce3d1ea:   cmp    ebx,r13d
  0x000000011ce3d1ed:   jge    0x000000011ce3d3ef           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011ce3d1f3:   mov    r8d,DWORD PTR [r14+0x18]     ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d1f7:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3d200:   mov    rax,QWORD PTR [r12+r8*8+0x10]; implicit exception: dispatches to 0x000000011ce3d448
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d205:   mov    r9,rax
  0x000000011ce3d208:   movabs r11,0x5deece66d
  0x000000011ce3d212:   imul   r9,r11
  0x000000011ce3d216:   add    r9,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d21a:   mov    r11,r9
  0x000000011ce3d21d:   movabs rcx,0xffffffffffff
  0x000000011ce3d227:   and    r11,rcx
  0x000000011ce3d22a:   lock cmpxchg QWORD PTR [r12+r8*8+0x10],r11
  0x000000011ce3d231:   sete   r11b
  0x000000011ce3d235:   movzx  r11d,r11b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d239:   test   r11d,r11d
  0x000000011ce3d23c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3d240:   je     0x000000011ce3d404
  0x000000011ce3d246:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce3d24d:   mov    r11,rax
  0x000000011ce3d250:   add    r11,0x10
  0x000000011ce3d254:   shr    r9,0x10
  0x000000011ce3d258:   mov    ebp,r9d
  0x000000011ce3d25b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3d260:   cmp    r11,QWORD PTR [r15+0x108]
  0x000000011ce3d267:   jae    0x000000011ce3d35f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d26d:   mov    QWORD PTR [r15+0xf8],r11
  0x000000011ce3d274:   prefetchw BYTE PTR [r11+0xc0]
  0x000000011ce3d27c:   mov    QWORD PTR [rax],0x1
  0x000000011ce3d283:   mov    DWORD PTR [rax+0x8],0x10005e8;   {metadata(&apos;foo/rida/GetterWrapper&apos;)}
  0x000000011ce3d28a:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
  0x000000011ce3d28e:   mov    DWORD PTR [rax+0xc],ebp      ;*synchronization entry
                                                            ; - foo.rida.GetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@32 (line 51)
  0x000000011ce3d291:   cmp    ebx,esi
  0x000000011ce3d293:   jae    0x000000011ce3d39f
  0x000000011ce3d299:   lea    rbp,[r10+rbx*4+0x10]         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d29e:   xchg   ax,ax
  0x000000011ce3d2a0:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce3d2a5:   jne    0x000000011ce3d325
  0x000000011ce3d2ab:   mov    r8,rbp                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d2ae:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@42 (line 49)
  0x000000011ce3d2b0:   mov    r11,rax
  0x000000011ce3d2b3:   shr    r11,0x3
  0x000000011ce3d2b7:   mov    DWORD PTR [rbp+0x0],r11d
  0x000000011ce3d2bb:   mov    r11,rax
  0x000000011ce3d2be:   xor    r11,r8
  0x000000011ce3d2c1:   shr    r11,0x15
  0x000000011ce3d2c5:   test   r11,r11
  0x000000011ce3d2c8:   je     0x000000011ce3d1e0
  0x000000011ce3d2ce:   shr    r8,0x9
  0x000000011ce3d2d2:   movabs rdi,0x107e78000
  0x000000011ce3d2dc:   add    rdi,r8
  0x000000011ce3d2df:   nop
  0x000000011ce3d2e0:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce3d2e3:   je     0x000000011ce3d1e0
  0x000000011ce3d2e9:   mov    r11,QWORD PTR [r15+0x48]     ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d2ed:   mov    r8,QWORD PTR [r15+0x58]
  0x000000011ce3d2f1:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce3d2f7:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce3d2fa:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3d300:   je     0x000000011ce3d1e0
  0x000000011ce3d306:   mov    BYTE PTR [rdi],r12b
  0x000000011ce3d309:   test   r11,r11
  0x000000011ce3d30c:   je     0x000000011ce3d1b3
  0x000000011ce3d312:   mov    QWORD PTR [r8+r11*1-0x8],rdi ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d317:   add    r11,0xfffffffffffffff8
  0x000000011ce3d31b:   mov    QWORD PTR [r15+0x48],r11
  0x000000011ce3d31f:   nop
  0x000000011ce3d320:   jmp    0x000000011ce3d1e0
  0x000000011ce3d325:   mov    r8d,DWORD PTR [rbp+0x0]
  0x000000011ce3d329:   test   r8d,r8d
  0x000000011ce3d32c:   je     0x000000011ce3d2ab
  0x000000011ce3d332:   mov    r11,QWORD PTR [r15+0x28]
  0x000000011ce3d336:   mov    rdi,r8
  0x000000011ce3d339:   shl    rdi,0x3
  0x000000011ce3d33d:   data16 xchg ax,ax
  0x000000011ce3d340:   test   r11,r11
  0x000000011ce3d343:   je     0x000000011ce3d3c0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d349:   mov    r8,QWORD PTR [r15+0x38]
  0x000000011ce3d34d:   mov    QWORD PTR [r8+r11*1-0x8],rdi ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d352:   add    r11,0xfffffffffffffff8       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d356:   mov    QWORD PTR [r15+0x28],r11     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d35a:   jmp    0x000000011ce3d2ab
  0x000000011ce3d35f:   mov    DWORD PTR [rsp+0x18],esi
  0x000000011ce3d363:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce3d368:   mov    DWORD PTR [rsp+0xc],r13d
  0x000000011ce3d36d:   mov    DWORD PTR [rsp+0x8],ebx
  0x000000011ce3d371:   mov    QWORD PTR [rsp],r14
  0x000000011ce3d375:   movabs rsi,0x12bc005e8              ;   {metadata(&apos;foo/rida/GetterWrapper&apos;)}
  0x000000011ce3d37f:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce3d384:   mov    r14,QWORD PTR [rsp]
  0x000000011ce3d388:   mov    ebx,DWORD PTR [rsp+0x8]
  0x000000011ce3d38c:   mov    r13d,DWORD PTR [rsp+0xc]
  0x000000011ce3d391:   mov    r10,QWORD PTR [rsp+0x10]
  0x000000011ce3d396:   mov    esi,DWORD PTR [rsp+0x18]
  0x000000011ce3d39a:   jmp    0x000000011ce3d28e
  0x000000011ce3d39f:   mov    esi,0xffffffe4
  0x000000011ce3d3a4:   mov    ebp,r13d
  0x000000011ce3d3a7:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce3d3ac:   mov    QWORD PTR [rsp+0x18],r10
  0x000000011ce3d3b1:   mov    DWORD PTR [rsp+0x14],ebx
  0x000000011ce3d3b5:   mov    QWORD PTR [rsp+0x20],rax
  0x000000011ce3d3ba:   nop
  0x000000011ce3d3bb:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d3c0:   mov    QWORD PTR [rsp+0x10],rax
  0x000000011ce3d3c5:   mov    DWORD PTR [rsp+0x8],esi
  0x000000011ce3d3c9:   mov    QWORD PTR [rsp],r10          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3d3cd:   mov    rsi,r15
  0x000000011ce3d3d0:   movabs r10,0x10c3183a0
  0x000000011ce3d3da:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3d3dd:   mov    r10,QWORD PTR [rsp]
  0x000000011ce3d3e1:   mov    esi,DWORD PTR [rsp+0x8]
  0x000000011ce3d3e5:   mov    rax,QWORD PTR [rsp+0x10]
  0x000000011ce3d3ea:   jmp    0x000000011ce3d2ab           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011ce3d3ef:   mov    esi,0xffffff45
  0x000000011ce3d3f4:   mov    rbp,r10
  0x000000011ce3d3f7:   mov    DWORD PTR [rsp],ebx
  0x000000011ce3d3fa:   mov    DWORD PTR [rsp+0x4],r13d
  0x000000011ce3d3ff:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d404:   mov    esi,0xffffff45
  0x000000011ce3d409:   mov    ebp,r13d
  0x000000011ce3d40c:   mov    QWORD PTR [rsp],r10
  0x000000011ce3d410:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce3d415:   mov    DWORD PTR [rsp+0x10],ebx
  0x000000011ce3d419:   mov    DWORD PTR [rsp+0x14],r8d
  0x000000011ce3d41e:   mov    DWORD PTR [rsp+0x18],r11d
  0x000000011ce3d423:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop [20]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d428:   xor    r10d,r10d
  0x000000011ce3d42b:   jmp    0x000000011ce3d190
  0x000000011ce3d430:   mov    esi,0xffffff8d
  0x000000011ce3d435:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3d439:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce3d43e:   mov    DWORD PTR [rsp+0x4],ebx
  0x000000011ce3d442:   nop
  0x000000011ce3d443:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@15 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d448:   mov    esi,0xfffffff6
  0x000000011ce3d44d:   xchg   ax,ax
  0x000000011ce3d44f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d454:   mov    rsi,rax
  0x000000011ce3d457:   add    rsp,0x40
  0x000000011ce3d45b:   pop    rbp
  0x000000011ce3d45c:   jmp    0x000000011c9c8280           ;   {runtime_call _rethrow_Java}
  0x000000011ce3d461:   xor    r14d,r14d
  0x000000011ce3d464:   mov    esi,0xffffff76
  0x000000011ce3d469:   mov    ebp,r13d
  0x000000011ce3d46c:   mov    QWORD PTR [rsp],r10
  0x000000011ce3d470:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce3d475:   mov    DWORD PTR [rsp+0x10],ebx
  0x000000011ce3d479:   xchg   ax,ax
  0x000000011ce3d47b:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@15 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3d480:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3d485:   jmp    0x000000011ce3d14a
  0x000000011ce3d48a:   hlt    
  0x000000011ce3d48b:   hlt    
  0x000000011ce3d48c:   hlt    
  0x000000011ce3d48d:   hlt    
  0x000000011ce3d48e:   hlt    
  0x000000011ce3d48f:   hlt    
[Exception Handler]
  0x000000011ce3d490:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3d495:   call   0x000000011ce3d49a
  0x000000011ce3d49a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3d49f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3d4a4:   hlt    
  0x000000011ce3d4a5:   hlt    
  0x000000011ce3d4a6:   hlt    
  0x000000011ce3d4a7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x000000011537befc' compile_id='120' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='45' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1456128' iicount='1'/>
</deoptimized>
<task_queued compile_id='122' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1457152' iicount='1' stamp='1.501' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='122' compiler='c2' level='4' entry='0x000000011ce3daa0' size='3648' address='0x000000011ce3d910' relocation_offset='328' insts_offset='400' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2472' dependencies_offset='3512' handler_table_offset='3528' oops_offset='1784' metadata_offset='1800' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1457152' iicount='1' stamp='1.507'/>
<print_nmethod compile_id='122' compiler='c2' level='4' stamp='1.507'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1506  122       4       foo.rida.SimpleBenchmark::generateGetterWrappers (50 bytes)
 total in heap  [0x000000011ce3d910,0x000000011ce3e750] = 3648
 relocation     [0x000000011ce3da58,0x000000011ce3daa0] = 72
 main code      [0x000000011ce3daa0,0x000000011ce3dfe0] = 1344
 stub code      [0x000000011ce3dfe0,0x000000011ce3e008] = 40
 oops           [0x000000011ce3e008,0x000000011ce3e018] = 16
 metadata       [0x000000011ce3e018,0x000000011ce3e078] = 96
 scopes data    [0x000000011ce3e078,0x000000011ce3e2b8] = 576
 scopes pcs     [0x000000011ce3e2b8,0x000000011ce3e6c8] = 1040
 dependencies   [0x000000011ce3e6c8,0x000000011ce3e6d8] = 16
 handler table  [0x000000011ce3e6d8,0x000000011ce3e750] = 120

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000b28} &apos;generateGetterWrappers&apos; &apos;(I)[Lfoo/rida/GetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ce3daa0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3daa7:   push   rbp
  0x000000011ce3daa8:   sub    rsp,0x30
  0x000000011ce3daac:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3dab4:   jne    0x000000011ce3dfd4           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@-1 (line 47)
  0x000000011ce3daba:   mov    ebp,esi
  0x000000011ce3dabc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3dac0:   cmp    esi,0x40000
  0x000000011ce3dac6:   ja     0x000000011ce3df6f
  0x000000011ce3dacc:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011ce3dacf:   cmp    esi,0x40000
  0x000000011ce3dad5:   ja     0x000000011ce3df35           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dadb:   mov    r8,QWORD PTR [r15+0xf8]
  0x000000011ce3dae2:   lea    rcx,[r10*4+0x17]             ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011ce3daea:   mov    r10,rcx
  0x000000011ce3daed:   and    r10,0xfffffffffffffff8
  0x000000011ce3daf1:   mov    r11,r8
  0x000000011ce3daf4:   add    r11,r10
  0x000000011ce3daf7:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3db00:   cmp    r11,QWORD PTR [r15+0x108]
  0x000000011ce3db07:   jae    0x000000011ce3df35           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3db0d:   mov    QWORD PTR [r15+0xf8],r11
  0x000000011ce3db14:   mov    rdi,r8
  0x000000011ce3db17:   add    rdi,0x10
  0x000000011ce3db1b:   mov    QWORD PTR [r8],0x1
  0x000000011ce3db22:   prefetchw BYTE PTR [r11+0xc0]
  0x000000011ce3db2a:   mov    DWORD PTR [r8+0x8],0x1001000 ;   {metadata(&apos;foo/rida/GetterWrapper&apos;[])}
  0x000000011ce3db32:   mov    DWORD PTR [r8+0xc],esi
  0x000000011ce3db36:   prefetchw BYTE PTR [r11+0x100]
  0x000000011ce3db3e:   prefetchw BYTE PTR [r11+0x140]
  0x000000011ce3db46:   prefetchw BYTE PTR [r11+0x180]
  0x000000011ce3db4e:   shr    rcx,0x3
  0x000000011ce3db52:   add    rcx,0xfffffffffffffffe
  0x000000011ce3db56:   xor    rax,rax
  0x000000011ce3db59:   cmp    rcx,0x8
  0x000000011ce3db5d:   jg     0x000000011ce3db6f
  0x000000011ce3db5f:   dec    rcx
  0x000000011ce3db62:   js     0x000000011ce3dbb3
  0x000000011ce3db64:   mov    QWORD PTR [rdi+rcx*8],rax
  0x000000011ce3db68:   dec    rcx
  0x000000011ce3db6b:   jge    0x000000011ce3db64
  0x000000011ce3db6d:   jmp    0x000000011ce3dbb3
  0x000000011ce3db6f:   vpxor  ymm0,ymm0,ymm0
  0x000000011ce3db73:   jmp    0x000000011ce3db85
  0x000000011ce3db78:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce3db7c:   vmovdqu YMMWORD PTR [rdi+0x20],ymm0
  0x000000011ce3db81:   add    rdi,0x40
  0x000000011ce3db85:   sub    rcx,0x8
  0x000000011ce3db89:   jge    0x000000011ce3db78
  0x000000011ce3db8b:   add    rcx,0x4
  0x000000011ce3db8f:   jl     0x000000011ce3db9d
  0x000000011ce3db91:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce3db95:   add    rdi,0x20
  0x000000011ce3db99:   sub    rcx,0x4
  0x000000011ce3db9d:   add    rcx,0x4
  0x000000011ce3dba1:   jle    0x000000011ce3dbb3
  0x000000011ce3dba3:   dec    rcx
  0x000000011ce3dba6:   vmovq  QWORD PTR [rdi],xmm0
  0x000000011ce3dbaa:   add    rdi,0x8
  0x000000011ce3dbae:   dec    rcx
  0x000000011ce3dbb1:   jge    0x000000011ce3dba6           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011ce3dbb3:   mov    QWORD PTR [rsp],r8           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3dbb7:   mov    DWORD PTR [rsp+0x8],ebp
  0x000000011ce3dbbb:   movabs r10,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce3dbc5:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dbc9:   movabs rbp,0x106689d45497fdb5
  0x000000011ce3dbd3:   mov    r10,rdx
  0x000000011ce3dbd6:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dbda:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce3dbdf:   movabs rsi,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce3dbe9:   mov    rcx,r10
  0x000000011ce3dbec:   data16 xchg ax,ax
  0x000000011ce3dbef:   call   0x000000011c900600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
                                                            ;   {optimized virtual_call}
  0x000000011ce3dbf4:   test   eax,eax
  0x000000011ce3dbf6:   je     0x000000011ce3df00           ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dbfc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3dc00:   movabs r10,0x10c7ba940
  0x000000011ce3dc0a:   call   r10                          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dc0d:   mov    r13,QWORD PTR [r15+0xf8]
  0x000000011ce3dc14:   mov    r11,QWORD PTR [rsp+0x10]
  0x000000011ce3dc19:   xor    r11,rax                      ;*lxor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@7 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dc1c:   mov    r10,r13
  0x000000011ce3dc1f:   add    r10,0x18
  0x000000011ce3dc23:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce3dc2a:   jae    0x000000011ce3df50           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dc30:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce3dc37:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce3dc3f:   mov    QWORD PTR [r13+0x0],0x1
  0x000000011ce3dc47:   mov    DWORD PTR [r13+0x8],0x256da0 ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce3dc4f:   mov    DWORD PTR [r13+0xc],r12d
  0x000000011ce3dc53:   mov    QWORD PTR [r13+0x10],r12
  0x000000011ce3dc57:   movabs r10,0x5deece66d
  0x000000011ce3dc61:   xor    r11,r10
  0x000000011ce3dc64:   movabs r10,0xffffffffffff
  0x000000011ce3dc6e:   and    r11,r10
  0x000000011ce3dc71:   mov    QWORD PTR [r13+0x10],r11
  0x000000011ce3dc75:   lock add DWORD PTR [rsp-0x40],0x0   ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dc7b:   mov    r10d,DWORD PTR [rsp+0x8]
  0x000000011ce3dc80:   test   r10d,r10d
  0x000000011ce3dc83:   jle    0x000000011ce3df8c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011ce3dc89:   test   r10d,r10d
  0x000000011ce3dc8c:   je     0x000000011ce3df77
  0x000000011ce3dc92:   lea    r11d,[r10-0x1]
  0x000000011ce3dc96:   cmp    r11d,r10d
  0x000000011ce3dc99:   jae    0x000000011ce3df77
  0x000000011ce3dc9f:   xor    r11d,r11d
  0x000000011ce3dca2:   jmp    0x000000011ce3dcba           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dca4:   mov    rbx,QWORD PTR [r15+0x380]    ; ImmutableOopMap {r8=Oop r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
  0x000000011ce3dcab:   test   DWORD PTR [rbx],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@45 (line 49)
                                                            ;   {poll}
  0x000000011ce3dcad:   cmp    r11d,r10d
  0x000000011ce3dcb0:   jge    0x000000011ce3df9c
  0x000000011ce3dcb6:   mov    QWORD PTR [rsp],r8           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@20 (line 50)
  0x000000011ce3dcba:   mov    r9d,r10d
  0x000000011ce3dcbd:   sub    r9d,r11d
  0x000000011ce3dcc0:   xor    ecx,ecx
  0x000000011ce3dcc2:   cmp    r10d,r11d
  0x000000011ce3dcc5:   cmovl  r9d,ecx
  0x000000011ce3dcc9:   cmp    r9d,0x3e8
  0x000000011ce3dcd0:   mov    ecx,0x3e8
  0x000000011ce3dcd5:   cmova  r9d,ecx
  0x000000011ce3dcd9:   add    r9d,r11d
  0x000000011ce3dcdc:   jmp    0x000000011ce3dd19
  0x000000011ce3dcde:   mov    DWORD PTR [rsp],r9d
  0x000000011ce3dce2:   mov    r14d,r11d
  0x000000011ce3dce5:   mov    ebp,r10d
  0x000000011ce3dce8:   mov    rbx,r8                       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dceb:   mov    rsi,r15
  0x000000011ce3dcee:   movabs r10,0x10c3183d0
  0x000000011ce3dcf8:   call   r10
  0x000000011ce3dcfb:   mov    r8,rbx
  0x000000011ce3dcfe:   mov    r10d,ebp
  0x000000011ce3dd01:   mov    r11d,r14d
  0x000000011ce3dd04:   mov    r9d,DWORD PTR [rsp]
  0x000000011ce3dd08:   nop    DWORD PTR [rax+rax*1+0x0]    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@20 (line 50)
  0x000000011ce3dd10:   cmp    r11d,r9d
  0x000000011ce3dd13:   jge    0x000000011ce3dca4           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011ce3dd15:   mov    QWORD PTR [rsp],r8           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@20 (line 50)
  0x000000011ce3dd19:   mov    rax,QWORD PTR [r13+0x10]     ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3dd1d:   mov    rcx,rax
  0x000000011ce3dd20:   movabs r8,0x5deece66d
  0x000000011ce3dd2a:   imul   rcx,r8
  0x000000011ce3dd2e:   add    rcx,0xb                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3dd32:   mov    r8,rcx
  0x000000011ce3dd35:   movabs rbx,0xffffffffffff
  0x000000011ce3dd3f:   and    r8,rbx
  0x000000011ce3dd42:   lock cmpxchg QWORD PTR [r13+0x10],r8
  0x000000011ce3dd48:   sete   r8b
  0x000000011ce3dd4c:   movzx  r8d,r8b                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
  0x000000011ce3dd50:   test   r8d,r8d
  0x000000011ce3dd53:   je     0x000000011ce3ded7
  0x000000011ce3dd59:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce3dd60:   mov    r8,rax
  0x000000011ce3dd63:   add    r8,0x10
  0x000000011ce3dd67:   shr    rcx,0x10
  0x000000011ce3dd6b:   mov    ebp,ecx
  0x000000011ce3dd6d:   cmp    r8,QWORD PTR [r15+0x108]
  0x000000011ce3dd74:   jae    0x000000011ce3de85           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dd7a:   mov    QWORD PTR [r15+0xf8],r8
  0x000000011ce3dd81:   prefetchw BYTE PTR [r8+0xc0]
  0x000000011ce3dd89:   mov    QWORD PTR [rax],0x1
  0x000000011ce3dd90:   mov    DWORD PTR [rax+0x8],0x10005e8;   {metadata(&apos;foo/rida/GetterWrapper&apos;)}
  0x000000011ce3dd97:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
  0x000000011ce3dd9b:   mov    r8,QWORD PTR [rsp]
  0x000000011ce3dd9f:   lea    rbx,[r8+r11*4+0x10]          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3dda4:   mov    DWORD PTR [rax+0xc],ebp      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dda7:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce3ddac:   jne    0x000000011ce3de25           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3ddb2:   mov    rcx,rax
  0x000000011ce3ddb5:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@42 (line 49)
  0x000000011ce3ddb8:   mov    rdi,rax
  0x000000011ce3ddbb:   shr    rdi,0x3
  0x000000011ce3ddbf:   mov    DWORD PTR [rbx],edi
  0x000000011ce3ddc1:   xor    rcx,rbx
  0x000000011ce3ddc4:   shr    rcx,0x15
  0x000000011ce3ddc8:   test   rcx,rcx
  0x000000011ce3ddcb:   je     0x000000011ce3dd10
  0x000000011ce3ddd1:   shr    rbx,0x9
  0x000000011ce3ddd5:   movabs rdi,0x107e78000
  0x000000011ce3dddf:   add    rdi,rbx
  0x000000011ce3dde2:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce3dde5:   je     0x000000011ce3dd10
  0x000000011ce3ddeb:   mov    rcx,QWORD PTR [r15+0x58]     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3ddef:   mov    rbx,QWORD PTR [r15+0x48]
  0x000000011ce3ddf3:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce3ddf9:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce3ddfc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3de00:   je     0x000000011ce3dd10
  0x000000011ce3de06:   mov    BYTE PTR [rdi],r12b
  0x000000011ce3de09:   test   rbx,rbx
  0x000000011ce3de0c:   je     0x000000011ce3dcde
  0x000000011ce3de12:   mov    QWORD PTR [rcx+rbx*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3de17:   add    rbx,0xfffffffffffffff8       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3de1b:   mov    QWORD PTR [r15+0x48],rbx
  0x000000011ce3de1f:   nop
  0x000000011ce3de20:   jmp    0x000000011ce3dd10
  0x000000011ce3de25:   mov    ecx,DWORD PTR [rbx]
  0x000000011ce3de27:   test   ecx,ecx
  0x000000011ce3de29:   je     0x000000011ce3ddb2           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3de2b:   mov    QWORD PTR [rsp+0x8],rax
  0x000000011ce3de30:   mov    DWORD PTR [rsp+0x4],r9d
  0x000000011ce3de35:   mov    DWORD PTR [rsp],r11d
  0x000000011ce3de39:   mov    r14,r13
  0x000000011ce3de3c:   mov    r13d,r10d
  0x000000011ce3de3f:   mov    rbp,r8
  0x000000011ce3de42:   mov    r10,QWORD PTR [r15+0x28]
  0x000000011ce3de46:   mov    rdi,rcx
  0x000000011ce3de49:   shl    rdi,0x3
  0x000000011ce3de4d:   test   r10,r10
  0x000000011ce3de50:   je     0x000000011ce3dec5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3de56:   mov    r11,QWORD PTR [r15+0x38]
  0x000000011ce3de5a:   mov    QWORD PTR [r11+r10*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3de5f:   add    r10,0xfffffffffffffff8       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3de63:   mov    QWORD PTR [r15+0x28],r10     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3de67:   mov    r8,rbp
  0x000000011ce3de6a:   mov    r10d,r13d
  0x000000011ce3de6d:   mov    r13,r14
  0x000000011ce3de70:   mov    r11d,DWORD PTR [rsp]
  0x000000011ce3de74:   mov    r9d,DWORD PTR [rsp+0x4]
  0x000000011ce3de79:   mov    rax,QWORD PTR [rsp+0x8]
  0x000000011ce3de7e:   xchg   ax,ax
  0x000000011ce3de80:   jmp    0x000000011ce3ddb2
  0x000000011ce3de85:   mov    DWORD PTR [rsp+0x18],r9d
  0x000000011ce3de8a:   mov    DWORD PTR [rsp+0xc],r11d
  0x000000011ce3de8f:   mov    QWORD PTR [rsp+0x10],r13
  0x000000011ce3de94:   mov    DWORD PTR [rsp+0x8],r10d
  0x000000011ce3de99:   movabs rsi,0x12bc005e8              ;   {metadata(&apos;foo/rida/GetterWrapper&apos;)}
  0x000000011ce3dea3:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce3dea8:   mov    r10d,DWORD PTR [rsp+0x8]
  0x000000011ce3dead:   mov    r13,QWORD PTR [rsp+0x10]
  0x000000011ce3deb2:   mov    r11d,DWORD PTR [rsp+0xc]
  0x000000011ce3deb7:   mov    r9d,DWORD PTR [rsp+0x18]
  0x000000011ce3debc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3dec0:   jmp    0x000000011ce3dd9b           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dec5:   mov    rsi,r15
  0x000000011ce3dec8:   movabs r10,0x10c3183a0
  0x000000011ce3ded2:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
  0x000000011ce3ded5:   jmp    0x000000011ce3de67
  0x000000011ce3ded7:   mov    esi,0xffffff45
  0x000000011ce3dedc:   mov    ebp,r10d
  0x000000011ce3dedf:   mov    DWORD PTR [rsp+0x8],r11d
  0x000000011ce3dee4:   mov    DWORD PTR [rsp+0xc],r8d
  0x000000011ce3dee9:   mov    QWORD PTR [rsp+0x18],r13
  0x000000011ce3deee:   nop
  0x000000011ce3deef:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@21 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3def4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3defc:   data16 data16 xchg ax,ax            ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3df00:   movabs r10,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce3df0a:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3df0e:   mov    r10,rdx
  0x000000011ce3df11:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3df15:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce3df1a:   movabs rsi,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce3df24:   mov    rcx,r10
  0x000000011ce3df27:   call   0x000000011c900600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
                                                            ;   {optimized virtual_call}
  0x000000011ce3df2c:   test   eax,eax
  0x000000011ce3df2e:   je     0x000000011ce3df00           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@21 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3df30:   jmp    0x000000011ce3dbfc
  0x000000011ce3df35:   movabs rsi,0x12bc01000              ;   {metadata(&apos;foo/rida/GetterWrapper&apos;[])}
  0x000000011ce3df3f:   mov    edx,ebp
  0x000000011ce3df41:   xchg   ax,ax
  0x000000011ce3df43:   call   0x000000011c9c5600           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
                                                            ;   {runtime_call _new_array_Java}
  0x000000011ce3df48:   mov    r8,rax
  0x000000011ce3df4b:   jmp    0x000000011ce3dbb3
  0x000000011ce3df50:   mov    rbp,r11                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 353)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3df53:   movabs rsi,0x12ae56da0              ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce3df5d:   xchg   ax,ax
  0x000000011ce3df5f:   call   0x000000011c9c7800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Random::&lt;init&gt;@19 (line 355)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce3df64:   mov    r11,rbp
  0x000000011ce3df67:   mov    r13,rax
  0x000000011ce3df6a:   jmp    0x000000011ce3dc57
  0x000000011ce3df6f:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011ce3df72:   jmp    0x000000011ce3dacf           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
  0x000000011ce3df77:   mov    esi,0xffffff76
  0x000000011ce3df7c:   mov    ebp,r10d
  0x000000011ce3df7f:   mov    QWORD PTR [rsp+0x10],r13
  0x000000011ce3df84:   data16 xchg ax,ax
  0x000000011ce3df87:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3df8c:   mov    esi,0xffffff45
  0x000000011ce3df91:   mov    rbp,QWORD PTR [rsp]
  0x000000011ce3df95:   xchg   ax,ax
  0x000000011ce3df97:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3df9c:   mov    esi,0xffffff45
  0x000000011ce3dfa1:   mov    rbp,r8
  0x000000011ce3dfa4:   mov    DWORD PTR [rsp],r11d
  0x000000011ce3dfa8:   mov    DWORD PTR [rsp+0x4],r10d
  0x000000011ce3dfad:   xchg   ax,ax
  0x000000011ce3dfaf:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateGetterWrappers@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3dfb4:   mov    rsi,rax
  0x000000011ce3dfb7:   jmp    0x000000011ce3dfca           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@1 (line 47)
  0x000000011ce3dfb9:   mov    rsi,rax
  0x000000011ce3dfbc:   jmp    0x000000011ce3dfca
  0x000000011ce3dfbe:   xchg   ax,ax
  0x000000011ce3dfc0:   jmp    0x000000011ce3dfc2           ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@9 (line 48)
  0x000000011ce3dfc2:   mov    rsi,rax
  0x000000011ce3dfc5:   jmp    0x000000011ce3dfca           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@26 (line 51)
  0x000000011ce3dfc7:   mov    rsi,rax                      ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@-1 (line 47)
  0x000000011ce3dfca:   add    rsp,0x30
  0x000000011ce3dfce:   pop    rbp
  0x000000011ce3dfcf:   jmp    0x000000011c9c8280           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateGetterWrappers@41 (line 52)
                                                            ;   {runtime_call _rethrow_Java}
  0x000000011ce3dfd4:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3dfd9:   jmp    0x000000011ce3daba
  0x000000011ce3dfde:   hlt    
  0x000000011ce3dfdf:   hlt    
[Exception Handler]
  0x000000011ce3dfe0:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3dfe5:   call   0x000000011ce3dfea
  0x000000011ce3dfea:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3dfef:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3dff4:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ce3dffe:   jmp    0x000000011ce3dffe           ;   {runtime_call}
  0x000000011ce3e003:   hlt    
  0x000000011ce3e004:   hlt    
  0x000000011ce3e005:   hlt    
  0x000000011ce3e006:   hlt    
  0x000000011ce3e007:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='121' compile_kind='osr' compiler='c2' level='4' stamp='1.676'>
<jvms bci='17' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1457152' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='121' compile_kind='osr' compiler='c2' level='4' stamp='1.676'/>
<task_queued compile_id='123' method='foo.rida.GetterWrapper getNumber ()I' bytes='5' count='128' iicount='128' level='1' stamp='1.676' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='123' compiler='c1' level='1' entry='0x000000011ce3e900' size='664' address='0x000000011ce3e790' relocation_offset='328' insts_offset='368' stub_offset='512' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' oops_offset='560' metadata_offset='568' method='foo.rida.GetterWrapper getNumber ()I' bytes='5' count='6208' iicount='6220' stamp='1.676'/>
<print_nmethod compile_id='123' compiler='c1' level='1' stamp='1.676'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1676  123       1       foo.rida.GetterWrapper::getNumber (5 bytes)
 total in heap  [0x000000011ce3e790,0x000000011ce3ea28] = 664
 relocation     [0x000000011ce3e8d8,0x000000011ce3e900] = 40
 main code      [0x000000011ce3e900,0x000000011ce3e990] = 144
 stub code      [0x000000011ce3e990,0x000000011ce3e9c0] = 48
 oops           [0x000000011ce3e9c0,0x000000011ce3e9c8] = 8
 metadata       [0x000000011ce3e9c8,0x000000011ce3e9d0] = 8
 scopes data    [0x000000011ce3e9d0,0x000000011ce3e9e0] = 16
 scopes pcs     [0x000000011ce3e9e0,0x000000011ce3ea20] = 64
 dependencies   [0x000000011ce3ea20,0x000000011ce3ea28] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c001cd8} &apos;getNumber&apos; &apos;()I&apos; in &apos;foo/rida/GetterWrapper&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce3e900:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3e904:   movabs r11,0x12ac00000
  0x000000011ce3e90e:   add    r10,r11
  0x000000011ce3e911:   cmp    r10,rax
  0x000000011ce3e914:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3e91a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce3e920:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3e927:   push   rbp
  0x000000011ce3e928:   sub    rsp,0x30
  0x000000011ce3e92c:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011ce3e934:   je     0x000000011ce3e93b
  0x000000011ce3e936:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@0 (line 11)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce3e93b:   mov    eax,DWORD PTR [rsi+0xc]      ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
  0x000000011ce3e93e:   add    rsp,0x30
  0x000000011ce3e942:   pop    rbp
  0x000000011ce3e943:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3e94a:   ja     0x000000011ce3e951
  0x000000011ce3e950:   ret    
  0x000000011ce3e951:   movabs r10,0x11ce3e943              ;   {internal_word}
  0x000000011ce3e95b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3e962:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3e967:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce3e96e:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce3e979:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce3e984:   add    rsp,0x30
  0x000000011ce3e988:   pop    rbp
  0x000000011ce3e989:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce3e98e:   hlt    
  0x000000011ce3e98f:   hlt    
[Exception Handler]
  0x000000011ce3e990:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce3e995:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce3e99f:   and    rsp,0xfffffffffffffff0
  0x000000011ce3e9a3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce3e9a8:   hlt    
[Deopt Handler Code]
  0x000000011ce3e9a9:   movabs r10,0x11ce3e9a9              ;   {section_word}
  0x000000011ce3e9b3:   push   r10
  0x000000011ce3e9b5:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3e9ba:   hlt    
  0x000000011ce3e9bb:   hlt    
  0x000000011ce3e9bc:   hlt    
  0x000000011ce3e9bd:   hlt    
  0x000000011ce3e9be:   hlt    
  0x000000011ce3e9bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='124' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='60416' iicount='1' osr_bci='10' level='3' stamp='1.679' comment='tiered' hot_count='60416'/>
<writer thread='23555'/>
<nmethod compile_id='124' compile_kind='osr' compiler='c1' level='3' entry='0x000000011537caa0' size='1544' address='0x000000011537c910' relocation_offset='328' insts_offset='400' stub_offset='976' scopes_data_offset='1048' scopes_pcs_offset='1176' dependencies_offset='1496' nul_chk_table_offset='1504' oops_offset='1024' metadata_offset='1032' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='75645' iicount='1' stamp='1.679'/>
<print_nmethod compile_id='124' compile_kind='osr' compiler='c1' level='3' stamp='1.679'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1679  124 %     3       foo.rida.SimpleBenchmark::benchmarkGetterWrappers @ 10 (38 bytes)
 total in heap  [0x000000011537c910,0x000000011537cf18] = 1544
 relocation     [0x000000011537ca58,0x000000011537caa0] = 72
 main code      [0x000000011537caa0,0x000000011537cce0] = 576
 stub code      [0x000000011537cce0,0x000000011537cd10] = 48
 oops           [0x000000011537cd10,0x000000011537cd18] = 8
 metadata       [0x000000011537cd18,0x000000011537cd28] = 16
 scopes data    [0x000000011537cd28,0x000000011537cda8] = 128
 scopes pcs     [0x000000011537cda8,0x000000011537cee8] = 320
 dependencies   [0x000000011537cee8,0x000000011537cef0] = 8
 nul chk table  [0x000000011537cef0,0x000000011537cf18] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011537caa0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537caa7:   push   rbp
  0x000000011537caa8:   sub    rsp,0x50
  0x000000011537caac:   cmp    DWORD PTR [r15+0x20],0x3
  0x000000011537cab4:   je     0x000000011537cabb
  0x000000011537cab6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537cabb:   movabs rdi,0x16c002750              ;   {metadata(method data for {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cac5:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537cacb:   add    ebx,0x2
  0x000000011537cace:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011537cad4:   and    ebx,0x7fe
  0x000000011537cada:   cmp    ebx,0x0
  0x000000011537cadd:   je     0x000000011537cc3c           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@0 (line 83)
  0x000000011537cae3:   mov    edi,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011537cc5d
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@5 (line 84)
  0x000000011537cae6:   mov    ebx,0x0
  0x000000011537caeb:   mov    eax,0x0
  0x000000011537caf0:   jmp    0x000000011537cb70           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@10 (line 84)
  0x000000011537caf5:   data16 xchg ax,ax
  0x000000011537caf8:   cmp    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011537cc62
  0x000000011537cafb:   jae    0x000000011537cc6c
  0x000000011537cb01:   movsxd rdx,ebx
  0x000000011537cb04:   mov    edx,DWORD PTR [rsi+rdx*4+0x10]
  0x000000011537cb08:   shl    rdx,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011537cb0c:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x000000011537cc7a
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011537cb0f:   mov    rcx,rdx
  0x000000011537cb12:   movabs r8,0x16c002750               ;   {metadata(method data for {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cb1c:   add    QWORD PTR [r8+0x110],0x1
  0x000000011537cb24:   mov    edx,DWORD PTR [rdx+0xc]      ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011537cb27:   add    edx,eax
  0x000000011537cb29:   inc    ebx
  0x000000011537cb2b:   movabs rax,0x16c002750              ;   {metadata(method data for {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cb35:   mov    ecx,DWORD PTR [rax+0xb0]
  0x000000011537cb3b:   add    ecx,0x2
  0x000000011537cb3e:   mov    DWORD PTR [rax+0xb0],ecx
  0x000000011537cb44:   and    ecx,0x3ffe
  0x000000011537cb4a:   cmp    ecx,0x0
  0x000000011537cb4d:   je     0x000000011537cc7f           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011537cb53:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011537cb5a:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011537cb5d:   movabs rax,0x16c002750              ;   {metadata(method data for {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cb67:   inc    DWORD PTR [rax+0x148]
  0x000000011537cb6d:   mov    rax,rdx                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011537cb70:   cmp    ebx,edi
  0x000000011537cb72:   movabs rdx,0x16c002750              ;   {metadata(method data for {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cb7c:   movabs rcx,0x100
  0x000000011537cb86:   jl     0x000000011537cb96
  0x000000011537cb8c:   movabs rcx,0xf0
  0x000000011537cb96:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011537cb9a:   lea    r8,[r8+0x1]
  0x000000011537cb9e:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011537cba2:   jl     0x000000011537caf8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
  0x000000011537cba8:   add    rsp,0x50
  0x000000011537cbac:   pop    rbp
  0x000000011537cbad:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537cbb4:   ja     0x000000011537cca0
  0x000000011537cbba:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@37 (line 87)
  0x000000011537cbbb:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537cbc2:   push   rbp
  0x000000011537cbc3:   sub    rsp,0x50
  0x000000011537cbc7:   nop
  0x000000011537cbc8:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537cbd0:   je     0x000000011537cbd7
  0x000000011537cbd2:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537cbd7:   mov    edi,0x20
  0x000000011537cbdc:   movsxd rdi,edi
  0x000000011537cbdf:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x000000011537cbe2:   mov    edi,0x18
  0x000000011537cbe7:   movsxd rdi,edi
  0x000000011537cbea:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x000000011537cbee:   mov    edi,0x10
  0x000000011537cbf3:   movsxd rdi,edi
  0x000000011537cbf6:   mov    edx,DWORD PTR [rsi+rdi*1]
  0x000000011537cbf9:   mov    edi,0x8
  0x000000011537cbfe:   movsxd rdi,edi
  0x000000011537cc01:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x000000011537cc04:   mov    rdi,rsi
  0x000000011537cc07:   mov    DWORD PTR [rsp+0x38],ebx
  0x000000011537cc0b:   mov    QWORD PTR [rsp+0x30],rax
  0x000000011537cc10:   mov    DWORD PTR [rsp+0x2c],edx
  0x000000011537cc14:   mov    DWORD PTR [rsp+0x28],ecx
  0x000000011537cc18:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011537cc1d:   mov    ecx,DWORD PTR [rsp+0x28]
  0x000000011537cc21:   mov    rbx,rcx
  0x000000011537cc24:   mov    edx,DWORD PTR [rsp+0x2c]
  0x000000011537cc28:   mov    rdi,rdx
  0x000000011537cc2b:   mov    rax,QWORD PTR [rsp+0x30]
  0x000000011537cc30:   mov    rsi,rax
  0x000000011537cc33:   mov    eax,DWORD PTR [rsp+0x38]
  0x000000011537cc37:   jmp    0x000000011537cb70
  0x000000011537cc3c:   movabs r10,0x16c000eb0              ;   {metadata({method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cc46:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537cc4b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537cc53:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@-1 (line 83)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537cc58:   jmp    0x000000011537cae3
  0x000000011537cc5d:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@5 (line 84)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537cc62:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537cc67:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537cc6c:   mov    QWORD PTR [rsp],rbx
  0x000000011537cc70:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011537cc75:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011537cc7a:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537cc7f:   movabs r10,0x16c000eb0              ;   {metadata({method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537cc89:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537cc8e:   mov    QWORD PTR [rsp],0x21
  0x000000011537cc96:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537cc9b:   jmp    0x000000011537cb53
  0x000000011537cca0:   movabs r10,0x11537cbad              ;   {internal_word}
  0x000000011537ccaa:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537ccb1:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537ccb6:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537ccbd:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537ccc8:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537ccd3:   add    rsp,0x50
  0x000000011537ccd7:   pop    rbp
  0x000000011537ccd8:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537ccdd:   hlt    
  0x000000011537ccde:   hlt    
  0x000000011537ccdf:   hlt    
[Exception Handler]
  0x000000011537cce0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537cce5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537ccef:   and    rsp,0xfffffffffffffff0
  0x000000011537ccf3:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537ccf8:   hlt    
[Deopt Handler Code]
  0x000000011537ccf9:   movabs r10,0x11537ccf9              ;   {section_word}
  0x000000011537cd03:   push   r10
  0x000000011537cd05:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537cd0a:   hlt    
  0x000000011537cd0b:   hlt    
  0x000000011537cd0c:   hlt    
  0x000000011537cd0d:   hlt    
  0x000000011537cd0e:   hlt    
  0x000000011537cd0f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='125' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='2448384' iicount='1' osr_bci='10' stamp='1.688' comment='tiered' hot_count='2448384'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='125' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce3ec00' size='1592' address='0x000000011ce3ea90' relocation_offset='328' insts_offset='368' stub_offset='840' scopes_data_offset='896' scopes_pcs_offset='1088' dependencies_offset='1520' nul_chk_table_offset='1528' oops_offset='864' metadata_offset='872' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3093198' iicount='1' stamp='1.690'/>
<make_not_entrant thread='30467' compile_id='124' compile_kind='osr' compiler='c1' level='3' stamp='1.690'/>
<print_nmethod compile_id='125' compile_kind='osr' compiler='c2' level='4' stamp='1.690'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1690  125 %     4       foo.rida.SimpleBenchmark::benchmarkGetterWrappers @ 10 (38 bytes)
 total in heap  [0x000000011ce3ea90,0x000000011ce3f0c8] = 1592
 relocation     [0x000000011ce3ebd8,0x000000011ce3ebf8] = 32
 main code      [0x000000011ce3ec00,0x000000011ce3edd8] = 472
 stub code      [0x000000011ce3edd8,0x000000011ce3edf0] = 24
 oops           [0x000000011ce3edf0,0x000000011ce3edf8] = 8
 metadata       [0x000000011ce3edf8,0x000000011ce3ee10] = 24
 scopes data    [0x000000011ce3ee10,0x000000011ce3eed0] = 192
 scopes pcs     [0x000000011ce3eed0,0x000000011ce3f080] = 432
 dependencies   [0x000000011ce3f080,0x000000011ce3f088] = 8
 nul chk table  [0x000000011ce3f088,0x000000011ce3f0c8] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce3ec00:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce3ec05:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce3ec10:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3ec17:   push   rbp
  0x000000011ce3ec18:   sub    rsp,0x30
  0x000000011ce3ec1c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3ec24:   jne    0x000000011ce3edc8
  0x000000011ce3ec2a:   mov    rbx,QWORD PTR [rsi+0x18]
  0x000000011ce3ec2e:   mov    r13d,DWORD PTR [rsi+0x20]
  0x000000011ce3ec32:   mov    ebp,DWORD PTR [rsi+0x10]
  0x000000011ce3ec35:   mov    r14d,DWORD PTR [rsi+0x8]
  0x000000011ce3ec39:   mov    rdi,rsi
  0x000000011ce3ec3c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3ec40:   movabs r10,0x10c859500
  0x000000011ce3ec4a:   call   r10
  0x000000011ce3ec4d:   mov    r11d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x000000011ce3edb4
  0x000000011ce3ec51:   cmp    r11d,0x1001000               ;   {metadata(&apos;foo/rida/GetterWrapper&apos;[])}
  0x000000011ce3ec58:   jne    0x000000011ce3ed90
  0x000000011ce3ec5e:   xchg   ax,ax
  0x000000011ce3ec60:   cmp    r14d,ebp
  0x000000011ce3ec63:   jge    0x000000011ce3ed65           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@10 (line 84)
  0x000000011ce3ec69:   mov    r8d,DWORD PTR [rbx+0xc]
  0x000000011ce3ec6d:   lea    r10d,[r14+0x1]
  0x000000011ce3ec71:   xor    ecx,ecx
  0x000000011ce3ec73:   test   r10d,r10d
  0x000000011ce3ec76:   cmovl  r10d,ecx
  0x000000011ce3ec7a:   cmp    r10d,ebp
  0x000000011ce3ec7d:   cmovg  r10d,ebp
  0x000000011ce3ec81:   cmp    r14d,r8d
  0x000000011ce3ec84:   jae    0x000000011ce3ed78
  0x000000011ce3ec8a:   mov    r11d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3ec8f:   add    r13d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@28 (line 85)
  0x000000011ce3ec94:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@30 (line 84)
  0x000000011ce3ec97:   cmp    r14d,r10d
  0x000000011ce3ec9a:   jl     0x000000011ce3ec81           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
  0x000000011ce3ec9c:   movsxd r10,r8d
  0x000000011ce3ec9f:   movsxd r11,ebp
  0x000000011ce3eca2:   cmp    r11,r10
  0x000000011ce3eca5:   mov    r11d,ebp
  0x000000011ce3eca8:   cmovg  r11d,r8d
  0x000000011ce3ecac:   lea    edi,[r11-0x3]
  0x000000011ce3ecb0:   mov    r9d,0x80000000
  0x000000011ce3ecb6:   cmp    r11d,edi
  0x000000011ce3ecb9:   cmovl  edi,r9d
  0x000000011ce3ecbd:   data16 xchg ax,ax
  0x000000011ce3ecc0:   cmp    r14d,edi
  0x000000011ce3ecc3:   jge    0x000000011ce3ed3b
  0x000000011ce3ecc9:   mov    edx,0xfa0
  0x000000011ce3ecce:   mov    r9d,edi
  0x000000011ce3ecd1:   sub    r9d,r14d
  0x000000011ce3ecd4:   cmp    edi,r14d
  0x000000011ce3ecd7:   cmovl  r9d,ecx
  0x000000011ce3ecdb:   cmp    r9d,0xfa0
  0x000000011ce3ece2:   cmova  r9d,edx
  0x000000011ce3ece6:   add    r9d,r14d
  0x000000011ce3ece9:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3ecf0:   mov    r10d,DWORD PTR [rbx+r14*4+0x10]
  0x000000011ce3ecf5:   add    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
  0x000000011ce3ecfa:   movsxd rsi,r14d
  0x000000011ce3ecfd:   mov    r10d,DWORD PTR [rbx+rsi*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3ed02:   mov    eax,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3ed07:   mov    r10d,DWORD PTR [rbx+rsi*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3ed0c:   mov    r11d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3ed11:   mov    esi,DWORD PTR [rbx+rsi*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3ed15:   mov    r10d,DWORD PTR [r12+rsi*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3ed1a:   add    r13d,eax
  0x000000011ce3ed1d:   add    r13d,r11d
  0x000000011ce3ed20:   add    r13d,r10d                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@28 (line 85)
  0x000000011ce3ed23:   add    r14d,0x4                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@30 (line 84)
  0x000000011ce3ed27:   cmp    r14d,r9d
  0x000000011ce3ed2a:   jl     0x000000011ce3ecf0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011ce3ed2c:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011ce3ed33:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
                                                            ;   {poll}
  0x000000011ce3ed36:   cmp    r14d,edi
  0x000000011ce3ed39:   jl     0x000000011ce3ecce
  0x000000011ce3ed3b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3ed40:   cmp    r14d,ebp
  0x000000011ce3ed43:   jge    0x000000011ce3ed65
  0x000000011ce3ed45:   data16 xchg ax,ax
  0x000000011ce3ed48:   cmp    r14d,r8d
  0x000000011ce3ed4b:   jae    0x000000011ce3ed78
  0x000000011ce3ed4d:   mov    r10d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3ed52:   add    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3eda8
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@28 (line 85)
  0x000000011ce3ed57:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@30 (line 84)
  0x000000011ce3ed5a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3ed60:   cmp    r14d,ebp
  0x000000011ce3ed63:   jl     0x000000011ce3ed48           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
  0x000000011ce3ed65:   mov    esi,0xffffff45
  0x000000011ce3ed6a:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3ed6e:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce3ed73:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3ed78:   mov    esi,0xffffffe4
  0x000000011ce3ed7d:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3ed81:   mov    QWORD PTR [rsp+0x10],rbx
  0x000000011ce3ed86:   mov    DWORD PTR [rsp+0x18],r14d
  0x000000011ce3ed8b:   call   0x000000011c906180           ; ImmutableOopMap {[16]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3ed90:   mov    esi,0xffffff8d
  0x000000011ce3ed95:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3ed99:   mov    QWORD PTR [rsp+0x8],rbx
  0x000000011ce3ed9e:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce3eda3:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@10 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3eda8:   mov    esi,0xfffffff6
  0x000000011ce3edad:   xchg   ax,ax
  0x000000011ce3edaf:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3edb4:   mov    esi,0xffffff76
  0x000000011ce3edb9:   mov    DWORD PTR [rsp],r13d
  0x000000011ce3edbd:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce3edc2:   nop
  0x000000011ce3edc3:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@10 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3edc8:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3edcd:   jmp    0x000000011ce3ec2a
  0x000000011ce3edd2:   hlt    
  0x000000011ce3edd3:   hlt    
  0x000000011ce3edd4:   hlt    
  0x000000011ce3edd5:   hlt    
  0x000000011ce3edd6:   hlt    
  0x000000011ce3edd7:   hlt    
[Exception Handler]
  0x000000011ce3edd8:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3eddd:   call   0x000000011ce3ede2
  0x000000011ce3ede2:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3ede7:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3edec:   hlt    
  0x000000011ce3eded:   hlt    
  0x000000011ce3edee:   hlt    
  0x000000011ce3edef:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x000000011537cc9b' compile_id='124' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='33' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3095552' iicount='1'/>
</deoptimized>
<task_queued compile_id='126' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3096576' iicount='1' stamp='1.698' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='126' compiler='c2' level='4' entry='0x000000011ce3f280' size='1464' address='0x000000011ce3f110' relocation_offset='328' insts_offset='368' stub_offset='688' scopes_data_offset='736' scopes_pcs_offset='928' dependencies_offset='1392' nul_chk_table_offset='1400' oops_offset='712' metadata_offset='720' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3096576' iicount='1' stamp='1.700'/>
<print_nmethod compile_id='126' compiler='c2' level='4' stamp='1.700'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1700  126       4       foo.rida.SimpleBenchmark::benchmarkGetterWrappers (38 bytes)
 total in heap  [0x000000011ce3f110,0x000000011ce3f6c8] = 1464
 relocation     [0x000000011ce3f258,0x000000011ce3f270] = 24
 main code      [0x000000011ce3f280,0x000000011ce3f3c0] = 320
 stub code      [0x000000011ce3f3c0,0x000000011ce3f3d8] = 24
 oops           [0x000000011ce3f3d8,0x000000011ce3f3e0] = 8
 metadata       [0x000000011ce3f3e0,0x000000011ce3f3f0] = 16
 scopes data    [0x000000011ce3f3f0,0x000000011ce3f4b0] = 192
 scopes pcs     [0x000000011ce3f4b0,0x000000011ce3f680] = 464
 dependencies   [0x000000011ce3f680,0x000000011ce3f688] = 8
 nul chk table  [0x000000011ce3f688,0x000000011ce3f6c8] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000eb0} &apos;benchmarkGetterWrappers&apos; &apos;([Lfoo/rida/GetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi:rsi   = &apos;[Lfoo/rida/GetterWrapper;&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011ce3f280:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3f287:   push   rbp
  0x000000011ce3f288:   sub    rsp,0x20
  0x000000011ce3f28c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3f294:   jne    0x000000011ce3f3b0           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@-1 (line 83)
  0x000000011ce3f29a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3f2a0:   mov    ebp,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ce3f3a4
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@5 (line 84)
  0x000000011ce3f2a3:   test   ebp,ebp
  0x000000011ce3f2a5:   jbe    0x000000011ce3f38c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
  0x000000011ce3f2ab:   lea    r10d,[rbp-0x1]
  0x000000011ce3f2af:   cmp    r10d,ebp
  0x000000011ce3f2b2:   jae    0x000000011ce3f37c
  0x000000011ce3f2b8:   mov    r11d,DWORD PTR [rsi+0x10]    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3f2bc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3f2c0:   mov    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3f2c5:   lea    r9d,[rbp-0x3]
  0x000000011ce3f2c9:   mov    edi,0x1
  0x000000011ce3f2ce:   cmp    r9d,0x1
  0x000000011ce3f2d2:   jle    0x000000011ce3f351
  0x000000011ce3f2d8:   xor    r8d,r8d
  0x000000011ce3f2db:   mov    ebx,0xfa0
  0x000000011ce3f2e0:   mov    eax,ebp
  0x000000011ce3f2e2:   sub    eax,edi
  0x000000011ce3f2e4:   add    eax,0xfffffffd
  0x000000011ce3f2e7:   cmp    r9d,edi
  0x000000011ce3f2ea:   cmovl  eax,r8d
  0x000000011ce3f2ee:   cmp    eax,0xfa0
  0x000000011ce3f2f3:   cmova  eax,ebx
  0x000000011ce3f2f6:   add    eax,edi
  0x000000011ce3f2f8:   nop    DWORD PTR [rax+rax*1+0x0]    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@16 (line 84)
  0x000000011ce3f300:   mov    r10d,DWORD PTR [rsi+rdi*4+0x10]
  0x000000011ce3f305:   add    ecx,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
  0x000000011ce3f30a:   mov    r10d,DWORD PTR [rsi+rdi*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3f30f:   mov    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3f314:   mov    r11d,DWORD PTR [rsi+rdi*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3f319:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3f320:   mov    r10d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3f325:   mov    r11d,DWORD PTR [rsi+rdi*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3f32a:   mov    r11d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.GetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
  0x000000011ce3f32f:   add    ecx,r13d
  0x000000011ce3f332:   add    ecx,r10d
  0x000000011ce3f335:   add    ecx,r11d                     ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@28 (line 85)
  0x000000011ce3f338:   add    edi,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@30 (line 84)
  0x000000011ce3f33b:   cmp    edi,eax
  0x000000011ce3f33d:   data16 xchg ax,ax
  0x000000011ce3f340:   jl     0x000000011ce3f300           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011ce3f342:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
  0x000000011ce3f349:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@33 (line 84)
                                                            ;   {poll}
  0x000000011ce3f34c:   cmp    edi,r9d
  0x000000011ce3f34f:   jl     0x000000011ce3f2e0
  0x000000011ce3f351:   cmp    edi,ebp
  0x000000011ce3f353:   jge    0x000000011ce3f36b
  0x000000011ce3f355:   data16 xchg ax,ax                   ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@16 (line 84)
  0x000000011ce3f358:   mov    r11d,DWORD PTR [rsi+rdi*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@19 (line 84)
  0x000000011ce3f35d:   data16 xchg ax,ax
  0x000000011ce3f360:   add    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce3f398
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@28 (line 85)
  0x000000011ce3f365:   inc    edi                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@30 (line 84)
  0x000000011ce3f367:   cmp    edi,ebp
  0x000000011ce3f369:   jl     0x000000011ce3f358           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
  0x000000011ce3f36b:   mov    esi,0xffffff45
  0x000000011ce3f370:   mov    DWORD PTR [rsp],ecx
  0x000000011ce3f373:   mov    DWORD PTR [rsp+0x4],edi
  0x000000011ce3f377:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f37c:   mov    QWORD PTR [rsp],rsi
  0x000000011ce3f380:   mov    esi,0xffffff76
  0x000000011ce3f385:   xchg   ax,ax
  0x000000011ce3f387:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f38c:   mov    esi,0xffffff45
  0x000000011ce3f391:   xchg   ax,ax
  0x000000011ce3f393:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkGetterWrappers@13 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f398:   mov    esi,0xfffffff6
  0x000000011ce3f39d:   xchg   ax,ax
  0x000000011ce3f39f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@25 (line 85)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f3a4:   mov    esi,0xfffffff6
  0x000000011ce3f3a9:   xchg   ax,ax
  0x000000011ce3f3ab:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkGetterWrappers@5 (line 84)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f3b0:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3f3b5:   jmp    0x000000011ce3f29a
  0x000000011ce3f3ba:   hlt    
  0x000000011ce3f3bb:   hlt    
  0x000000011ce3f3bc:   hlt    
  0x000000011ce3f3bd:   hlt    
  0x000000011ce3f3be:   hlt    
  0x000000011ce3f3bf:   hlt    
[Exception Handler]
  0x000000011ce3f3c0:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3f3c5:   call   0x000000011ce3f3ca
  0x000000011ce3f3ca:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3f3cf:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3f3d4:   hlt    
  0x000000011ce3f3d5:   hlt    
  0x000000011ce3f3d6:   hlt    
  0x000000011ce3f3d7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='125' compile_kind='osr' compiler='c2' level='4' stamp='1.707'>
<jvms bci='13' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3096576' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='125' compile_kind='osr' compiler='c2' level='4' stamp='1.707'/>
<task_queued compile_id='127' method='java.util.Random nextInt (I)I' bytes='74' count='256' iicount='256' level='3' stamp='1.747' comment='tiered' hot_count='256'/>
<task_queued compile_id='128' method='foo.rida.ParentGetterWrapper &lt;init&gt; (I)V' bytes='10' count='256' iicount='256' level='3' stamp='1.747' comment='tiered' hot_count='256'/>
<task_queued compile_id='129' method='foo.rida.ChildGetterWrapper &lt;init&gt; (I)V' bytes='6' count='256' iicount='256' level='3' stamp='1.747' comment='tiered' hot_count='256'/>
<writer thread='23555'/>
<nmethod compile_id='127' compiler='c1' level='3' entry='0x000000011537d160' size='2104' address='0x000000011537cf90' relocation_offset='328' insts_offset='464' stub_offset='1376' scopes_data_offset='1488' scopes_pcs_offset='1680' dependencies_offset='2080' nul_chk_table_offset='2088' metadata_offset='1472' method='java.util.Random nextInt (I)I' bytes='74' count='3061' iicount='3063' stamp='1.747'/>
<print_nmethod compile_id='127' compiler='c1' level='3' stamp='1.747'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1747  127       3       java.util.Random::nextInt (74 bytes)
 total in heap  [0x000000011537cf90,0x000000011537d7c8] = 2104
 relocation     [0x000000011537d0d8,0x000000011537d150] = 120
 main code      [0x000000011537d160,0x000000011537d4f0] = 912
 stub code      [0x000000011537d4f0,0x000000011537d550] = 96
 metadata       [0x000000011537d550,0x000000011537d560] = 16
 scopes data    [0x000000011537d560,0x000000011537d620] = 192
 scopes pcs     [0x000000011537d620,0x000000011537d7b0] = 400
 dependencies   [0x000000011537d7b0,0x000000011537d7b8] = 8
 nul chk table  [0x000000011537d7b8,0x000000011537d7c8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;
  # this:     rsi:rsi   = &apos;java/util/Random&apos;
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011537d160:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011537d164:   movabs r11,0x12ac00000
  0x000000011537d16e:   add    r10,r11
  0x000000011537d171:   cmp    r10,rax
  0x000000011537d174:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537d17a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011537d180:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537d187:   push   rbp
  0x000000011537d188:   sub    rsp,0x50
  0x000000011537d18c:   cmp    DWORD PTR [r15+0x20],0x4
  0x000000011537d194:   je     0x000000011537d19b
  0x000000011537d196:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537d19b:   mov    QWORD PTR [rsp+0x30],rsi
  0x000000011537d1a0:   mov    DWORD PTR [rsp+0x28],edx
  0x000000011537d1a4:   movabs rdi,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d1ae:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011537d1b4:   add    ebx,0x2
  0x000000011537d1b7:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011537d1bd:   and    ebx,0x7fe
  0x000000011537d1c3:   cmp    ebx,0x0
  0x000000011537d1c6:   je     0x000000011537d446           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@0 (line 556)
  0x000000011537d1cc:   cmp    edx,0x0
  0x000000011537d1cf:   movabs rdi,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d1d9:   movabs rbx,0x100
  0x000000011537d1e3:   jle    0x000000011537d1f3
  0x000000011537d1e9:   movabs rbx,0xf0
  0x000000011537d1f3:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011537d1f7:   lea    rax,[rax+0x1]
  0x000000011537d1fb:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011537d1ff:   jle    0x000000011537d3b6           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 556)
  0x000000011537d205:   mov    rdi,rsi
  0x000000011537d208:   movabs rbx,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d212:   add    QWORD PTR [rbx+0x138],0x1
  0x000000011537d21a:   mov    edx,0x1f
  0x000000011537d21f:   mov    rbx,rsi
  0x000000011537d222:   mov    rsi,rbx                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011537d225:   xchg   ax,ax
  0x000000011537d227:   call   0x000000011ce302a0           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ;   {optimized virtual_call}
  0x000000011537d22c:   mov    edx,DWORD PTR [rsp+0x28]
  0x000000011537d230:   dec    edx
  0x000000011537d232:   mov    DWORD PTR [rsp+0x2c],edx
  0x000000011537d236:   mov    rsi,rdx
  0x000000011537d239:   and    esi,DWORD PTR [rsp+0x28]
  0x000000011537d23d:   cmp    esi,0x0
  0x000000011537d240:   movabs rsi,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d24a:   movabs rdi,0x168
  0x000000011537d254:   je     0x000000011537d264
  0x000000011537d25a:   movabs rdi,0x158
  0x000000011537d264:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011537d268:   lea    rbx,[rbx+0x1]
  0x000000011537d26c:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011537d270:   je     0x000000011537d36f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 560)
  0x000000011537d276:   mov    rsi,rax
  0x000000011537d279:   mov    rdi,rdx
  0x000000011537d27c:   jmp    0x000000011537d305           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@47 (line 564)
  0x000000011537d281:   nop    DWORD PTR [rax+0x0]
  0x000000011537d288:   mov    rsi,rbx
  0x000000011537d28b:   movabs rax,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d295:   movabs r10,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011537d29f:   mov    QWORD PTR [rax+0x1c0],r10
  0x000000011537d2a6:   add    QWORD PTR [rax+0x1c8],0x1
  0x000000011537d2ae:   mov    edx,0x1f
  0x000000011537d2b3:   mov    rsi,rbx                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 565)
  0x000000011537d2b6:   nop
  0x000000011537d2b7:   call   0x000000011c900600           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 565)
                                                            ;   {optimized virtual_call}
  0x000000011537d2bc:   movabs rcx,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d2c6:   mov    edx,DWORD PTR [rcx+0xb0]
  0x000000011537d2cc:   add    edx,0x2
  0x000000011537d2cf:   mov    DWORD PTR [rcx+0xb0],edx
  0x000000011537d2d5:   and    edx,0x3ffe
  0x000000011537d2db:   cmp    edx,0x0
  0x000000011537d2de:   je     0x000000011537d467           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 565)
  0x000000011537d2e4:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 565)
  0x000000011537d2eb:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011537d2ee:   movabs rcx,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d2f8:   inc    DWORD PTR [rcx+0x1e8]
  0x000000011537d2fe:   mov    rsi,rax                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 565)
  0x000000011537d301:   mov    edi,DWORD PTR [rsp+0x2c]
  0x000000011537d305:   mov    edx,DWORD PTR [rsp+0x28]
  0x000000011537d309:   mov    rbx,QWORD PTR [rsp+0x30]
  0x000000011537d30e:   mov    rax,rsi
  0x000000011537d311:   mov    rcx,rdx
  0x000000011537d314:   cmp    eax,0x80000000
  0x000000011537d319:   jne    0x000000011537d32a
  0x000000011537d31f:   xor    edx,edx
  0x000000011537d321:   cmp    ecx,0xffffffff
  0x000000011537d324:   je     0x000000011537d32d
  0x000000011537d32a:   cdq    
  0x000000011537d32b:   idiv   ecx                          ; implicit exception: dispatches to 0x000000011537d488
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 564)
  0x000000011537d32d:   sub    esi,edx
  0x000000011537d32f:   add    esi,edi
  0x000000011537d331:   cmp    esi,0x0
  0x000000011537d334:   movabs rsi,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d33e:   movabs rax,0x190
  0x000000011537d348:   jge    0x000000011537d358
  0x000000011537d34e:   movabs rax,0x1a0
  0x000000011537d358:   mov    r8,QWORD PTR [rsi+rax*1]
  0x000000011537d35c:   lea    r8,[r8+0x1]
  0x000000011537d360:   mov    QWORD PTR [rsi+rax*1],r8
  0x000000011537d364:   jge    0x000000011537d3a0
  0x000000011537d36a:   jmp    0x000000011537d288           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 564)
  0x000000011537d36f:   mov    edx,DWORD PTR [rsp+0x28]
  0x000000011537d373:   movsxd rdx,edx
  0x000000011537d376:   movsxd rax,eax
  0x000000011537d379:   mov    rcx,rax
  0x000000011537d37c:   mov    rax,rdx
  0x000000011537d37f:   imul   rax,rcx
  0x000000011537d383:   mov    ecx,0x1f
  0x000000011537d388:   sar    rax,cl
  0x000000011537d38b:   mov    eax,eax
  0x000000011537d38d:   movabs rdx,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d397:   inc    DWORD PTR [rdx+0x178]
  0x000000011537d39d:   mov    rdx,rax                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@41 (line 561)
  0x000000011537d3a0:   mov    rax,rdx
  0x000000011537d3a3:   add    rsp,0x50
  0x000000011537d3a7:   pop    rbp
  0x000000011537d3a8:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537d3af:   ja     0x000000011537d48d
  0x000000011537d3b5:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@73 (line 568)
  0x000000011537d3b6:   xchg   ax,ax
  0x000000011537d3b8:   jmp    0x000000011537d4b2           ;   {no_reloc}
  0x000000011537d3bd:   add    BYTE PTR [rax],al
  0x000000011537d3bf:   add    BYTE PTR [rax],al
  0x000000011537d3c1:   add    BYTE PTR [rcx-0x75],cl
  0x000000011537d3c4:   xchg   eax,edi
  0x000000011537d3c6:   add    BYTE PTR [rax],al
  0x000000011537d3c8:   add    BYTE PTR [rax-0x73],cl
  0x000000011537d3cb:   js     0x000000011537d3f5
  0x000000011537d3cd:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537d3d4:   ja     0x000000011537d4bc
  0x000000011537d3da:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537d3e1:   mov    QWORD PTR [rax],0x1
  0x000000011537d3e8:   mov    rcx,rdx
  0x000000011537d3eb:   movabs r10,0x12ac00000
  0x000000011537d3f5:   sub    rcx,r10
  0x000000011537d3f8:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537d3fb:   xor    rcx,rcx
  0x000000011537d3fe:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537d401:   xor    rcx,rcx
  0x000000011537d404:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011537d408:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011537d40c:   mov    QWORD PTR [rax+0x20],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 557)
  0x000000011537d410:   mov    rdx,rax
  0x000000011537d413:   movabs rsi,0x16bc27460              ;   {metadata(method data for {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d41d:   add    QWORD PTR [rsi+0x110],0x1
  0x000000011537d425:   movabs rdx,0x7ffe4af58              ;   {oop(&quot;bound must be positive&quot;{0x00000007ffe4af58})}
  0x000000011537d42f:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 557)
  0x000000011537d432:   mov    QWORD PTR [rsp+0x38],rax
  0x000000011537d437:   call   0x000000011c900600           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 557)
                                                            ;   {optimized virtual_call}
  0x000000011537d43c:   mov    rax,QWORD PTR [rsp+0x38]
  0x000000011537d441:   jmp    0x000000011537d4e6
  0x000000011537d446:   movabs r10,0x12ad8a3d0              ;   {metadata({method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d450:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537d455:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537d45d:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop [48]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 556)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537d462:   jmp    0x000000011537d1cc
  0x000000011537d467:   movabs r10,0x12ad8a3d0              ;   {metadata({method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537d471:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537d476:   mov    QWORD PTR [rsp],0x45
  0x000000011537d47e:   call   0x000000011c9c1480           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 565)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537d483:   jmp    0x000000011537d2e4
  0x000000011537d488:   call   0x000000011c9bbe00           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 564)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011537d48d:   movabs r10,0x11537d3a8              ;   {internal_word}
  0x000000011537d497:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537d49e:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537d4a3:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011537d4ad:   mov    eax,0xa050f00
  0x000000011537d4b2:   call   0x000000011c9c0580           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@4 (line 557)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011537d4b7:   jmp    0x000000011537d3b8
  0x000000011537d4bc:   mov    rdx,rdx
  0x000000011537d4bf:   call   0x000000011c9bca00           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 557)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537d4c4:   jmp    0x000000011537d410
  0x000000011537d4c9:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537d4d0:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537d4db:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537d4e6:   add    rsp,0x50
  0x000000011537d4ea:   pop    rbp
  0x000000011537d4eb:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000000011537d4f0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011537d4f5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537d4ff:   jmp    0x000000011537d4ff           ;   {runtime_call}
  0x000000011537d504:   nop
  0x000000011537d505:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537d50f:   jmp    0x000000011537d50f           ;   {runtime_call}
[Exception Handler]
  0x000000011537d514:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011537d519:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537d523:   and    rsp,0xfffffffffffffff0
  0x000000011537d527:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537d52c:   hlt    
[Deopt Handler Code]
  0x000000011537d52d:   movabs r10,0x11537d52d              ;   {section_word}
  0x000000011537d537:   push   r10
  0x000000011537d539:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537d53e:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537d548:   jmp    0x000000011537d548           ;   {runtime_call}
  0x000000011537d54d:   hlt    
  0x000000011537d54e:   hlt    
  0x000000011537d54f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='130' compile_kind='osr' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='84992' iicount='1' osr_bci='15' level='3' stamp='1.758' comment='tiered' hot_count='84992'/>
<task_queued compile_id='131' method='java.util.Random nextInt (I)I' bytes='74' count='85504' iicount='85504' stamp='1.759' comment='tiered' hot_count='85504'/>
<writer thread='23555'/>
<nmethod compile_id='130' compile_kind='osr' compiler='c1' level='3' entry='0x000000011537da20' size='4224' address='0x000000011537d810' relocation_offset='328' insts_offset='528' stub_offset='2832' scopes_data_offset='3000' scopes_pcs_offset='3480' dependencies_offset='4168' nul_chk_table_offset='4184' oops_offset='2928' metadata_offset='2936' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='90882' iicount='1' stamp='1.759'/>
<print_nmethod compile_id='130' compile_kind='osr' compiler='c1' level='3' stamp='1.759'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1759  130 %     3       foo.rida.SimpleBenchmark::generateVirtualGetterWrappers @ 15 (76 bytes)
 total in heap  [0x000000011537d810,0x000000011537e890] = 4224
 relocation     [0x000000011537d958,0x000000011537da20] = 200
 main code      [0x000000011537da20,0x000000011537e320] = 2304
 stub code      [0x000000011537e320,0x000000011537e380] = 96
 oops           [0x000000011537e380,0x000000011537e388] = 8
 metadata       [0x000000011537e388,0x000000011537e3c8] = 64
 scopes data    [0x000000011537e3c8,0x000000011537e5a8] = 480
 scopes pcs     [0x000000011537e5a8,0x000000011537e858] = 688
 dependencies   [0x000000011537e858,0x000000011537e868] = 16
 nul chk table  [0x000000011537e868,0x000000011537e890] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011537da20:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537da27:   push   rbp
  0x000000011537da28:   sub    rsp,0xb0
  0x000000011537da2f:   nop
  0x000000011537da30:   cmp    DWORD PTR [r15+0x20],0x4
  0x000000011537da38:   je     0x000000011537da3f
  0x000000011537da3a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537da3f:   movabs rbx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537da49:   mov    edx,DWORD PTR [rbx+0xac]
  0x000000011537da4f:   add    edx,0x2
  0x000000011537da52:   mov    DWORD PTR [rbx+0xac],edx
  0x000000011537da58:   and    edx,0x7fe
  0x000000011537da5e:   cmp    edx,0x0
  0x000000011537da61:   je     0x000000011537e144           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@0 (line 58)
  0x000000011537da67:   mov    rbx,rsi
  0x000000011537da6a:   movabs rdx,0x12bc011e8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011537da74:   mov    DWORD PTR [rsp+0x68],esi
  0x000000011537da78:   movsxd rbx,ebx
  0x000000011537da7b:   mov    rdi,rbx
  0x000000011537da7e:   cmp    rbx,0xffffff
  0x000000011537da85:   ja     0x000000011537e165
  0x000000011537da8b:   movabs rsi,0x17
  0x000000011537da95:   lea    rsi,[rsi+rbx*4]
  0x000000011537da99:   and    rsi,0xfffffffffffffff8
  0x000000011537da9d:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537daa4:   lea    rsi,[rax+rsi*1]
  0x000000011537daa8:   cmp    rsi,QWORD PTR [r15+0x108]
  0x000000011537daaf:   ja     0x000000011537e165
  0x000000011537dab5:   mov    QWORD PTR [r15+0xf8],rsi
  0x000000011537dabc:   sub    rsi,rax
  0x000000011537dabf:   mov    QWORD PTR [rax],0x1
  0x000000011537dac6:   mov    rcx,rdx
  0x000000011537dac9:   movabs r10,0x12ac00000
  0x000000011537dad3:   sub    rcx,r10
  0x000000011537dad6:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537dad9:   mov    DWORD PTR [rax+0xc],ebx
  0x000000011537dadc:   sub    rsi,0x10
  0x000000011537dae0:   test   rsi,rsi
  0x000000011537dae3:   je     0x000000011537dafa
  0x000000011537dae9:   xor    rbx,rbx
  0x000000011537daec:   shr    rsi,0x3
  0x000000011537daf0:   mov    QWORD PTR [rax+rsi*8+0x8],rbx
  0x000000011537daf5:   dec    rsi
  0x000000011537daf8:   jne    0x000000011537daf0           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011537dafa:   movabs rdx,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011537db04:   mov    QWORD PTR [rsp+0x60],rax
  0x000000011537db09:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537db10:   lea    rdi,[rax+0x20]
  0x000000011537db14:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537db1b:   ja     0x000000011537e16f
  0x000000011537db21:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537db28:   mov    QWORD PTR [rax],0x1
  0x000000011537db2f:   mov    rcx,rdx
  0x000000011537db32:   movabs r10,0x12ac00000
  0x000000011537db3c:   sub    rcx,r10
  0x000000011537db3f:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537db42:   xor    rcx,rcx
  0x000000011537db45:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537db48:   xor    rcx,rcx
  0x000000011537db4b:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011537db4f:   mov    QWORD PTR [rax+0x18],rcx     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@5 (line 59)
  0x000000011537db53:   mov    rsi,rax
  0x000000011537db56:   movabs rdi,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537db60:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537db68:   mov    rsi,rax                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011537db6b:   mov    QWORD PTR [rsp+0x58],rax
  0x000000011537db70:   nop    DWORD PTR [rax+0x0]
  0x000000011537db77:   call   0x000000011c900600           ; ImmutableOopMap {[88]=Oop [96]=Oop }
                                                            ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
                                                            ;   {optimized virtual_call}
  0x000000011537db7c:   mov    rax,QWORD PTR [rsp+0x58]
  0x000000011537db81:   mov    rdi,QWORD PTR [rsp+0x60]
  0x000000011537db86:   mov    esi,DWORD PTR [rsp+0x68]
  0x000000011537db8a:   mov    ebx,0x0
  0x000000011537db8f:   mov    QWORD PTR [rsp+0x90],rdi
  0x000000011537db97:   jmp    0x000000011537e054           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@15 (line 60)
  0x000000011537db9c:   nop    DWORD PTR [rax+0x0]
  0x000000011537dba0:   mov    DWORD PTR [rsp+0x84],ebx
  0x000000011537dba7:   mov    DWORD PTR [rsp+0x98],esi
  0x000000011537dbae:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011537e17c
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011537dbb1:   mov    rdx,rax
  0x000000011537dbb4:   movabs rcx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dbbe:   movabs r10,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011537dbc8:   mov    QWORD PTR [rcx+0x130],r10
  0x000000011537dbcf:   add    QWORD PTR [rcx+0x138],0x1
  0x000000011537dbd7:   movabs rdx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537dbe1:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011537dbe7:   add    ecx,0x2
  0x000000011537dbea:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011537dbf0:   and    ecx,0x1ffffe
  0x000000011537dbf6:   cmp    ecx,0x0
  0x000000011537dbf9:   je     0x000000011537e181
  0x000000011537dbff:   mov    rdx,rax
  0x000000011537dc02:   movabs rcx,0x16bc113e0              ;   {metadata(method data for {method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537dc0c:   add    QWORD PTR [rcx+0x108],0x1
  0x000000011537dc14:   mov    edx,0x20
  0x000000011537dc19:   mov    rsi,rax                      ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011537dc1c:   mov    QWORD PTR [rsp+0x88],rax
  0x000000011537dc24:   data16 xchg ax,ax
  0x000000011537dc27:   call   0x000000011ce302a0           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {optimized virtual_call}
  0x000000011537dc2c:   mov    rdx,QWORD PTR [rsp+0x88]
  0x000000011537dc34:   movabs rsi,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dc3e:   movabs r10,0x12ad89ec8              ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011537dc48:   mov    QWORD PTR [rsi+0x168],r10
  0x000000011537dc4f:   add    QWORD PTR [rsi+0x170],0x1
  0x000000011537dc57:   mov    edx,0x2
  0x000000011537dc5c:   mov    rsi,QWORD PTR [rsp+0x88]     ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011537dc64:   mov    DWORD PTR [rsp+0x9c],eax
  0x000000011537dc6b:   nop    DWORD PTR [rax+0x0]
  0x000000011537dc6f:   call   0x000000011537d180           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
                                                            ;   {optimized virtual_call}
  0x000000011537dc74:   cmp    eax,0x0
  0x000000011537dc77:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dc81:   movabs rsi,0x190
  0x000000011537dc8b:   jne    0x000000011537dc9b
  0x000000011537dc91:   movabs rsi,0x1a0
  0x000000011537dc9b:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011537dc9f:   lea    rdi,[rdi+0x1]
  0x000000011537dca3:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011537dca7:   mov    ebx,DWORD PTR [rsp+0x9c]
  0x000000011537dcae:   jne    0x000000011537dd92           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@35 (line 64)
  0x000000011537dcb4:   movabs rdx,0x12bc009f8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537dcbe:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537dcc5:   lea    rdi,[rax+0x10]
  0x000000011537dcc9:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537dcd0:   ja     0x000000011537e1a2
  0x000000011537dcd6:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537dcdd:   mov    QWORD PTR [rax],0x1
  0x000000011537dce4:   mov    rcx,rdx
  0x000000011537dce7:   movabs r10,0x12ac00000
  0x000000011537dcf1:   sub    rcx,r10
  0x000000011537dcf4:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537dcf7:   xor    rcx,rcx
  0x000000011537dcfa:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537dcfd:   xor    rcx,rcx                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
  0x000000011537dd00:   mov    rdx,rax
  0x000000011537dd03:   movabs rsi,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dd0d:   add    QWORD PTR [rsi+0x1b0],0x1
  0x000000011537dd15:   movabs rdx,0x16c002a40              ;   {metadata(method data for {method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537dd1f:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537dd25:   add    esi,0x2
  0x000000011537dd28:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537dd2e:   and    esi,0x1ffffe
  0x000000011537dd34:   cmp    esi,0x0
  0x000000011537dd37:   je     0x000000011537e1af
  0x000000011537dd3d:   mov    rdx,rax
  0x000000011537dd40:   movabs rsi,0x16c002a40              ;   {metadata(method data for {method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537dd4a:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011537dd52:   movabs rdx,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537dd5c:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011537dd62:   add    esi,0x2
  0x000000011537dd65:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011537dd6b:   and    esi,0x1ffffe
  0x000000011537dd71:   cmp    esi,0x0
  0x000000011537dd74:   je     0x000000011537e1d0
  0x000000011537dd7a:   mov    DWORD PTR [rax+0xc],ebx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@6 (line 7)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@44 (line 65)
  0x000000011537dd7d:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dd87:   inc    DWORD PTR [rdx+0x1c0]
  0x000000011537dd8d:   jmp    0x000000011537de98           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@49 (line 65)
  0x000000011537dd92:   movabs rdx,0x12bc00bf8              ;   {metadata(&apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011537dd9c:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011537dda3:   lea    rdi,[rax+0x10]
  0x000000011537dda7:   cmp    rdi,QWORD PTR [r15+0x108]
  0x000000011537ddae:   ja     0x000000011537e1f1
  0x000000011537ddb4:   mov    QWORD PTR [r15+0xf8],rdi
  0x000000011537ddbb:   mov    QWORD PTR [rax],0x1
  0x000000011537ddc2:   mov    rcx,rdx
  0x000000011537ddc5:   movabs r10,0x12ac00000
  0x000000011537ddcf:   sub    rcx,r10
  0x000000011537ddd2:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011537ddd5:   xor    rcx,rcx
  0x000000011537ddd8:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011537dddb:   xor    rcx,rcx                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
  0x000000011537ddde:   mov    rsi,rax
  0x000000011537dde1:   movabs rdi,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537ddeb:   add    QWORD PTR [rdi+0x1d8],0x1
  0x000000011537ddf3:   movabs rsi,0x16c002b78              ;   {metadata(method data for {method} {0x000000016c0014c8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011537ddfd:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011537de03:   add    edi,0x2
  0x000000011537de06:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011537de0c:   and    edi,0x1ffffe
  0x000000011537de12:   cmp    edi,0x0
  0x000000011537de15:   je     0x000000011537e1fe
  0x000000011537de1b:   mov    rsi,rax
  0x000000011537de1e:   movabs rdi,0x16c002b78              ;   {metadata(method data for {method} {0x000000016c0014c8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011537de28:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537de30:   movabs rsi,0x16c002a40              ;   {metadata(method data for {method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537de3a:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011537de40:   add    edi,0x2
  0x000000011537de43:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011537de49:   and    edi,0x1ffffe
  0x000000011537de4f:   cmp    edi,0x0
  0x000000011537de52:   je     0x000000011537e21f
  0x000000011537de58:   mov    rsi,rax
  0x000000011537de5b:   movabs rdi,0x16c002a40              ;   {metadata(method data for {method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537de65:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011537de6d:   movabs rsi,0x16bc0a7c0              ;   {metadata(method data for {method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537de77:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011537de7d:   add    edi,0x2
  0x000000011537de80:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011537de86:   and    edi,0x1ffffe
  0x000000011537de8c:   cmp    edi,0x0
  0x000000011537de8f:   je     0x000000011537e240
  0x000000011537de95:   mov    DWORD PTR [rax+0xc],ebx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@6 (line 7)
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@2 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@58 (line 67)
  0x000000011537de98:   mov    ebx,DWORD PTR [rsp+0x84]
  0x000000011537de9f:   mov    rdi,QWORD PTR [rsp+0x90]
  0x000000011537dea7:   cmp    ebx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011537e261
  0x000000011537deaa:   jae    0x000000011537e26b
  0x000000011537deb0:   cmp    rax,0x0
  0x000000011537deb4:   jne    0x000000011537decc
  0x000000011537deb6:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dec0:   or     BYTE PTR [rdx+0x1e1],0x1
  0x000000011537dec7:   jmp    0x000000011537dfc5
  0x000000011537decc:   mov    esi,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x000000011537e279
  0x000000011537decf:   movabs r10,0x12ac00000
  0x000000011537ded9:   add    rsi,r10
  0x000000011537dedc:   mov    edx,DWORD PTR [rax+0x8]
  0x000000011537dedf:   movabs r10,0x12ac00000
  0x000000011537dee9:   add    rdx,r10
  0x000000011537deec:   mov    rsi,QWORD PTR [rsi+0xd0]
  0x000000011537def3:   cmp    rdx,rsi
  0x000000011537def6:   je     0x000000011537df24
  0x000000011537defc:   mov    ecx,DWORD PTR [rsi+0x14]
  0x000000011537deff:   cmp    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011537df03:   je     0x000000011537df24
  0x000000011537df09:   cmp    ecx,0x20
  0x000000011537df0c:   jne    0x000000011537dfae
  0x000000011537df12:   push   rdx
  0x000000011537df13:   push   rsi
  0x000000011537df14:   call   0x000000011c9bef80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011537df19:   pop    rdx
  0x000000011537df1a:   pop    rsi
  0x000000011537df1b:   cmp    esi,0x0
  0x000000011537df1e:   je     0x000000011537dfae
  0x000000011537df24:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537df2e:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011537df31:   movabs r10,0x12ac00000
  0x000000011537df3b:   add    rsi,r10
  0x000000011537df3e:   cmp    rsi,QWORD PTR [rdx+0x1f8]
  0x000000011537df45:   jne    0x000000011537df54
  0x000000011537df47:   add    QWORD PTR [rdx+0x200],0x1
  0x000000011537df4f:   jmp    0x000000011537dfc5
  0x000000011537df54:   cmp    rsi,QWORD PTR [rdx+0x208]
  0x000000011537df5b:   jne    0x000000011537df6a
  0x000000011537df5d:   add    QWORD PTR [rdx+0x210],0x1
  0x000000011537df65:   jmp    0x000000011537dfc5
  0x000000011537df6a:   cmp    QWORD PTR [rdx+0x1f8],0x0
  0x000000011537df72:   jne    0x000000011537df8b
  0x000000011537df74:   mov    QWORD PTR [rdx+0x1f8],rsi
  0x000000011537df7b:   mov    QWORD PTR [rdx+0x200],0x1
  0x000000011537df86:   jmp    0x000000011537dfc5
  0x000000011537df8b:   cmp    QWORD PTR [rdx+0x208],0x0
  0x000000011537df93:   jne    0x000000011537dfac
  0x000000011537df95:   mov    QWORD PTR [rdx+0x208],rsi
  0x000000011537df9c:   mov    QWORD PTR [rdx+0x210],0x1
  0x000000011537dfa7:   jmp    0x000000011537dfc5
  0x000000011537dfac:   jmp    0x000000011537dfc5
  0x000000011537dfae:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537dfb8:   sub    QWORD PTR [rdx+0x1e8],0x1
  0x000000011537dfc0:   jmp    0x000000011537e27e
  0x000000011537dfc5:   movsxd rsi,ebx
  0x000000011537dfc8:   lea    rsi,[rdi+rsi*4+0x10]
  0x000000011537dfcd:   movsx  edx,BYTE PTR [r15+0x40]
  0x000000011537dfd2:   cmp    edx,0x0
  0x000000011537dfd5:   jne    0x000000011537e287
  0x000000011537dfdb:   mov    r10,rax
  0x000000011537dfde:   shr    r10,0x3
  0x000000011537dfe2:   mov    DWORD PTR [rsi],r10d
  0x000000011537dfe5:   mov    rdx,rsi
  0x000000011537dfe8:   xor    rdx,rax
  0x000000011537dfeb:   shr    rdx,0x15
  0x000000011537dfef:   cmp    rdx,0x0
  0x000000011537dff3:   jne    0x000000011537e2a5           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011537dff9:   inc    ebx
  0x000000011537dffb:   movabs rax,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537e005:   mov    esi,DWORD PTR [rax+0xb0]
  0x000000011537e00b:   add    esi,0x2
  0x000000011537e00e:   mov    DWORD PTR [rax+0xb0],esi
  0x000000011537e014:   and    esi,0x3ffe
  0x000000011537e01a:   cmp    esi,0x0
  0x000000011537e01d:   je     0x000000011537e2bd           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
  0x000000011537e023:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rdi=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
  0x000000011537e02a:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011537e02d:   movabs rax,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537e037:   inc    DWORD PTR [rax+0x220]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
  0x000000011537e03d:   mov    rax,QWORD PTR [rsp+0x88]
  0x000000011537e045:   mov    QWORD PTR [rsp+0x90],rdi
  0x000000011537e04d:   mov    esi,DWORD PTR [rsp+0x98]
  0x000000011537e054:   cmp    ebx,esi
  0x000000011537e056:   movabs rdx,0x16c002ca0              ;   {metadata(method data for {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537e060:   movabs rcx,0x110
  0x000000011537e06a:   jl     0x000000011537e07a
  0x000000011537e070:   movabs rcx,0x100
  0x000000011537e07a:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011537e07e:   lea    r8,[r8+0x1]
  0x000000011537e082:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011537e086:   jl     0x000000011537dba0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
  0x000000011537e08c:   mov    rdi,QWORD PTR [rsp+0x90]
  0x000000011537e094:   mov    rax,rdi
  0x000000011537e097:   add    rsp,0xb0
  0x000000011537e09e:   pop    rbp
  0x000000011537e09f:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537e0a6:   ja     0x000000011537e2de
  0x000000011537e0ac:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@75 (line 71)
  0x000000011537e0ad:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537e0b4:   push   rbp
  0x000000011537e0b5:   sub    rsp,0xb0
  0x000000011537e0bc:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537e0c4:   je     0x000000011537e0cb
  0x000000011537e0c6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537e0cb:   mov    edi,0x30
  0x000000011537e0d0:   movsxd rdi,edi
  0x000000011537e0d3:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x000000011537e0d6:   mov    edi,0x28
  0x000000011537e0db:   movsxd rdi,edi
  0x000000011537e0de:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x000000011537e0e2:   mov    edi,0x20
  0x000000011537e0e7:   movsxd rdi,edi
  0x000000011537e0ea:   mov    rdx,QWORD PTR [rsi+rdi*1]
  0x000000011537e0ee:   mov    edi,0x18
  0x000000011537e0f3:   movsxd rdi,edi
  0x000000011537e0f6:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x000000011537e0f9:   mov    rdi,rsi
  0x000000011537e0fc:   mov    DWORD PTR [rsp+0x80],ebx
  0x000000011537e103:   mov    QWORD PTR [rsp+0x78],rax
  0x000000011537e108:   mov    QWORD PTR [rsp+0x70],rdx
  0x000000011537e10d:   mov    DWORD PTR [rsp+0x6c],ecx
  0x000000011537e111:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011537e116:   mov    ecx,DWORD PTR [rsp+0x6c]
  0x000000011537e11a:   mov    rbx,rcx
  0x000000011537e11d:   mov    rdx,QWORD PTR [rsp+0x70]
  0x000000011537e122:   mov    rax,rdx
  0x000000011537e125:   mov    rdx,QWORD PTR [rsp+0x78]
  0x000000011537e12a:   mov    rdi,rdx
  0x000000011537e12d:   mov    edx,DWORD PTR [rsp+0x80]
  0x000000011537e134:   mov    rsi,rdx
  0x000000011537e137:   mov    QWORD PTR [rsp+0x90],rdi
  0x000000011537e13f:   jmp    0x000000011537e054
  0x000000011537e144:   movabs r10,0x16c000c90              ;   {metadata({method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537e14e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e153:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e15b:   call   0x000000011c9c1480           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@-1 (line 58)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e160:   jmp    0x000000011537da67
  0x000000011537e165:   call   0x000000011c9bd300           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
                                                            ;   {runtime_call new_object_array Runtime1 stub}
  0x000000011537e16a:   jmp    0x000000011537dafa
  0x000000011537e16f:   mov    rdx,rdx
  0x000000011537e172:   call   0x000000011c9bca00           ; ImmutableOopMap {[96]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@5 (line 59)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537e177:   jmp    0x000000011537db53
  0x000000011537e17c:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop [144]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537e181:   movabs r10,0x12ad8a378              ;   {metadata({method} {0x000000012ad8a378} &apos;nextInt&apos; &apos;()I&apos; in &apos;java/util/Random&apos;)}
  0x000000011537e18b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e190:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e198:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e19d:   jmp    0x000000011537dbff
  0x000000011537e1a2:   mov    rdx,rdx
  0x000000011537e1a5:   call   0x000000011c9bca00           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537e1aa:   jmp    0x000000011537dd00
  0x000000011537e1af:   movabs r10,0x16c001238              ;   {metadata({method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537e1b9:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e1be:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e1c6:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [136]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@44 (line 65)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e1cb:   jmp    0x000000011537dd3d
  0x000000011537e1d0:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537e1da:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e1df:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e1e7:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [136]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@44 (line 65)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e1ec:   jmp    0x000000011537dd7a
  0x000000011537e1f1:   mov    rdx,rdx
  0x000000011537e1f4:   call   0x000000011c9bca00           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011537e1f9:   jmp    0x000000011537ddde
  0x000000011537e1fe:   movabs r10,0x16c0014c8              ;   {metadata({method} {0x000000016c0014c8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011537e208:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e20d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e215:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [136]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@58 (line 67)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e21a:   jmp    0x000000011537de1b
  0x000000011537e21f:   movabs r10,0x16c001238              ;   {metadata({method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537e229:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e22e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e236:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [136]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@2 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@58 (line 67)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e23b:   jmp    0x000000011537de58
  0x000000011537e240:   movabs r10,0x12b073770              ;   {metadata({method} {0x000000012b073770} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011537e24a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e24f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537e257:   call   0x000000011c9c1480           ; ImmutableOopMap {rax=Oop [136]=Oop [144]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::&lt;init&gt;@-1 (line 45)
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@1 (line 6)
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@2 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@58 (line 67)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e25c:   jmp    0x000000011537de95
  0x000000011537e261:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [136]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537e266:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [136]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537e26b:   mov    QWORD PTR [rsp],rbx
  0x000000011537e26f:   mov    QWORD PTR [rsp+0x8],rdi
  0x000000011537e274:   call   0x000000011c9bb800           ; ImmutableOopMap {rax=Oop rdi=Oop [136]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011537e279:   call   0x000000011c9bc100           ; ImmutableOopMap {rax=Oop rdi=Oop [136]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011537e27e:   mov    QWORD PTR [rsp],rax
  0x000000011537e282:   call   0x000000011c9be200           ; ImmutableOopMap {rax=Oop rdi=Oop [136]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011537e287:   mov    edx,DWORD PTR [rsi]
  0x000000011537e289:   shl    rdx,0x3
  0x000000011537e28d:   cmp    rdx,0x0
  0x000000011537e291:   je     0x000000011537dfdb
  0x000000011537e297:   mov    QWORD PTR [rsp],rdx
  0x000000011537e29b:   call   0x000000011c9c1a80           ;   {runtime_call g1_pre_barrier_slow}
  0x000000011537e2a0:   jmp    0x000000011537dfdb
  0x000000011537e2a5:   cmp    rax,0x0
  0x000000011537e2a9:   je     0x000000011537dff9
  0x000000011537e2af:   mov    QWORD PTR [rsp],rsi
  0x000000011537e2b3:   call   0x000000011c9c2280           ;   {runtime_call g1_post_barrier_slow}
  0x000000011537e2b8:   jmp    0x000000011537dff9
  0x000000011537e2bd:   movabs r10,0x16c000c90              ;   {metadata({method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011537e2c7:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537e2cc:   mov    QWORD PTR [rsp],0x47
  0x000000011537e2d4:   call   0x000000011c9c1480           ; ImmutableOopMap {rdi=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537e2d9:   jmp    0x000000011537e023
  0x000000011537e2de:   movabs r10,0x11537e09f              ;   {internal_word}
  0x000000011537e2e8:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537e2ef:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537e2f4:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537e2fb:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537e306:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537e311:   add    rsp,0xb0
  0x000000011537e318:   pop    rbp
  0x000000011537e319:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537e31e:   hlt    
  0x000000011537e31f:   hlt    
[Stub Code]
  0x000000011537e320:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011537e325:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537e32f:   jmp    0x000000011537e32f           ;   {runtime_call}
  0x000000011537e334:   nop
  0x000000011537e335:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537e33f:   jmp    0x000000011537e33f           ;   {runtime_call}
[Exception Handler]
  0x000000011537e344:   call   0x000000011c9bdf00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011537e349:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537e353:   and    rsp,0xfffffffffffffff0
  0x000000011537e357:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537e35c:   hlt    
[Deopt Handler Code]
  0x000000011537e35d:   movabs r10,0x11537e35d              ;   {section_word}
  0x000000011537e367:   push   r10
  0x000000011537e369:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537e36e:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011537e378:   jmp    0x000000011537e378           ;   {runtime_call}
  0x000000011537e37d:   hlt    
  0x000000011537e37e:   hlt    
  0x000000011537e37f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='131' compiler='c2' level='4' entry='0x000000011ce3f880' size='1224' address='0x000000011ce3f710' relocation_offset='328' insts_offset='368' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='928' dependencies_offset='1200' nul_chk_table_offset='1208' metadata_offset='712' method='java.util.Random nextInt (I)I' bytes='74' count='779012' iicount='779019' stamp='1.784'/>
<make_not_entrant thread='30467' compile_id='127' compiler='c1' level='3' stamp='1.784'/>
<print_nmethod compile_id='131' compiler='c2' level='4' stamp='1.784'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1784  131       4       java.util.Random::nextInt (74 bytes)
 total in heap  [0x000000011ce3f710,0x000000011ce3fbd8] = 1224
 relocation     [0x000000011ce3f858,0x000000011ce3f878] = 32
 main code      [0x000000011ce3f880,0x000000011ce3f9c0] = 320
 stub code      [0x000000011ce3f9c0,0x000000011ce3f9d8] = 24
 metadata       [0x000000011ce3f9d8,0x000000011ce3f9f8] = 32
 scopes data    [0x000000011ce3f9f8,0x000000011ce3fab0] = 184
 scopes pcs     [0x000000011ce3fab0,0x000000011ce3fbc0] = 272
 dependencies   [0x000000011ce3fbc0,0x000000011ce3fbc8] = 8
 nul chk table  [0x000000011ce3fbc8,0x000000011ce3fbd8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000012ad8a3d0} &apos;nextInt&apos; &apos;(I)I&apos; in &apos;java/util/Random&apos;
  # this:     rsi:rsi   = &apos;java/util/Random&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ce3f880:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce3f884:   movabs r11,0x12ac00000
  0x000000011ce3f88e:   add    r10,r11
  0x000000011ce3f891:   cmp    rax,r10
  0x000000011ce3f894:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce3f89a:   xchg   ax,ax
  0x000000011ce3f89c:   nop    DWORD PTR [rax+0x0]
[Verified Entry Point]
  0x000000011ce3f8a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3f8a7:   push   rbp
  0x000000011ce3f8a8:   sub    rsp,0x30
  0x000000011ce3f8ac:   cmp    DWORD PTR [r15+0x20],0x4
  0x000000011ce3f8b4:   jne    0x000000011ce3f9b2           ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 556)
  0x000000011ce3f8ba:   mov    rbx,rsi
  0x000000011ce3f8bd:   data16 xchg ax,ax
  0x000000011ce3f8c0:   test   edx,edx
  0x000000011ce3f8c2:   jle    0x000000011ce3f96c           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 556)
  0x000000011ce3f8c8:   mov    ecx,DWORD PTR [rsi+0x18]     ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f8cb:   mov    rax,QWORD PTR [r12+rcx*8+0x10]; implicit exception: dispatches to 0x000000011ce3f990
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f8d0:   movabs r10,0xffffffffffff
  0x000000011ce3f8da:   movabs r11,0x5deece66d
  0x000000011ce3f8e4:   mov    r8,rax
  0x000000011ce3f8e7:   imul   r8,r11
  0x000000011ce3f8eb:   add    r8,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f8ef:   mov    r11,r8
  0x000000011ce3f8f2:   and    r11,r10
  0x000000011ce3f8f5:   lock cmpxchg QWORD PTR [r12+rcx*8+0x10],r11
  0x000000011ce3f8fc:   sete   bpl
  0x000000011ce3f900:   movzx  ebp,bpl                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f904:   test   ebp,ebp
  0x000000011ce3f906:   je     0x000000011ce3f978           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f90c:   shr    r8,0x11
  0x000000011ce3f910:   lea    r10d,[rdx-0x1]
  0x000000011ce3f914:   mov    r9d,edx
  0x000000011ce3f917:   and    r9d,r10d                     ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@27 (line 560)
  0x000000011ce3f91a:   and    r8,0x7fffffff
  0x000000011ce3f921:   mov    ebp,r8d                      ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 445)
                                                            ; - java.util.Random::nextInt@17 (line 558)
  0x000000011ce3f924:   test   r9d,r9d
  0x000000011ce3f927:   jne    0x000000011ce3f94d           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 560)
  0x000000011ce3f929:   movsxd r10,ebp
  0x000000011ce3f92c:   movsxd r11,edx
  0x000000011ce3f92f:   imul   r11,r10
  0x000000011ce3f933:   sar    r11,0x1f
  0x000000011ce3f937:   mov    eax,r11d                     ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@39 (line 561)
  0x000000011ce3f93a:   add    rsp,0x30
  0x000000011ce3f93e:   pop    rbp
  0x000000011ce3f93f:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce3f946:   ja     0x000000011ce3f99c
  0x000000011ce3f94c:   ret    
  0x000000011ce3f94d:   mov    esi,0xffffff45
  0x000000011ce3f952:   mov    QWORD PTR [rsp],rbx
  0x000000011ce3f956:   mov    DWORD PTR [rsp+0x8],edx
  0x000000011ce3f95a:   mov    DWORD PTR [rsp+0xc],r10d
  0x000000011ce3f95f:   mov    DWORD PTR [rsp+0x10],r9d
  0x000000011ce3f964:   data16 xchg ax,ax
  0x000000011ce3f967:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@28 (line 560)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f96c:   mov    esi,0xffffff45
  0x000000011ce3f971:   mov    ebp,edx
  0x000000011ce3f973:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@1 (line 556)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f978:   mov    esi,0xffffff45
  0x000000011ce3f97d:   mov    QWORD PTR [rsp],rbx
  0x000000011ce3f981:   mov    DWORD PTR [rsp+0x8],edx
  0x000000011ce3f985:   mov    DWORD PTR [rsp+0xc],ecx
  0x000000011ce3f989:   xchg   ax,ax
  0x000000011ce3f98b:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [12]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f990:   mov    esi,0xfffffff6
  0x000000011ce3f995:   xchg   ax,ax
  0x000000011ce3f997:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce3f99c:   movabs r10,0x11ce3f93f              ;   {internal_word}
  0x000000011ce3f9a6:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce3f9ad:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce3f9b2:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce3f9b7:   jmp    0x000000011ce3f8ba
  0x000000011ce3f9bc:   hlt    
  0x000000011ce3f9bd:   hlt    
  0x000000011ce3f9be:   hlt    
  0x000000011ce3f9bf:   hlt    
[Exception Handler]
  0x000000011ce3f9c0:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce3f9c5:   call   0x000000011ce3f9ca
  0x000000011ce3f9ca:   sub    QWORD PTR [rsp],0x5
  0x000000011ce3f9cf:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce3f9d4:   hlt    
  0x000000011ce3f9d5:   hlt    
  0x000000011ce3f9d6:   hlt    
  0x000000011ce3f9d7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='23555'/>
<nmethod compile_id='128' compiler='c1' level='2' entry='0x000000011537eaa0' size='800' address='0x000000011537e910' relocation_offset='328' insts_offset='400' stub_offset='608' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' oops_offset='656' metadata_offset='664' method='foo.rida.ParentGetterWrapper &lt;init&gt; (I)V' bytes='10' count='782047' iicount='782047' stamp='1.790'/>
<print_nmethod compile_id='128' compiler='c1' level='2' stamp='1.790'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1789  128       2       foo.rida.ParentGetterWrapper::&lt;init&gt; (10 bytes)
 total in heap  [0x000000011537e910,0x000000011537ec30] = 800
 relocation     [0x000000011537ea58,0x000000011537ea88] = 48
 main code      [0x000000011537eaa0,0x000000011537eb70] = 208
 stub code      [0x000000011537eb70,0x000000011537eba0] = 48
 oops           [0x000000011537eba0,0x000000011537eba8] = 8
 metadata       [0x000000011537eba8,0x000000011537ebb8] = 16
 scopes data    [0x000000011537ebb8,0x000000011537ebd8] = 32
 scopes pcs     [0x000000011537ebd8,0x000000011537ec28] = 80
 dependencies   [0x000000011537ec28,0x000000011537ec30] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;
  # this:     rsi:rsi   = &apos;foo/rida/ParentGetterWrapper&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011537eaa0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011537eaa4:   movabs r11,0x12ac00000
  0x000000011537eaae:   add    r10,r11
  0x000000011537eab1:   cmp    r10,rax
  0x000000011537eab4:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537eaba:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011537eac0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537eac7:   push   rbp
  0x000000011537eac8:   sub    rsp,0x30
  0x000000011537eacc:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537ead4:   je     0x000000011537eadb
  0x000000011537ead6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537eadb:   movabs rdi,0x16c002990
  0x000000011537eae5:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011537eae8:   add    ebx,0x2
  0x000000011537eaeb:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011537eaee:   and    ebx,0xffe
  0x000000011537eaf4:   cmp    ebx,0x0
  0x000000011537eaf7:   je     0x000000011537eb13           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@0 (line 6)
  0x000000011537eafd:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@6 (line 7)
  0x000000011537eb00:   add    rsp,0x30
  0x000000011537eb04:   pop    rbp
  0x000000011537eb05:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537eb0c:   ja     0x000000011537eb31
  0x000000011537eb12:   ret    
  0x000000011537eb13:   movabs r10,0x16c001238              ;   {metadata({method} {0x000000016c001238} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011537eb1d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537eb22:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537eb2a:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537eb2f:   jmp    0x000000011537eafd
  0x000000011537eb31:   movabs r10,0x11537eb05              ;   {internal_word}
  0x000000011537eb3b:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537eb42:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537eb47:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537eb4e:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537eb59:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537eb64:   add    rsp,0x30
  0x000000011537eb68:   pop    rbp
  0x000000011537eb69:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537eb6e:   hlt    
  0x000000011537eb6f:   hlt    
[Exception Handler]
  0x000000011537eb70:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537eb75:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537eb7f:   and    rsp,0xfffffffffffffff0
  0x000000011537eb83:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537eb88:   hlt    
[Deopt Handler Code]
  0x000000011537eb89:   movabs r10,0x11537eb89              ;   {section_word}
  0x000000011537eb93:   push   r10
  0x000000011537eb95:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537eb9a:   hlt    
  0x000000011537eb9b:   hlt    
  0x000000011537eb9c:   hlt    
  0x000000011537eb9d:   hlt    
  0x000000011537eb9e:   hlt    
  0x000000011537eb9f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='132' compile_kind='osr' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='782047' iicount='1' osr_bci='15' stamp='1.793' comment='tiered' hot_count='782047'/>
<writer thread='23555'/>
<nmethod compile_id='129' compiler='c1' level='2' entry='0x000000011537ee20' size='808' address='0x000000011537ec90' relocation_offset='328' insts_offset='400' stub_offset='608' scopes_data_offset='688' scopes_pcs_offset='720' dependencies_offset='800' oops_offset='656' metadata_offset='664' method='foo.rida.ChildGetterWrapper &lt;init&gt; (I)V' bytes='6' count='394100' iicount='394104' stamp='1.793'/>
<print_nmethod compile_id='129' compiler='c1' level='2' stamp='1.793'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    1793  129       2       foo.rida.ChildGetterWrapper::&lt;init&gt; (6 bytes)
 total in heap  [0x000000011537ec90,0x000000011537efb8] = 808
 relocation     [0x000000011537edd8,0x000000011537ee08] = 48
 main code      [0x000000011537ee20,0x000000011537eef0] = 208
 stub code      [0x000000011537eef0,0x000000011537ef20] = 48
 oops           [0x000000011537ef20,0x000000011537ef28] = 8
 metadata       [0x000000011537ef28,0x000000011537ef40] = 24
 scopes data    [0x000000011537ef40,0x000000011537ef60] = 32
 scopes pcs     [0x000000011537ef60,0x000000011537efb0] = 80
 dependencies   [0x000000011537efb0,0x000000011537efb8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c0014c8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ChildGetterWrapper&apos;
  # this:     rsi:rsi   = &apos;foo/rida/ChildGetterWrapper&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011537ee20:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011537ee24:   movabs r11,0x12ac00000
  0x000000011537ee2e:   add    r10,r11
  0x000000011537ee31:   cmp    r10,rax
  0x000000011537ee34:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011537ee3a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011537ee40:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011537ee47:   push   rbp
  0x000000011537ee48:   sub    rsp,0x40
  0x000000011537ee4c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011537ee54:   je     0x000000011537ee5b
  0x000000011537ee56:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011537ee5b:   movabs rdi,0x16c002a10
  0x000000011537ee65:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011537ee68:   add    ebx,0x2
  0x000000011537ee6b:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011537ee6e:   and    ebx,0xffe
  0x000000011537ee74:   cmp    ebx,0x0
  0x000000011537ee77:   je     0x000000011537ee93           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@0 (line 6)
  0x000000011537ee7d:   mov    DWORD PTR [rsi+0xc],edx      ;*putfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@6 (line 7)
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@2 (line 6)
  0x000000011537ee80:   add    rsp,0x40
  0x000000011537ee84:   pop    rbp
  0x000000011537ee85:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011537ee8c:   ja     0x000000011537eeb1
  0x000000011537ee92:   ret    
  0x000000011537ee93:   movabs r10,0x16c0014c8              ;   {metadata({method} {0x000000016c0014c8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011537ee9d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011537eea2:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011537eeaa:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.ChildGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011537eeaf:   jmp    0x000000011537ee7d
  0x000000011537eeb1:   movabs r10,0x11537ee85              ;   {internal_word}
  0x000000011537eebb:   mov    QWORD PTR [r15+0x390],r10
  0x000000011537eec2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011537eec7:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011537eece:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011537eed9:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011537eee4:   add    rsp,0x40
  0x000000011537eee8:   pop    rbp
  0x000000011537eee9:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011537eeee:   hlt    
  0x000000011537eeef:   hlt    
[Exception Handler]
  0x000000011537eef0:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011537eef5:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011537eeff:   and    rsp,0xfffffffffffffff0
  0x000000011537ef03:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011537ef08:   hlt    
[Deopt Handler Code]
  0x000000011537ef09:   movabs r10,0x11537ef09              ;   {section_word}
  0x000000011537ef13:   push   r10
  0x000000011537ef15:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011537ef1a:   hlt    
  0x000000011537ef1b:   hlt    
  0x000000011537ef1c:   hlt    
  0x000000011537ef1d:   hlt    
  0x000000011537ef1e:   hlt    
  0x000000011537ef1f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='132' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce3fda0' size='3304' address='0x000000011ce3fc10' relocation_offset='328' insts_offset='400' stub_offset='1688' scopes_data_offset='1800' scopes_pcs_offset='2352' dependencies_offset='3200' handler_table_offset='3216' nul_chk_table_offset='3264' oops_offset='1712' metadata_offset='1720' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='912035' iicount='1' stamp='1.798'/>
<make_not_entrant thread='30467' compile_id='130' compile_kind='osr' compiler='c1' level='3' stamp='1.798'/>
<print_nmethod compile_id='132' compile_kind='osr' compiler='c2' level='4' stamp='1.798'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1797  132 %     4       foo.rida.SimpleBenchmark::generateVirtualGetterWrappers @ 15 (76 bytes)
 total in heap  [0x000000011ce3fc10,0x000000011ce408f8] = 3304
 relocation     [0x000000011ce3fd58,0x000000011ce3fd98] = 64
 main code      [0x000000011ce3fda0,0x000000011ce402a8] = 1288
 stub code      [0x000000011ce402a8,0x000000011ce402c0] = 24
 oops           [0x000000011ce402c0,0x000000011ce402c8] = 8
 metadata       [0x000000011ce402c8,0x000000011ce40318] = 80
 scopes data    [0x000000011ce40318,0x000000011ce40540] = 552
 scopes pcs     [0x000000011ce40540,0x000000011ce40890] = 848
 dependencies   [0x000000011ce40890,0x000000011ce408a0] = 16
 handler table  [0x000000011ce408a0,0x000000011ce408d0] = 48
 nul chk table  [0x000000011ce408d0,0x000000011ce408f8] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce3fda0:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce3fda5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce3fdb0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce3fdb7:   push   rbp
  0x000000011ce3fdb8:   sub    rsp,0x40
  0x000000011ce3fdbc:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce3fdc4:   jne    0x000000011ce4029e
  0x000000011ce3fdca:   mov    rbp,QWORD PTR [rsi+0x28]
  0x000000011ce3fdce:   mov    r14,QWORD PTR [rsi+0x20]
  0x000000011ce3fdd2:   mov    r13d,DWORD PTR [rsi+0x18]
  0x000000011ce3fdd6:   mov    ebx,DWORD PTR [rsi+0x30]
  0x000000011ce3fdd9:   mov    rdi,rsi
  0x000000011ce3fddc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3fde0:   movabs r10,0x10c859500
  0x000000011ce3fdea:   call   r10
  0x000000011ce3fded:   movabs r8,0x12bc011e8               ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce3fdf7:   test   rbp,rbp
  0x000000011ce3fdfa:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce3fe00:   je     0x000000011ce40234
  0x000000011ce3fe06:   mov    r10d,DWORD PTR [rbp+0x8]
  0x000000011ce3fe0a:   movabs r11,0x12ac00000
  0x000000011ce3fe14:   add    r11,r10
  0x000000011ce3fe17:   mov    r10,QWORD PTR [r11+0x40]
  0x000000011ce3fe1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3fe20:   cmp    r10,r8
  0x000000011ce3fe23:   jne    0x000000011ce4023c
  0x000000011ce3fe29:   mov    r10,rbp
  0x000000011ce3fe2c:   mov    r9d,DWORD PTR [r14+0x8]      ; implicit exception: dispatches to 0x000000011ce40254
  0x000000011ce3fe30:   cmp    r9d,0x189ec8                 ;   {metadata(&apos;java/util/Random&apos;)}
  0x000000011ce3fe37:   jne    0x000000011ce4023c           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@15 (line 60)
  0x000000011ce3fe3d:   data16 xchg ax,ax
  0x000000011ce3fe40:   mov    r9d,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x000000011ce40257
  0x000000011ce3fe44:   cmp    r9d,0x10011e8                ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce3fe4b:   jne    0x000000011ce40257
  0x000000011ce3fe51:   mov    r11d,DWORD PTR [r10+0xc]
  0x000000011ce3fe55:   mov    r9,QWORD PTR [r8+0xd0]       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce3fe5c:   mov    r8d,DWORD PTR [r9+0x14]
  0x000000011ce3fe60:   movsxd rcx,r8d
  0x000000011ce3fe63:   jmp    0x000000011ce3ff54
  0x000000011ce3fe68:   nop    DWORD PTR [rax+rax*1+0x0]    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3fe70:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce3fe77:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce3fe7f:   mov    QWORD PTR [rax],0x1
  0x000000011ce3fe86:   mov    DWORD PTR [rax+0x8],0x1000bf8;   {metadata(&apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011ce3fe8d:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
  0x000000011ce3fe91:   mov    rbx,rax
  0x000000011ce3fe94:   mov    DWORD PTR [rax+0xc],ebp      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@63 (line 69)
  0x000000011ce3fe97:   mov    r13d,DWORD PTR [rsp+0x18]
  0x000000011ce3fe9c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce3fea0:   cmp    r13d,DWORD PTR [rsp+0x4]
  0x000000011ce3fea5:   jae    0x000000011ce40199
  0x000000011ce3feab:   mov    r11d,DWORD PTR [rbx+0x8]
  0x000000011ce3feaf:   movabs rsi,0x12ac00000
  0x000000011ce3feb9:   add    rsi,r11
  0x000000011ce3febc:   mov    r10,QWORD PTR [rsp+0x28]
  0x000000011ce3fec1:   mov    r10,QWORD PTR [rsi+r10*1]
  0x000000011ce3fec5:   mov    r11,QWORD PTR [rsp+0x8]
  0x000000011ce3feca:   cmp    r11,r10
  0x000000011ce3fecd:   jne    0x000000011ce400ad
  0x000000011ce3fed3:   mov    r10,QWORD PTR [rsp+0x20]
  0x000000011ce3fed8:   lea    r14,[r10+r13*4+0x10]         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3fedd:   data16 xchg ax,ax
  0x000000011ce3fee0:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce3fee5:   jne    0x000000011ce40100
  0x000000011ce3feeb:   mov    r10,r14                      ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce3feee:   inc    r13d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@68 (line 60)
  0x000000011ce3fef1:   mov    r11,rbx
  0x000000011ce3fef4:   shr    r11,0x3
  0x000000011ce3fef8:   mov    DWORD PTR [r14],r11d
  0x000000011ce3fefb:   mov    r11,rbx
  0x000000011ce3fefe:   xor    r11,r10
  0x000000011ce3ff01:   shr    r11,0x15
  0x000000011ce3ff05:   test   r11,r11
  0x000000011ce3ff08:   je     0x000000011ce3ff29
  0x000000011ce3ff0a:   shr    r10,0x9
  0x000000011ce3ff0e:   movabs rdi,0x107e78000
  0x000000011ce3ff18:   add    rdi,r10
  0x000000011ce3ff1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce3ff20:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce3ff23:   jne    0x000000011ce4013c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ff29:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
  0x000000011ce3ff30:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
                                                            ;   {poll}
  0x000000011ce3ff33:   mov    r14,QWORD PTR [rsp+0x10]
  0x000000011ce3ff38:   mov    ebx,DWORD PTR [rsp]
  0x000000011ce3ff3b:   mov    r10,QWORD PTR [rsp+0x20]
  0x000000011ce3ff40:   mov    r11d,DWORD PTR [rsp+0x4]
  0x000000011ce3ff45:   mov    r9,QWORD PTR [rsp+0x8]
  0x000000011ce3ff4a:   mov    r8d,DWORD PTR [rsp+0x1c]
  0x000000011ce3ff4f:   mov    rcx,QWORD PTR [rsp+0x28]     ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@15 (line 60)
  0x000000011ce3ff54:   cmp    r13d,ebx
  0x000000011ce3ff57:   jge    0x000000011ce401d9           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
  0x000000011ce3ff5d:   mov    QWORD PTR [rsp+0x28],rcx
  0x000000011ce3ff62:   mov    DWORD PTR [rsp+0x1c],r8d
  0x000000011ce3ff67:   mov    QWORD PTR [rsp+0x8],r9
  0x000000011ce3ff6c:   mov    DWORD PTR [rsp+0x4],r11d
  0x000000011ce3ff71:   mov    QWORD PTR [rsp+0x20],r10
  0x000000011ce3ff76:   mov    DWORD PTR [rsp],ebx
  0x000000011ce3ff79:   mov    DWORD PTR [rsp+0x18],r13d
  0x000000011ce3ff7e:   mov    r10d,DWORD PTR [r14+0x18]    ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ff82:   mov    QWORD PTR [rsp+0x10],r14
  0x000000011ce3ff87:   mov    rax,QWORD PTR [r12+r10*8+0x10]; implicit exception: dispatches to 0x000000011ce40274
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ff8c:   mov    r9,rax
  0x000000011ce3ff8f:   movabs r11,0x5deece66d
  0x000000011ce3ff99:   imul   r9,r11
  0x000000011ce3ff9d:   add    r9,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ffa1:   mov    r11,r9
  0x000000011ce3ffa4:   movabs r8,0xffffffffffff
  0x000000011ce3ffae:   and    r11,r8
  0x000000011ce3ffb1:   lock cmpxchg QWORD PTR [r12+r10*8+0x10],r11
  0x000000011ce3ffb8:   sete   r8b
  0x000000011ce3ffbc:   movzx  r8d,r8b                      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ffc0:   test   r8d,r8d
  0x000000011ce3ffc3:   je     0x000000011ce401f0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce3ffc9:   mov    r10d,DWORD PTR [r14+0x18]    ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 440)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce3ffcd:   mov    rax,QWORD PTR [r12+r10*8+0x10]; implicit exception: dispatches to 0x000000011ce40280
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce3ffd2:   mov    r8,rax
  0x000000011ce3ffd5:   movabs r11,0x5deece66d
  0x000000011ce3ffdf:   imul   r8,r11
  0x000000011ce3ffe3:   shr    r9,0x10
  0x000000011ce3ffe7:   add    r8,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce3ffeb:   mov    r11,r8
  0x000000011ce3ffee:   movabs rcx,0xffffffffffff
  0x000000011ce3fff8:   and    r11,rcx
  0x000000011ce3fffb:   lock cmpxchg QWORD PTR [r12+r10*8+0x10],r11
  0x000000011ce40002:   sete   r11b
  0x000000011ce40006:   movzx  r11d,r11b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce4000a:   mov    ebp,r9d                      ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 445)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce4000d:   test   r11d,r11d
  0x000000011ce40010:   je     0x000000011ce40210           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce40016:   shr    r8,0x11
  0x000000011ce4001a:   and    r8,0x7fffffff
  0x000000011ce40021:   mov    r10d,r8d
  0x000000011ce40024:   movsxd r10,r10d
  0x000000011ce40027:   shl    r10,1
  0x000000011ce4002a:   sar    r10,0x1f
  0x000000011ce4002e:   mov    r11d,r10d
  0x000000011ce40031:   test   r11d,r11d
  0x000000011ce40034:   jne    0x000000011ce4007d
  0x000000011ce40036:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce4003d:   mov    r10,rax
  0x000000011ce40040:   add    r10,0x10
  0x000000011ce40044:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce4004b:   jae    0x000000011ce40185           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40051:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce40058:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce40060:   mov    QWORD PTR [rax],0x1
  0x000000011ce40067:   mov    DWORD PTR [rax+0x8],0x10009f8;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011ce4006e:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
  0x000000011ce40072:   mov    DWORD PTR [rax+0xc],ebp      ;*synchronization entry
                                                            ; - foo.rida.ParentGetterWrapper::&lt;init&gt;@-1 (line 6)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@44 (line 65)
  0x000000011ce40075:   mov    rbx,rax
  0x000000011ce40078:   jmp    0x000000011ce3fe97
  0x000000011ce4007d:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce40084:   mov    r10,rax
  0x000000011ce40087:   add    r10,0x10                     ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce4008b:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce40092:   jb     0x000000011ce3fe70
  0x000000011ce40098:   movabs rsi,0x12bc00bf8              ;   {metadata(&apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011ce400a2:   nop
  0x000000011ce400a3:   call   0x000000011c9c7800           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce400a8:   jmp    0x000000011ce3fe91
  0x000000011ce400ad:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x000000011ce400b2:   cmp    r10d,0x20
  0x000000011ce400b6:   jne    0x000000011ce400e9
  0x000000011ce400b8:   cmp    rsi,r11
  0x000000011ce400bb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce400c0:   je     0x000000011ce3fed3
  0x000000011ce400c6:   mov    rax,r11
  0x000000011ce400c9:   mov    rdi,QWORD PTR [rsi+0x28]
  0x000000011ce400cd:   mov    ecx,DWORD PTR [rdi]
  0x000000011ce400cf:   add    rdi,0x8
  0x000000011ce400d3:   test   rax,rax
  0x000000011ce400d6:   repnz scas rax,QWORD PTR es:[rdi]
  0x000000011ce400d9:   jne    0x000000011ce400e3
  0x000000011ce400df:   mov    QWORD PTR [rsi+0x20],rax
  0x000000011ce400e3:   je     0x000000011ce3fed3           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce400e9:   mov    esi,0xffffffd6
  0x000000011ce400ee:   mov    rbp,QWORD PTR [rsp+0x20]
  0x000000011ce400f3:   mov    QWORD PTR [rsp+0x8],rbx
  0x000000011ce400f8:   data16 xchg ax,ax
  0x000000011ce400fb:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40100:   mov    r10d,DWORD PTR [r14]
  0x000000011ce40103:   test   r10d,r10d
  0x000000011ce40106:   je     0x000000011ce3feeb
  0x000000011ce4010c:   mov    r11,QWORD PTR [r15+0x28]
  0x000000011ce40110:   mov    rdi,r10
  0x000000011ce40113:   shl    rdi,0x3
  0x000000011ce40117:   test   r11,r11
  0x000000011ce4011a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce40120:   je     0x000000011ce401c4           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40126:   mov    r10,QWORD PTR [r15+0x38]
  0x000000011ce4012a:   mov    QWORD PTR [r10+r11*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce4012f:   add    r11,0xfffffffffffffff8
  0x000000011ce40133:   mov    QWORD PTR [r15+0x28],r11
  0x000000011ce40137:   jmp    0x000000011ce3feeb
  0x000000011ce4013c:   mov    r10,QWORD PTR [r15+0x48]
  0x000000011ce40140:   mov    r11,QWORD PTR [r15+0x58]
  0x000000011ce40144:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce4014a:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce4014d:   je     0x000000011ce3ff29
  0x000000011ce40153:   mov    BYTE PTR [rdi],r12b
  0x000000011ce40156:   test   r10,r10
  0x000000011ce40159:   jne    0x000000011ce40172           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce4015b:   mov    rsi,r15
  0x000000011ce4015e:   xchg   ax,ax
  0x000000011ce40160:   movabs r10,0x10c3183d0
  0x000000011ce4016a:   call   r10
  0x000000011ce4016d:   jmp    0x000000011ce3ff29
  0x000000011ce40172:   mov    QWORD PTR [r11+r10*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40177:   add    r10,0xfffffffffffffff8       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce4017b:   mov    QWORD PTR [r15+0x48],r10     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce4017f:   nop
  0x000000011ce40180:   jmp    0x000000011ce3ff29
  0x000000011ce40185:   movabs rsi,0x12bc009f8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011ce4018f:   call   0x000000011c9c7800           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce40194:   jmp    0x000000011ce40072
  0x000000011ce40199:   mov    esi,0xffffffe4
  0x000000011ce4019e:   mov    ebp,DWORD PTR [rsp]
  0x000000011ce401a1:   rex.W push QWORD PTR [rsp+0x20]
  0x000000011ce401a6:   rex.W pop QWORD PTR [rsp]
  0x000000011ce401aa:   rex.W push QWORD PTR [rsp+0x10]
  0x000000011ce401af:   rex.W pop QWORD PTR [rsp+0x8]
  0x000000011ce401b4:   mov    DWORD PTR [rsp+0x14],r13d
  0x000000011ce401b9:   mov    QWORD PTR [rsp+0x20],rbx
  0x000000011ce401be:   nop
  0x000000011ce401bf:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce401c4:   mov    rsi,r15
  0x000000011ce401c7:   movabs r10,0x10c3183a0
  0x000000011ce401d1:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce401d4:   jmp    0x000000011ce3feeb           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
  0x000000011ce401d9:   mov    esi,0xffffff45
  0x000000011ce401de:   mov    rbp,r10
  0x000000011ce401e1:   mov    DWORD PTR [rsp],r13d
  0x000000011ce401e5:   mov    DWORD PTR [rsp+0x4],ebx
  0x000000011ce401e9:   xchg   ax,ax
  0x000000011ce401eb:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce401f0:   mov    esi,0xffffff45
  0x000000011ce401f5:   mov    ebp,ebx
  0x000000011ce401f7:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce401fc:   mov    DWORD PTR [rsp+0x10],r13d
  0x000000011ce40201:   mov    DWORD PTR [rsp+0x14],r10d
  0x000000011ce40206:   mov    DWORD PTR [rsp+0x18],r8d
  0x000000011ce4020b:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop [20]=NarrowOop [32]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40210:   mov    esi,0xffffff45
  0x000000011ce40215:   rex.W push QWORD PTR [rsp+0x20]
  0x000000011ce4021a:   rex.W pop QWORD PTR [rsp+0x8]
  0x000000011ce4021f:   mov    DWORD PTR [rsp+0x4],r13d
  0x000000011ce40224:   mov    DWORD PTR [rsp+0x20],r10d
  0x000000011ce40229:   mov    DWORD PTR [rsp+0x24],r11d
  0x000000011ce4022e:   nop
  0x000000011ce4022f:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40234:   xor    r10d,r10d
  0x000000011ce40237:   jmp    0x000000011ce3fe2c
  0x000000011ce4023c:   mov    esi,0xffffff8d
  0x000000011ce40241:   mov    DWORD PTR [rsp],ebx
  0x000000011ce40244:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce40249:   mov    DWORD PTR [rsp+0x4],r13d
  0x000000011ce4024e:   nop
  0x000000011ce4024f:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@15 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40254:   xor    r14d,r14d
  0x000000011ce40257:   mov    esi,0xffffff76
  0x000000011ce4025c:   mov    ebp,ebx
  0x000000011ce4025e:   mov    QWORD PTR [rsp],r10
  0x000000011ce40262:   mov    QWORD PTR [rsp+0x8],r14
  0x000000011ce40267:   mov    DWORD PTR [rsp+0x10],r13d
  0x000000011ce4026c:   data16 xchg ax,ax
  0x000000011ce4026f:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@15 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40274:   mov    esi,0xfffffff6
  0x000000011ce40279:   xchg   ax,ax
  0x000000011ce4027b:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40280:   mov    esi,0xfffffff6
  0x000000011ce40285:   xchg   ax,ax
  0x000000011ce40287:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce4028c:   mov    rsi,rax
  0x000000011ce4028f:   jmp    0x000000011ce40294           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
  0x000000011ce40291:   mov    rsi,rax                      ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@-1 (line 58)
  0x000000011ce40294:   add    rsp,0x40
  0x000000011ce40298:   pop    rbp
  0x000000011ce40299:   jmp    0x000000011c9c8280           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call _rethrow_Java}
  0x000000011ce4029e:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce402a3:   jmp    0x000000011ce3fdca
[Exception Handler]
  0x000000011ce402a8:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce402ad:   call   0x000000011ce402b2
  0x000000011ce402b2:   sub    QWORD PTR [rsp],0x5
  0x000000011ce402b7:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce402bc:   hlt    
  0x000000011ce402bd:   hlt    
  0x000000011ce402be:   hlt    
  0x000000011ce402bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x000000011537e2d9' compile_id='130' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='71' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='913119' iicount='1'/>
</deoptimized>
<task_queued compile_id='133' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='914143' iicount='1' stamp='1.817' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='133' compiler='c2' level='4' entry='0x000000011ce40ac0' size='4544' address='0x000000011ce40910' relocation_offset='328' insts_offset='432' stub_offset='2184' scopes_data_offset='2352' scopes_pcs_offset='3168' dependencies_offset='4384' handler_table_offset='4400' oops_offset='2224' metadata_offset='2240' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='914143' iicount='1' stamp='1.824'/>
<print_nmethod compile_id='133' compiler='c2' level='4' stamp='1.824'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1824  133       4       foo.rida.SimpleBenchmark::generateVirtualGetterWrappers (76 bytes)
 total in heap  [0x000000011ce40910,0x000000011ce41ad0] = 4544
 relocation     [0x000000011ce40a58,0x000000011ce40ab0] = 88
 main code      [0x000000011ce40ac0,0x000000011ce41198] = 1752
 stub code      [0x000000011ce41198,0x000000011ce411c0] = 40
 oops           [0x000000011ce411c0,0x000000011ce411d0] = 16
 metadata       [0x000000011ce411d0,0x000000011ce41240] = 112
 scopes data    [0x000000011ce41240,0x000000011ce41570] = 816
 scopes pcs     [0x000000011ce41570,0x000000011ce41a30] = 1216
 dependencies   [0x000000011ce41a30,0x000000011ce41a40] = 16
 handler table  [0x000000011ce41a40,0x000000011ce41ad0] = 144

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000c90} &apos;generateVirtualGetterWrappers&apos; &apos;(I)[Lfoo/rida/ParentGetterWrapper;&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011ce40ac0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce40ac7:   push   rbp
  0x000000011ce40ac8:   sub    rsp,0x50
  0x000000011ce40acc:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce40ad4:   jne    0x000000011ce4118b           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@-1 (line 58)
  0x000000011ce40ada:   mov    ebp,esi
  0x000000011ce40adc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce40ae0:   cmp    esi,0x40000
  0x000000011ce40ae6:   ja     0x000000011ce41125
  0x000000011ce40aec:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011ce40aef:   cmp    esi,0x40000
  0x000000011ce40af5:   ja     0x000000011ce410e9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40afb:   mov    r8,QWORD PTR [r15+0xf8]
  0x000000011ce40b02:   lea    rcx,[r10*4+0x17]             ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011ce40b0a:   mov    r10,rcx
  0x000000011ce40b0d:   and    r10,0xfffffffffffffff8
  0x000000011ce40b11:   mov    r11,r8
  0x000000011ce40b14:   add    r11,r10
  0x000000011ce40b17:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce40b20:   cmp    r11,QWORD PTR [r15+0x108]
  0x000000011ce40b27:   jae    0x000000011ce410e9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40b2d:   mov    QWORD PTR [r15+0xf8],r11
  0x000000011ce40b34:   mov    rdi,r8
  0x000000011ce40b37:   add    rdi,0x10
  0x000000011ce40b3b:   mov    QWORD PTR [r8],0x1
  0x000000011ce40b42:   prefetchw BYTE PTR [r11+0xc0]
  0x000000011ce40b4a:   mov    DWORD PTR [r8+0x8],0x10011e8 ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce40b52:   mov    DWORD PTR [r8+0xc],esi
  0x000000011ce40b56:   prefetchw BYTE PTR [r11+0x100]
  0x000000011ce40b5e:   prefetchw BYTE PTR [r11+0x140]
  0x000000011ce40b66:   prefetchw BYTE PTR [r11+0x180]
  0x000000011ce40b6e:   shr    rcx,0x3
  0x000000011ce40b72:   add    rcx,0xfffffffffffffffe
  0x000000011ce40b76:   xor    rax,rax
  0x000000011ce40b79:   cmp    rcx,0x8
  0x000000011ce40b7d:   jg     0x000000011ce40b8f
  0x000000011ce40b7f:   dec    rcx
  0x000000011ce40b82:   js     0x000000011ce40bd3
  0x000000011ce40b84:   mov    QWORD PTR [rdi+rcx*8],rax
  0x000000011ce40b88:   dec    rcx
  0x000000011ce40b8b:   jge    0x000000011ce40b84
  0x000000011ce40b8d:   jmp    0x000000011ce40bd3
  0x000000011ce40b8f:   vpxor  ymm0,ymm0,ymm0
  0x000000011ce40b93:   jmp    0x000000011ce40ba5
  0x000000011ce40b98:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce40b9c:   vmovdqu YMMWORD PTR [rdi+0x20],ymm0
  0x000000011ce40ba1:   add    rdi,0x40
  0x000000011ce40ba5:   sub    rcx,0x8
  0x000000011ce40ba9:   jge    0x000000011ce40b98
  0x000000011ce40bab:   add    rcx,0x4
  0x000000011ce40baf:   jl     0x000000011ce40bbd
  0x000000011ce40bb1:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x000000011ce40bb5:   add    rdi,0x20
  0x000000011ce40bb9:   sub    rcx,0x4
  0x000000011ce40bbd:   add    rcx,0x4
  0x000000011ce40bc1:   jle    0x000000011ce40bd3
  0x000000011ce40bc3:   dec    rcx
  0x000000011ce40bc6:   vmovq  QWORD PTR [rdi],xmm0
  0x000000011ce40bca:   add    rdi,0x8
  0x000000011ce40bce:   dec    rcx
  0x000000011ce40bd1:   jge    0x000000011ce40bc6           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011ce40bd3:   mov    QWORD PTR [rsp+0x8],r8       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40bd8:   mov    DWORD PTR [rsp],ebp
  0x000000011ce40bdb:   movabs r10,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce40be5:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40be9:   movabs rbp,0x106689d45497fdb5
  0x000000011ce40bf3:   mov    r10,rdx
  0x000000011ce40bf6:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40bfa:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce40bff:   movabs rsi,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce40c09:   mov    rcx,r10
  0x000000011ce40c0c:   data16 xchg ax,ax
  0x000000011ce40c0f:   call   0x000000011c900600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
                                                            ;   {optimized virtual_call}
  0x000000011ce40c14:   test   eax,eax
  0x000000011ce40c16:   je     0x000000011ce410b0           ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40c1c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce40c20:   movabs r10,0x10c7ba940
  0x000000011ce40c2a:   call   r10                          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40c2d:   mov    r8,QWORD PTR [r15+0xf8]
  0x000000011ce40c34:   mov    r11,QWORD PTR [rsp+0x10]
  0x000000011ce40c39:   xor    r11,rax                      ;*lxor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@7 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40c3c:   mov    r10,r8
  0x000000011ce40c3f:   add    r10,0x18
  0x000000011ce40c43:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce40c4a:   jae    0x000000011ce41105           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40c50:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce40c57:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce40c5f:   mov    QWORD PTR [r8],0x1
  0x000000011ce40c66:   mov    DWORD PTR [r8+0x8],0x256da0  ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce40c6e:   mov    DWORD PTR [r8+0xc],r12d
  0x000000011ce40c72:   mov    QWORD PTR [r8+0x10],r12
  0x000000011ce40c76:   movabs r10,0x5deece66d
  0x000000011ce40c80:   xor    r11,r10
  0x000000011ce40c83:   movabs r10,0xffffffffffff
  0x000000011ce40c8d:   and    r11,r10
  0x000000011ce40c90:   mov    QWORD PTR [r8+0x10],r11
  0x000000011ce40c94:   lock add DWORD PTR [rsp-0x40],0x0   ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40c9a:   mov    r11d,DWORD PTR [rsp]
  0x000000011ce40c9e:   xchg   ax,ax
  0x000000011ce40ca0:   test   r11d,r11d
  0x000000011ce40ca3:   jle    0x000000011ce41148           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
  0x000000011ce40ca9:   test   r11d,r11d
  0x000000011ce40cac:   je     0x000000011ce4112d
  0x000000011ce40cb2:   lea    r9d,[r11-0x1]
  0x000000011ce40cb6:   cmp    r9d,r11d
  0x000000011ce40cb9:   jae    0x000000011ce4112d
  0x000000011ce40cbf:   movabs r10,0x12bc011e8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce40cc9:   mov    r9,QWORD PTR [r10+0xd0]      ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40cd0:   mov    ebx,DWORD PTR [r9+0x14]
  0x000000011ce40cd4:   movsxd rcx,ebx
  0x000000011ce40cd7:   xor    r10d,r10d
  0x000000011ce40cda:   mov    QWORD PTR [rsp+0x20],r8
  0x000000011ce40cdf:   mov    QWORD PTR [rsp+0x28],r9
  0x000000011ce40ce4:   mov    DWORD PTR [rsp+0x14],ebx
  0x000000011ce40ce8:   mov    QWORD PTR [rsp+0x30],rcx
  0x000000011ce40ced:   mov    DWORD PTR [rsp+0x10],r10d
  0x000000011ce40cf2:   jmp    0x000000011ce40d13           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40cf4:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {[8]=Oop [32]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
  0x000000011ce40cfb:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@71 (line 60)
                                                            ;   {poll}
  0x000000011ce40cfe:   mov    r11d,DWORD PTR [rsp+0x10]
  0x000000011ce40d03:   cmp    r11d,DWORD PTR [rsp+0x4]
  0x000000011ce40d08:   jge    0x000000011ce41158
  0x000000011ce40d0e:   mov    r11d,DWORD PTR [rsp+0x4]     ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@20 (line 61)
  0x000000011ce40d13:   mov    DWORD PTR [rsp+0x4],r11d
  0x000000011ce40d18:   mov    r9d,r11d
  0x000000011ce40d1b:   sub    r9d,DWORD PTR [rsp+0x10]
  0x000000011ce40d20:   xor    r8d,r8d
  0x000000011ce40d23:   cmp    r11d,DWORD PTR [rsp+0x10]
  0x000000011ce40d28:   cmovl  r9d,r8d
  0x000000011ce40d2c:   cmp    r9d,0x3e8
  0x000000011ce40d33:   mov    r10d,0x3e8
  0x000000011ce40d39:   cmova  r9d,r10d
  0x000000011ce40d3d:   add    r9d,DWORD PTR [rsp+0x10]
  0x000000011ce40d42:   mov    DWORD PTR [rsp],r9d
  0x000000011ce40d46:   jmp    0x000000011ce40e0e
  0x000000011ce40d4b:   nop    DWORD PTR [rax+rax*1+0x0]    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40d50:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce40d57:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce40d5f:   mov    QWORD PTR [rax],0x1
  0x000000011ce40d66:   mov    DWORD PTR [rax+0x8],0x1000bf8;   {metadata(&apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011ce40d6d:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
  0x000000011ce40d71:   mov    rbx,rax
  0x000000011ce40d74:   mov    DWORD PTR [rax+0xc],ebp      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@63 (line 69)
  0x000000011ce40d77:   mov    r11d,DWORD PTR [rbx+0x8]
  0x000000011ce40d7b:   movabs rsi,0x12ac00000
  0x000000011ce40d85:   add    rsi,r11
  0x000000011ce40d88:   mov    r10,QWORD PTR [rsp+0x30]
  0x000000011ce40d8d:   mov    r10,QWORD PTR [rsi+r10*1]
  0x000000011ce40d91:   mov    r11,QWORD PTR [rsp+0x28]
  0x000000011ce40d96:   cmp    r11,r10
  0x000000011ce40d99:   jne    0x000000011ce40f49
  0x000000011ce40d9f:   mov    r10,QWORD PTR [rsp+0x8]
  0x000000011ce40da4:   mov    r11d,DWORD PTR [rsp+0x10]
  0x000000011ce40da9:   lea    rbp,[r10+r11*4+0x10]         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40dae:   cmp    BYTE PTR [r15+0x40],0x0
  0x000000011ce40db3:   jne    0x000000011ce40fa0           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40db9:   mov    r10,rbx
  0x000000011ce40dbc:   mov    r8d,DWORD PTR [rsp+0x10]
  0x000000011ce40dc1:   inc    r8d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@68 (line 60)
  0x000000011ce40dc4:   mov    DWORD PTR [rsp+0x10],r8d
  0x000000011ce40dc9:   mov    r8,rbx
  0x000000011ce40dcc:   shr    r8,0x3
  0x000000011ce40dd0:   mov    DWORD PTR [rbp+0x0],r8d
  0x000000011ce40dd4:   mov    r11,rbp
  0x000000011ce40dd7:   xor    r10,r11
  0x000000011ce40dda:   shr    r10,0x15
  0x000000011ce40dde:   xchg   ax,ax
  0x000000011ce40de0:   test   r10,r10
  0x000000011ce40de3:   je     0x000000011ce40dff
  0x000000011ce40de5:   shr    r11,0x9
  0x000000011ce40de9:   movabs rdi,0x107e78000
  0x000000011ce40df3:   add    rdi,r11
  0x000000011ce40df6:   cmp    BYTE PTR [rdi],0x2
  0x000000011ce40df9:   jne    0x000000011ce40fdc
  0x000000011ce40dff:   mov    r10d,DWORD PTR [rsp+0x10]
  0x000000011ce40e04:   cmp    r10d,DWORD PTR [rsp]
  0x000000011ce40e08:   jge    0x000000011ce40cf4           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@20 (line 61)
  0x000000011ce40e0e:   mov    r10,QWORD PTR [rsp+0x20]
  0x000000011ce40e13:   mov    rax,QWORD PTR [r10+0x10]     ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40e17:   mov    r11,rax
  0x000000011ce40e1a:   movabs r10,0x5deece66d
  0x000000011ce40e24:   imul   r11,r10
  0x000000011ce40e28:   add    r11,0xb                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40e2c:   mov    r10,r11
  0x000000011ce40e2f:   movabs r8,0xffffffffffff
  0x000000011ce40e39:   and    r10,r8
  0x000000011ce40e3c:   mov    r8,QWORD PTR [rsp+0x20]
  0x000000011ce40e41:   lock cmpxchg QWORD PTR [r8+0x10],r10
  0x000000011ce40e47:   sete   r10b
  0x000000011ce40e4b:   movzx  r10d,r10b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40e4f:   test   r10d,r10d
  0x000000011ce40e52:   je     0x000000011ce41052           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40e58:   mov    rax,QWORD PTR [r8+0x10]      ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce40e5c:   mov    r8,rax
  0x000000011ce40e5f:   movabs r10,0x5deece66d
  0x000000011ce40e69:   imul   r8,r10
  0x000000011ce40e6d:   shr    r11,0x10
  0x000000011ce40e71:   add    r8,0xb                       ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 443)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce40e75:   mov    r10,r8
  0x000000011ce40e78:   movabs r9,0xffffffffffff
  0x000000011ce40e82:   and    r10,r9
  0x000000011ce40e85:   mov    r9,QWORD PTR [rsp+0x20]
  0x000000011ce40e8a:   lock cmpxchg QWORD PTR [r9+0x10],r10
  0x000000011ce40e90:   sete   r10b
  0x000000011ce40e94:   movzx  r10d,r10b                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce40e98:   mov    ebp,r11d                     ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 445)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
  0x000000011ce40e9b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce40ea0:   test   r10d,r10d
  0x000000011ce40ea3:   je     0x000000011ce41080           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
  0x000000011ce40ea9:   shr    r8,0x11
  0x000000011ce40ead:   and    r8,0x7fffffff
  0x000000011ce40eb4:   mov    r10d,r8d
  0x000000011ce40eb7:   movsxd r10,r10d
  0x000000011ce40eba:   shl    r10,1
  0x000000011ce40ebd:   sar    r10,0x1f
  0x000000011ce40ec1:   mov    r11d,r10d
  0x000000011ce40ec4:   test   r11d,r11d
  0x000000011ce40ec7:   jne    0x000000011ce40f19
  0x000000011ce40ec9:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce40ed0:   mov    r10,rax
  0x000000011ce40ed3:   add    r10,0x10
  0x000000011ce40ed7:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce40ee0:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce40ee7:   jae    0x000000011ce41025           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40eed:   mov    QWORD PTR [r15+0xf8],r10
  0x000000011ce40ef4:   prefetchw BYTE PTR [r10+0xc0]
  0x000000011ce40efc:   mov    QWORD PTR [rax],0x1
  0x000000011ce40f03:   mov    DWORD PTR [rax+0x8],0x10009f8;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011ce40f0a:   mov    DWORD PTR [rax+0xc],r12d     ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
  0x000000011ce40f0e:   mov    DWORD PTR [rax+0xc],ebp      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@44 (line 65)
  0x000000011ce40f11:   mov    rbx,rax
  0x000000011ce40f14:   jmp    0x000000011ce40d77
  0x000000011ce40f19:   mov    rax,QWORD PTR [r15+0xf8]
  0x000000011ce40f20:   mov    r10,rax
  0x000000011ce40f23:   add    r10,0x10                     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40f27:   cmp    r10,QWORD PTR [r15+0x108]
  0x000000011ce40f2e:   jb     0x000000011ce40d50
  0x000000011ce40f34:   movabs rsi,0x12bc00bf8              ;   {metadata(&apos;foo/rida/ChildGetterWrapper&apos;)}
  0x000000011ce40f3e:   nop
  0x000000011ce40f3f:   call   0x000000011c9c7800           ; ImmutableOopMap {[8]=Oop [32]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce40f44:   jmp    0x000000011ce40d71
  0x000000011ce40f49:   mov    r11d,DWORD PTR [rsp+0x14]
  0x000000011ce40f4e:   cmp    r11d,0x20
  0x000000011ce40f52:   jne    0x000000011ce40f89
  0x000000011ce40f54:   mov    r10,QWORD PTR [rsp+0x28]
  0x000000011ce40f59:   cmp    rsi,r10
  0x000000011ce40f5c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce40f60:   je     0x000000011ce40d9f
  0x000000011ce40f66:   mov    rax,r10
  0x000000011ce40f69:   mov    rdi,QWORD PTR [rsi+0x28]
  0x000000011ce40f6d:   mov    ecx,DWORD PTR [rdi]
  0x000000011ce40f6f:   add    rdi,0x8
  0x000000011ce40f73:   test   rax,rax
  0x000000011ce40f76:   repnz scas rax,QWORD PTR es:[rdi]
  0x000000011ce40f79:   jne    0x000000011ce40f83
  0x000000011ce40f7f:   mov    QWORD PTR [rsi+0x20],rax
  0x000000011ce40f83:   je     0x000000011ce40d9f           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40f89:   mov    esi,0xffffffd6
  0x000000011ce40f8e:   mov    rbp,QWORD PTR [rsp+0x8]
  0x000000011ce40f93:   mov    QWORD PTR [rsp+0x8],rbx
  0x000000011ce40f98:   data16 xchg ax,ax
  0x000000011ce40f9b:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce40fa0:   mov    r11d,DWORD PTR [rbp+0x0]
  0x000000011ce40fa4:   test   r11d,r11d
  0x000000011ce40fa7:   je     0x000000011ce40db9
  0x000000011ce40fad:   mov    r10,QWORD PTR [r15+0x28]
  0x000000011ce40fb1:   mov    rdi,r11
  0x000000011ce40fb4:   shl    rdi,0x3
  0x000000011ce40fb8:   test   r10,r10
  0x000000011ce40fbb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce40fc0:   je     0x000000011ce41039           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40fc6:   mov    r11,QWORD PTR [r15+0x38]
  0x000000011ce40fca:   mov    QWORD PTR [r11+r10*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce40fcf:   add    r10,0xfffffffffffffff8
  0x000000011ce40fd3:   mov    QWORD PTR [r15+0x28],r10
  0x000000011ce40fd7:   jmp    0x000000011ce40db9
  0x000000011ce40fdc:   mov    r10,QWORD PTR [r15+0x58]
  0x000000011ce40fe0:   mov    r11,QWORD PTR [r15+0x48]
  0x000000011ce40fe4:   lock add DWORD PTR [rsp-0x40],0x0
  0x000000011ce40fea:   cmp    BYTE PTR [rdi],0x0
  0x000000011ce40fed:   je     0x000000011ce40dff
  0x000000011ce40ff3:   mov    BYTE PTR [rdi],r12b
  0x000000011ce40ff6:   test   r11,r11
  0x000000011ce40ff9:   jne    0x000000011ce41012           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce40ffb:   mov    rsi,r15
  0x000000011ce40ffe:   xchg   ax,ax
  0x000000011ce41000:   movabs r10,0x10c3183d0
  0x000000011ce4100a:   call   r10
  0x000000011ce4100d:   jmp    0x000000011ce40dff
  0x000000011ce41012:   mov    QWORD PTR [r10+r11*1-0x8],rdi;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce41017:   add    r11,0xfffffffffffffff8       ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce4101b:   mov    QWORD PTR [r15+0x48],r11     ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce4101f:   nop
  0x000000011ce41020:   jmp    0x000000011ce40dff
  0x000000011ce41025:   movabs rsi,0x12bc009f8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;)}
  0x000000011ce4102f:   call   0x000000011c9c7800           ; ImmutableOopMap {[8]=Oop [32]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce41034:   jmp    0x000000011ce40f0e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 333)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce41039:   mov    rsi,r15
  0x000000011ce4103c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce41040:   movabs r10,0x10c3183a0
  0x000000011ce4104a:   call   r10                          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
  0x000000011ce4104d:   jmp    0x000000011ce40db9
  0x000000011ce41052:   mov    esi,0xffffff45
  0x000000011ce41057:   mov    ebp,DWORD PTR [rsp+0x4]
  0x000000011ce4105b:   mov    r11,QWORD PTR [rsp+0x8]
  0x000000011ce41060:   mov    QWORD PTR [rsp],r11
  0x000000011ce41064:   mov    r11d,DWORD PTR [rsp+0x10]
  0x000000011ce41069:   mov    DWORD PTR [rsp+0x8],r11d
  0x000000011ce4106e:   mov    DWORD PTR [rsp+0xc],r10d
  0x000000011ce41073:   mov    QWORD PTR [rsp+0x18],r8
  0x000000011ce41078:   data16 xchg ax,ax
  0x000000011ce4107b:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@3 (line 495)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@21 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce41080:   mov    esi,0xffffff45
  0x000000011ce41085:   mov    r11d,DWORD PTR [rsp+0x4]
  0x000000011ce4108a:   mov    DWORD PTR [rsp],r11d
  0x000000011ce4108e:   mov    r8d,DWORD PTR [rsp+0x10]
  0x000000011ce41093:   mov    DWORD PTR [rsp+0x4],r8d
  0x000000011ce41098:   mov    DWORD PTR [rsp+0x18],r10d
  0x000000011ce4109d:   xchg   ax,ax
  0x000000011ce4109f:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop [32]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextInt@17 (line 558)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@28 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce410a4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ce410ac:   data16 data16 xchg ax,ax            ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 332)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce410b0:   movabs r10,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce410ba:   mov    rdx,QWORD PTR [r10+0x10]     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 329)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce410be:   mov    r10,rdx
  0x000000011ce410c1:   imul   r10,rbp                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 330)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce410c5:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011ce410ca:   movabs rsi,0x703a000a8              ;   {oop(a &apos;java/util/concurrent/atomic/AtomicLong&apos;{0x0000000703a000a8})}
  0x000000011ce410d4:   mov    rcx,r10
  0x000000011ce410d7:   call   0x000000011c900600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
                                                            ;   {optimized virtual_call}
  0x000000011ce410dc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce410e0:   test   eax,eax
  0x000000011ce410e2:   je     0x000000011ce410b0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@21 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce410e4:   jmp    0x000000011ce40c1c
  0x000000011ce410e9:   movabs rsi,0x12bc011e8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce410f3:   mov    edx,ebp
  0x000000011ce410f5:   xchg   ax,ax
  0x000000011ce410f7:   call   0x000000011c9c5600           ; ImmutableOopMap {}
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
                                                            ;   {runtime_call _new_array_Java}
  0x000000011ce410fc:   mov    r8,rax
  0x000000011ce410ff:   nop
  0x000000011ce41100:   jmp    0x000000011ce40bd3
  0x000000011ce41105:   mov    rbp,r11                      ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 353)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce41108:   movabs rsi,0x12ae56da0              ;   {metadata(&apos;java/util/concurrent/atomic/AtomicLong&apos;)}
  0x000000011ce41112:   nop
  0x000000011ce41113:   call   0x000000011c9c7800           ; ImmutableOopMap {[8]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Random::&lt;init&gt;@19 (line 355)
                                                            ; - java.util.Random::&lt;init&gt;@8 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
                                                            ;   {runtime_call _new_instance_Java}
  0x000000011ce41118:   mov    r11,rbp
  0x000000011ce4111b:   mov    r8,rax
  0x000000011ce4111e:   xchg   ax,ax
  0x000000011ce41120:   jmp    0x000000011ce40c76
  0x000000011ce41125:   movsxd r10,esi                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011ce41128:   jmp    0x000000011ce40aef           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
  0x000000011ce4112d:   mov    esi,0xffffff76
  0x000000011ce41132:   mov    ebp,r11d
  0x000000011ce41135:   mov    r10,QWORD PTR [rsp+0x8]
  0x000000011ce4113a:   mov    QWORD PTR [rsp],r10
  0x000000011ce4113e:   mov    QWORD PTR [rsp+0x10],r8
  0x000000011ce41143:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce41148:   mov    esi,0xffffff45
  0x000000011ce4114d:   mov    rbp,QWORD PTR [rsp+0x8]
  0x000000011ce41152:   nop
  0x000000011ce41153:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce41158:   mov    esi,0xffffff45
  0x000000011ce4115d:   mov    rbp,QWORD PTR [rsp+0x8]
  0x000000011ce41162:   nop
  0x000000011ce41163:   call   0x000000011c906180           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@17 (line 60)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce41168:   mov    rsi,rax
  0x000000011ce4116b:   jmp    0x000000011ce41181           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@1 (line 58)
  0x000000011ce4116d:   mov    rsi,rax
  0x000000011ce41170:   jmp    0x000000011ce41181
  0x000000011ce41172:   jmp    0x000000011ce41174           ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@18 (line 331)
                                                            ; - java.util.Random::&lt;init&gt;@1 (line 318)
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@9 (line 59)
  0x000000011ce41174:   mov    rsi,rax
  0x000000011ce41177:   jmp    0x000000011ce41181           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@52 (line 67)
  0x000000011ce41179:   mov    rsi,rax
  0x000000011ce4117c:   jmp    0x000000011ce41181           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@38 (line 65)
  0x000000011ce4117e:   mov    rsi,rax                      ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@-1 (line 58)
  0x000000011ce41181:   add    rsp,0x50
  0x000000011ce41185:   pop    rbp
  0x000000011ce41186:   jmp    0x000000011c9c8280           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::generateVirtualGetterWrappers@67 (line 69)
                                                            ;   {runtime_call _rethrow_Java}
  0x000000011ce4118b:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce41190:   jmp    0x000000011ce40ada
  0x000000011ce41195:   hlt    
  0x000000011ce41196:   hlt    
  0x000000011ce41197:   hlt    
[Exception Handler]
  0x000000011ce41198:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce4119d:   call   0x000000011ce411a2
  0x000000011ce411a2:   sub    QWORD PTR [rsp],0x5
  0x000000011ce411a7:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce411ac:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ce411b6:   jmp    0x000000011ce411b6           ;   {runtime_call}
  0x000000011ce411bb:   hlt    
  0x000000011ce411bc:   hlt    
  0x000000011ce411bd:   hlt    
  0x000000011ce411be:   hlt    
  0x000000011ce411bf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='132' compile_kind='osr' compiler='c2' level='4' stamp='2.130'>
<jvms bci='17' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='914143' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='132' compile_kind='osr' compiler='c2' level='4' stamp='2.130'/>
<task_queued compile_id='134' method='foo.rida.ParentGetterWrapper getNumber ()I' bytes='5' count='128' iicount='128' level='1' stamp='2.130' comment='tiered' hot_count='128'/>
<writer thread='23555'/>
<nmethod compile_id='134' compiler='c1' level='1' entry='0x000000011ce41c80' size='664' address='0x000000011ce41b10' relocation_offset='328' insts_offset='368' stub_offset='512' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' oops_offset='560' metadata_offset='568' method='foo.rida.ParentGetterWrapper getNumber ()I' bytes='5' count='6971' iicount='6982' stamp='2.131'/>
<print_nmethod compile_id='134' compiler='c1' level='1' stamp='2.131'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2130  134       1       foo.rida.ParentGetterWrapper::getNumber (5 bytes)
 total in heap  [0x000000011ce41b10,0x000000011ce41da8] = 664
 relocation     [0x000000011ce41c58,0x000000011ce41c80] = 40
 main code      [0x000000011ce41c80,0x000000011ce41d10] = 144
 stub code      [0x000000011ce41d10,0x000000011ce41d40] = 48
 oops           [0x000000011ce41d40,0x000000011ce41d48] = 8
 metadata       [0x000000011ce41d48,0x000000011ce41d50] = 8
 scopes data    [0x000000011ce41d50,0x000000011ce41d60] = 16
 scopes pcs     [0x000000011ce41d60,0x000000011ce41da0] = 64
 dependencies   [0x000000011ce41da0,0x000000011ce41da8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000016c0012e0} &apos;getNumber&apos; &apos;()I&apos; in &apos;foo/rida/ParentGetterWrapper&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ce41c80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x000000011ce41c84:   movabs r11,0x12ac00000
  0x000000011ce41c8e:   add    r10,r11
  0x000000011ce41c91:   cmp    r10,rax
  0x000000011ce41c94:   jne    0x000000011c900300           ;   {runtime_call ic_miss_stub}
  0x000000011ce41c9a:   nop    WORD PTR [rax+rax*1+0x0]
[Verified Entry Point]
  0x000000011ce41ca0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce41ca7:   push   rbp
  0x000000011ce41ca8:   sub    rsp,0x30
  0x000000011ce41cac:   cmp    DWORD PTR [r15+0x20],0x5
  0x000000011ce41cb4:   je     0x000000011ce41cbb
  0x000000011ce41cb6:   call   Stub::nmethod_entry_barrier  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@0 (line 11)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000000011ce41cbb:   mov    eax,DWORD PTR [rsi+0xc]      ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
  0x000000011ce41cbe:   add    rsp,0x30
  0x000000011ce41cc2:   pop    rbp
  0x000000011ce41cc3:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x000000011ce41cca:   ja     0x000000011ce41cd1
  0x000000011ce41cd0:   ret    
  0x000000011ce41cd1:   movabs r10,0x11ce41cc3              ;   {internal_word}
  0x000000011ce41cdb:   mov    QWORD PTR [r15+0x390],r10
  0x000000011ce41ce2:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x000000011ce41ce7:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011ce41cee:   mov    QWORD PTR [r15+0x428],0x0
  0x000000011ce41cf9:   mov    QWORD PTR [r15+0x430],0x0
  0x000000011ce41d04:   add    rsp,0x30
  0x000000011ce41d08:   pop    rbp
  0x000000011ce41d09:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ce41d0e:   hlt    
  0x000000011ce41d0f:   hlt    
[Exception Handler]
  0x000000011ce41d10:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x000000011ce41d15:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011ce41d1f:   and    rsp,0xfffffffffffffff0
  0x000000011ce41d23:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ce41d28:   hlt    
[Deopt Handler Code]
  0x000000011ce41d29:   movabs r10,0x11ce41d29              ;   {section_word}
  0x000000011ce41d33:   push   r10
  0x000000011ce41d35:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce41d3a:   hlt    
  0x000000011ce41d3b:   hlt    
  0x000000011ce41d3c:   hlt    
  0x000000011ce41d3d:   hlt    
  0x000000011ce41d3e:   hlt    
  0x000000011ce41d3f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='135' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='60416' iicount='1' osr_bci='10' level='3' stamp='2.133' comment='tiered' hot_count='60416'/>
<writer thread='23555'/>
<nmethod compile_id='135' compile_kind='osr' compiler='c1' level='3' entry='0x00000001153690a0' size='1680' address='0x0000000115368f10' relocation_offset='328' insts_offset='400' stub_offset='1104' scopes_data_offset='1184' scopes_pcs_offset='1312' dependencies_offset='1632' nul_chk_table_offset='1640' oops_offset='1152' metadata_offset='1160' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='76602' iicount='1' stamp='2.133'/>
<print_nmethod compile_id='135' compile_kind='osr' compiler='c1' level='3' stamp='2.133'>

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2133  135 %     3       foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers @ 10 (38 bytes)
 total in heap  [0x0000000115368f10,0x00000001153695a0] = 1680
 relocation     [0x0000000115369058,0x00000001153690a0] = 72
 main code      [0x00000001153690a0,0x0000000115369360] = 704
 stub code      [0x0000000115369360,0x0000000115369390] = 48
 oops           [0x0000000115369390,0x0000000115369398] = 8
 metadata       [0x0000000115369398,0x00000001153693b0] = 24
 scopes data    [0x00000001153693b0,0x0000000115369430] = 128
 scopes pcs     [0x0000000115369430,0x0000000115369570] = 320
 dependencies   [0x0000000115369570,0x0000000115369578] = 8
 nul chk table  [0x0000000115369578,0x00000001153695a0] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x00000001153690a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00000001153690a7:   push   rbp
  0x00000001153690a8:   sub    rsp,0x50
  0x00000001153690ac:   cmp    DWORD PTR [r15+0x20],0x5
  0x00000001153690b4:   je     0x00000001153690bb
  0x00000001153690b6:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00000001153690bb:   movabs rdi,0x16c00b000              ;   {metadata(method data for {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153690c5:   mov    ebx,DWORD PTR [rdi+0xac]
  0x00000001153690cb:   add    ebx,0x2
  0x00000001153690ce:   mov    DWORD PTR [rdi+0xac],ebx
  0x00000001153690d4:   and    ebx,0x7fe
  0x00000001153690da:   cmp    ebx,0x0
  0x00000001153690dd:   je     0x00000001153692bc           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@0 (line 91)
  0x00000001153690e3:   mov    edi,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x00000001153692dd
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@5 (line 92)
  0x00000001153690e6:   mov    ebx,0x0
  0x00000001153690eb:   mov    eax,0x0
  0x00000001153690f0:   jmp    0x00000001153691ee           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@10 (line 92)
  0x00000001153690f5:   data16 xchg ax,ax
  0x00000001153690f8:   cmp    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x00000001153692e2
  0x00000001153690fb:   jae    0x00000001153692ec
  0x0000000115369101:   movsxd rdx,ebx
  0x0000000115369104:   mov    edx,DWORD PTR [rsi+rdx*4+0x10]
  0x0000000115369108:   shl    rdx,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011536910c:   cmp    rax,QWORD PTR [rdx]          ; implicit exception: dispatches to 0x00000001153692fa
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011536910f:   mov    rcx,rdx
  0x0000000115369112:   movabs r8,0x16c00b000               ;   {metadata(method data for {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x000000011536911c:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011536911f:   movabs r10,0x12ac00000
  0x0000000115369129:   add    rcx,r10
  0x000000011536912c:   cmp    rcx,QWORD PTR [r8+0x120]
  0x0000000115369133:   jne    0x0000000115369142
  0x0000000115369135:   add    QWORD PTR [r8+0x128],0x1
  0x000000011536913d:   jmp    0x00000001153691a2
  0x0000000115369142:   cmp    rcx,QWORD PTR [r8+0x130]
  0x0000000115369149:   jne    0x0000000115369158
  0x000000011536914b:   add    QWORD PTR [r8+0x138],0x1
  0x0000000115369153:   jmp    0x00000001153691a2
  0x0000000115369158:   cmp    QWORD PTR [r8+0x120],0x0
  0x0000000115369160:   jne    0x0000000115369179
  0x0000000115369162:   mov    QWORD PTR [r8+0x120],rcx
  0x0000000115369169:   mov    QWORD PTR [r8+0x128],0x1
  0x0000000115369174:   jmp    0x00000001153691a2
  0x0000000115369179:   cmp    QWORD PTR [r8+0x130],0x0
  0x0000000115369181:   jne    0x000000011536919a
  0x0000000115369183:   mov    QWORD PTR [r8+0x130],rcx
  0x000000011536918a:   mov    QWORD PTR [r8+0x138],0x1
  0x0000000115369195:   jmp    0x00000001153691a2
  0x000000011536919a:   add    QWORD PTR [r8+0x110],0x1
  0x00000001153691a2:   mov    edx,DWORD PTR [rdx+0xc]      ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x00000001153691a5:   add    edx,eax
  0x00000001153691a7:   inc    ebx
  0x00000001153691a9:   movabs rax,0x16c00b000              ;   {metadata(method data for {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153691b3:   mov    ecx,DWORD PTR [rax+0xb0]
  0x00000001153691b9:   add    ecx,0x2
  0x00000001153691bc:   mov    DWORD PTR [rax+0xb0],ecx
  0x00000001153691c2:   and    ecx,0x3ffe
  0x00000001153691c8:   cmp    ecx,0x0
  0x00000001153691cb:   je     0x00000001153692ff           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x00000001153691d1:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x00000001153691d8:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00000001153691db:   movabs rax,0x16c00b000              ;   {metadata(method data for {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153691e5:   inc    DWORD PTR [rax+0x148]
  0x00000001153691eb:   mov    rax,rdx                      ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x00000001153691ee:   cmp    ebx,edi
  0x00000001153691f0:   movabs rdx,0x16c00b000              ;   {metadata(method data for {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153691fa:   movabs rcx,0x100
  0x0000000115369204:   jl     0x0000000115369214
  0x000000011536920a:   movabs rcx,0xf0
  0x0000000115369214:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x0000000115369218:   lea    r8,[r8+0x1]
  0x000000011536921c:   mov    QWORD PTR [rdx+rcx*1],r8
  0x0000000115369220:   jl     0x00000001153690f8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
  0x0000000115369226:   add    rsp,0x50
  0x000000011536922a:   pop    rbp
  0x000000011536922b:   cmp    rsp,QWORD PTR [r15+0x378]    ;   {poll_return}
  0x0000000115369232:   ja     0x0000000115369320
  0x0000000115369238:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@37 (line 95)
  0x0000000115369239:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000115369240:   push   rbp
  0x0000000115369241:   sub    rsp,0x50
  0x0000000115369245:   data16 xchg ax,ax
  0x0000000115369248:   cmp    DWORD PTR [r15+0x20],0x0
  0x0000000115369250:   je     0x0000000115369257
  0x0000000115369252:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x0000000115369257:   mov    edi,0x20
  0x000000011536925c:   movsxd rdi,edi
  0x000000011536925f:   mov    ebx,DWORD PTR [rsi+rdi*1]
  0x0000000115369262:   mov    edi,0x18
  0x0000000115369267:   movsxd rdi,edi
  0x000000011536926a:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x000000011536926e:   mov    edi,0x10
  0x0000000115369273:   movsxd rdi,edi
  0x0000000115369276:   mov    edx,DWORD PTR [rsi+rdi*1]
  0x0000000115369279:   mov    edi,0x8
  0x000000011536927e:   movsxd rdi,edi
  0x0000000115369281:   mov    ecx,DWORD PTR [rsi+rdi*1]
  0x0000000115369284:   mov    rdi,rsi
  0x0000000115369287:   mov    DWORD PTR [rsp+0x38],ebx
  0x000000011536928b:   mov    QWORD PTR [rsp+0x30],rax
  0x0000000115369290:   mov    DWORD PTR [rsp+0x2c],edx
  0x0000000115369294:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000115369298:   call   0x000000010c859500           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011536929d:   mov    ecx,DWORD PTR [rsp+0x28]
  0x00000001153692a1:   mov    rbx,rcx
  0x00000001153692a4:   mov    edx,DWORD PTR [rsp+0x2c]
  0x00000001153692a8:   mov    rdi,rdx
  0x00000001153692ab:   mov    rax,QWORD PTR [rsp+0x30]
  0x00000001153692b0:   mov    rsi,rax
  0x00000001153692b3:   mov    eax,DWORD PTR [rsp+0x38]
  0x00000001153692b7:   jmp    0x00000001153691ee
  0x00000001153692bc:   movabs r10,0x16c000fb8              ;   {metadata({method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x00000001153692c6:   mov    QWORD PTR [rsp+0x8],r10
  0x00000001153692cb:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00000001153692d3:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@-1 (line 91)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001153692d8:   jmp    0x00000001153690e3
  0x00000001153692dd:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@5 (line 92)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153692e2:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153692e7:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153692ec:   mov    QWORD PTR [rsp],rbx
  0x00000001153692f0:   mov    QWORD PTR [rsp+0x8],rsi
  0x00000001153692f5:   call   0x000000011c9bb800           ; ImmutableOopMap {rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001153692fa:   call   0x000000011c9bc100           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001153692ff:   movabs r10,0x16c000fb8              ;   {metadata({method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;)}
  0x0000000115369309:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011536930e:   mov    QWORD PTR [rsp],0x21
  0x0000000115369316:   call   0x000000011c9c1480           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011536931b:   jmp    0x00000001153691d1
  0x0000000115369320:   movabs r10,0x11536922b              ;   {internal_word}
  0x000000011536932a:   mov    QWORD PTR [r15+0x390],r10
  0x0000000115369331:   jmp    0x000000011c907280           ;   {runtime_call SafepointBlob}
  0x0000000115369336:   mov    rax,QWORD PTR [r15+0x428]
  0x000000011536933d:   mov    QWORD PTR [r15+0x428],0x0
  0x0000000115369348:   mov    QWORD PTR [r15+0x430],0x0
  0x0000000115369353:   add    rsp,0x50
  0x0000000115369357:   pop    rbp
  0x0000000115369358:   jmp    0x000000011c9bb200           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011536935d:   hlt    
  0x000000011536935e:   hlt    
  0x000000011536935f:   hlt    
[Exception Handler]
  0x0000000115369360:   call   0x000000011c9bdf00           ;   {no_reloc}
  0x0000000115369365:   movabs rdi,0x10caf9cc6              ;   {external_word}
  0x000000011536936f:   and    rsp,0xfffffffffffffff0
  0x0000000115369373:   call   0x000000010c6ccd90           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000115369378:   hlt    
[Deopt Handler Code]
  0x0000000115369379:   movabs r10,0x115369379              ;   {section_word}
  0x0000000115369383:   push   r10
  0x0000000115369385:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011536938a:   hlt    
  0x000000011536938b:   hlt    
  0x000000011536938c:   hlt    
  0x000000011536938d:   hlt    
  0x000000011536938e:   hlt    
  0x000000011536938f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<task_queued compile_id='136' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1171224' iicount='1' osr_bci='10' stamp='2.142' comment='tiered' hot_count='1171224'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='136' compile_kind='osr' compiler='c2' level='4' entry='0x000000011ce41f80' size='1608' address='0x000000011ce41e10' relocation_offset='328' insts_offset='368' stub_offset='856' scopes_data_offset='912' scopes_pcs_offset='1104' dependencies_offset='1536' nul_chk_table_offset='1544' oops_offset='880' metadata_offset='888' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1447492' iicount='1' stamp='2.145'/>
<make_not_entrant thread='30467' compile_id='135' compile_kind='osr' compiler='c1' level='3' stamp='2.145'/>
<print_nmethod compile_id='136' compile_kind='osr' compiler='c2' level='4' stamp='2.145'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2144  136 %     4       foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers @ 10 (38 bytes)
 total in heap  [0x000000011ce41e10,0x000000011ce42458] = 1608
 relocation     [0x000000011ce41f58,0x000000011ce41f70] = 24
 main code      [0x000000011ce41f80,0x000000011ce42168] = 488
 stub code      [0x000000011ce42168,0x000000011ce42180] = 24
 oops           [0x000000011ce42180,0x000000011ce42188] = 8
 metadata       [0x000000011ce42188,0x000000011ce421a0] = 24
 scopes data    [0x000000011ce421a0,0x000000011ce42260] = 192
 scopes pcs     [0x000000011ce42260,0x000000011ce42410] = 432
 dependencies   [0x000000011ce42410,0x000000011ce42418] = 8
 nul chk table  [0x000000011ce42418,0x000000011ce42458] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  0x000000011ce41f80:   call   0x000000010c7b9fd0           ;   {runtime_call os::breakpoint()}
  0x000000011ce41f85:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x000000011ce41f90:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce41f97:   push   rbp
  0x000000011ce41f98:   sub    rsp,0x30
  0x000000011ce41f9c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce41fa4:   jne    0x000000011ce4215c
  0x000000011ce41faa:   mov    rbx,QWORD PTR [rsi+0x18]
  0x000000011ce41fae:   mov    r13d,DWORD PTR [rsi+0x20]
  0x000000011ce41fb2:   mov    ebp,DWORD PTR [rsi+0x10]
  0x000000011ce41fb5:   mov    r14d,DWORD PTR [rsi+0x8]
  0x000000011ce41fb9:   mov    rdi,rsi
  0x000000011ce41fbc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce41fc0:   movabs r10,0x10c859500
  0x000000011ce41fca:   call   r10
  0x000000011ce41fcd:   mov    r11d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x000000011ce42148
  0x000000011ce41fd1:   movabs r10,0x12bc011e8              ;   {metadata(&apos;foo/rida/ParentGetterWrapper&apos;[])}
  0x000000011ce41fdb:   movabs r8,0x12ac00000
  0x000000011ce41fe5:   add    r8,r11
  0x000000011ce41fe8:   mov    r11,QWORD PTR [r8+0x40]
  0x000000011ce41fec:   cmp    r11,r10
  0x000000011ce41fef:   jne    0x000000011ce42124
  0x000000011ce41ff5:   cmp    r14d,ebp
  0x000000011ce41ff8:   jge    0x000000011ce420f7           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@10 (line 92)
  0x000000011ce41ffe:   mov    ecx,DWORD PTR [rbx+0xc]
  0x000000011ce42001:   lea    r11d,[r14+0x1]
  0x000000011ce42005:   xor    r9d,r9d
  0x000000011ce42008:   test   r11d,r11d
  0x000000011ce4200b:   cmovl  r11d,r9d
  0x000000011ce4200f:   cmp    r11d,ebp
  0x000000011ce42012:   cmovg  r11d,ebp
  0x000000011ce42016:   cmp    r14d,ecx
  0x000000011ce42019:   jae    0x000000011ce4210c
  0x000000011ce4201f:   mov    r8d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce42024:   add    r13d,DWORD PTR [r12+r8*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@28 (line 93)
  0x000000011ce42029:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@30 (line 92)
  0x000000011ce4202c:   cmp    r14d,r11d
  0x000000011ce4202f:   jl     0x000000011ce42016           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
  0x000000011ce42031:   movsxd r10,ecx
  0x000000011ce42034:   movsxd r11,ebp
  0x000000011ce42037:   cmp    r11,r10
  0x000000011ce4203a:   mov    r10d,ebp
  0x000000011ce4203d:   cmovg  r10d,ecx
  0x000000011ce42041:   lea    edi,[r10-0x3]
  0x000000011ce42045:   mov    r11d,0x80000000
  0x000000011ce4204b:   cmp    r10d,edi
  0x000000011ce4204e:   cmovl  edi,r11d
  0x000000011ce42052:   cmp    r14d,edi
  0x000000011ce42055:   jge    0x000000011ce420d4
  0x000000011ce4205b:   mov    r8d,0xfa0
  0x000000011ce42061:   mov    esi,edi
  0x000000011ce42063:   sub    esi,r14d
  0x000000011ce42066:   cmp    edi,r14d
  0x000000011ce42069:   cmovl  esi,r9d
  0x000000011ce4206d:   cmp    esi,0xfa0
  0x000000011ce42073:   cmova  esi,r8d
  0x000000011ce42077:   add    esi,r14d
  0x000000011ce4207a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce42080:   mov    r11d,DWORD PTR [rbx+r14*4+0x10]
  0x000000011ce42085:   add    r13d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
  0x000000011ce4208a:   movsxd rax,r14d
  0x000000011ce4208d:   mov    r11d,DWORD PTR [rbx+rax*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce42092:   mov    edx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce42097:   mov    r10d,DWORD PTR [rbx+rax*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce4209c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce420a0:   mov    r11d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce420a5:   mov    r10d,DWORD PTR [rbx+rax*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce420aa:   mov    eax,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce420af:   add    r13d,edx
  0x000000011ce420b2:   add    r13d,r11d
  0x000000011ce420b5:   add    r13d,eax                     ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@28 (line 93)
  0x000000011ce420b8:   add    r14d,0x4                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@30 (line 92)
  0x000000011ce420bc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce420c0:   cmp    r14d,esi
  0x000000011ce420c3:   jl     0x000000011ce42080           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x000000011ce420c5:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x000000011ce420cc:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
                                                            ;   {poll}
  0x000000011ce420cf:   cmp    r14d,edi
  0x000000011ce420d2:   jl     0x000000011ce42061
  0x000000011ce420d4:   cmp    r14d,ebp
  0x000000011ce420d7:   jge    0x000000011ce420f7
  0x000000011ce420d9:   data16 xchg ax,ax
  0x000000011ce420dc:   nop    DWORD PTR [rax+0x0]
  0x000000011ce420e0:   cmp    r14d,ecx
  0x000000011ce420e3:   jae    0x000000011ce4210c
  0x000000011ce420e5:   mov    r11d,DWORD PTR [rbx+r14*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce420ea:   add    r13d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce4213c
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@28 (line 93)
  0x000000011ce420ef:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@30 (line 92)
  0x000000011ce420f2:   cmp    r14d,ebp
  0x000000011ce420f5:   jl     0x000000011ce420dc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
  0x000000011ce420f7:   mov    esi,0xffffff45
  0x000000011ce420fc:   mov    DWORD PTR [rsp],r13d
  0x000000011ce42100:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce42105:   xchg   ax,ax
  0x000000011ce42107:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce4210c:   mov    esi,0xffffffe4
  0x000000011ce42111:   mov    DWORD PTR [rsp],r13d
  0x000000011ce42115:   mov    QWORD PTR [rsp+0x10],rbx
  0x000000011ce4211a:   mov    DWORD PTR [rsp+0x18],r14d
  0x000000011ce4211f:   call   0x000000011c906180           ; ImmutableOopMap {[16]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce42124:   mov    esi,0xffffff8d
  0x000000011ce42129:   mov    DWORD PTR [rsp],r13d
  0x000000011ce4212d:   mov    QWORD PTR [rsp+0x8],rbx
  0x000000011ce42132:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce42137:   call   0x000000011c906180           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@10 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce4213c:   mov    esi,0xfffffff6
  0x000000011ce42141:   xchg   ax,ax
  0x000000011ce42143:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce42148:   mov    esi,0xffffff76
  0x000000011ce4214d:   mov    DWORD PTR [rsp],r13d
  0x000000011ce42151:   mov    DWORD PTR [rsp+0x4],r14d
  0x000000011ce42156:   nop
  0x000000011ce42157:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@10 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce4215c:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce42161:   jmp    0x000000011ce41faa
  0x000000011ce42166:   hlt    
  0x000000011ce42167:   hlt    
[Exception Handler]
  0x000000011ce42168:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce4216d:   call   0x000000011ce42172
  0x000000011ce42172:   sub    QWORD PTR [rsp],0x5
  0x000000011ce42177:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce4217c:   hlt    
  0x000000011ce4217d:   hlt    
  0x000000011ce4217e:   hlt    
  0x000000011ce4217f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<deoptimized thread='8707' reason='constraint' pc='0x000000011536931b' compile_id='135' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='33' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1449752' iicount='1'/>
</deoptimized>
<task_queued compile_id='137' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1450776' iicount='1' stamp='2.153' comment='tiered' hot_count='1'/>
<writer thread='30467'/>

============================= C2-compiled nmethod ==============================
<nmethod compile_id='137' compiler='c2' level='4' entry='0x000000011ce42600' size='1472' address='0x000000011ce42490' relocation_offset='328' insts_offset='368' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='936' dependencies_offset='1400' nul_chk_table_offset='1408' oops_offset='712' metadata_offset='720' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1450776' iicount='1' stamp='2.155'/>
<print_nmethod compile_id='137' compiler='c2' level='4' stamp='2.155'>
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2154  137       4       foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers (38 bytes)
 total in heap  [0x000000011ce42490,0x000000011ce42a50] = 1472
 relocation     [0x000000011ce425d8,0x000000011ce425f0] = 24
 main code      [0x000000011ce42600,0x000000011ce42740] = 320
 stub code      [0x000000011ce42740,0x000000011ce42758] = 24
 oops           [0x000000011ce42758,0x000000011ce42760] = 8
 metadata       [0x000000011ce42760,0x000000011ce42778] = 24
 scopes data    [0x000000011ce42778,0x000000011ce42838] = 192
 scopes pcs     [0x000000011ce42838,0x000000011ce42a08] = 464
 dependencies   [0x000000011ce42a08,0x000000011ce42a10] = 8
 nul chk table  [0x000000011ce42a10,0x000000011ce42a50] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000016c000fb8} &apos;benchmarkVirtualGetterWrappers&apos; &apos;([Lfoo/rida/ParentGetterWrapper;)I&apos; in &apos;foo/rida/SimpleBenchmark&apos;
  # parm0:    rsi:rsi   = &apos;[Lfoo/rida/ParentGetterWrapper;&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011ce42600:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ce42607:   push   rbp
  0x000000011ce42608:   sub    rsp,0x20
  0x000000011ce4260c:   cmp    DWORD PTR [r15+0x20],0x0
  0x000000011ce42614:   jne    0x000000011ce42730           ;*synchronization entry
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@-1 (line 91)
  0x000000011ce4261a:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ce42620:   mov    ebp,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ce42724
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@5 (line 92)
  0x000000011ce42623:   test   ebp,ebp
  0x000000011ce42625:   jbe    0x000000011ce4270c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
  0x000000011ce4262b:   lea    r10d,[rbp-0x1]
  0x000000011ce4262f:   cmp    r10d,ebp
  0x000000011ce42632:   jae    0x000000011ce426fc
  0x000000011ce42638:   mov    r11d,DWORD PTR [rsi+0x10]    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce4263c:   nop    DWORD PTR [rax+0x0]
  0x000000011ce42640:   mov    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce42645:   lea    r9d,[rbp-0x3]
  0x000000011ce42649:   mov    edi,0x1
  0x000000011ce4264e:   cmp    r9d,0x1
  0x000000011ce42652:   jle    0x000000011ce426d1
  0x000000011ce42658:   xor    r8d,r8d
  0x000000011ce4265b:   mov    ebx,0xfa0
  0x000000011ce42660:   mov    eax,ebp
  0x000000011ce42662:   sub    eax,edi
  0x000000011ce42664:   add    eax,0xfffffffd
  0x000000011ce42667:   cmp    r9d,edi
  0x000000011ce4266a:   cmovl  eax,r8d
  0x000000011ce4266e:   cmp    eax,0xfa0
  0x000000011ce42673:   cmova  eax,ebx
  0x000000011ce42676:   add    eax,edi
  0x000000011ce42678:   nop    DWORD PTR [rax+rax*1+0x0]    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@16 (line 92)
  0x000000011ce42680:   mov    r10d,DWORD PTR [rsi+rdi*4+0x10]
  0x000000011ce42685:   add    ecx,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
  0x000000011ce4268a:   mov    r10d,DWORD PTR [rsi+rdi*4+0x14];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce4268f:   mov    r13d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce42694:   mov    r11d,DWORD PTR [rsi+rdi*4+0x18];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce42699:   nop    DWORD PTR [rax+0x0]
  0x000000011ce426a0:   mov    r10d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce426a5:   mov    r11d,DWORD PTR [rsi+rdi*4+0x1c];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce426aa:   mov    r11d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
                                                            ;*getfield number {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.ParentGetterWrapper::getNumber@1 (line 11)
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
  0x000000011ce426af:   add    ecx,r13d
  0x000000011ce426b2:   add    ecx,r10d
  0x000000011ce426b5:   add    ecx,r11d                     ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@28 (line 93)
  0x000000011ce426b8:   add    edi,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@30 (line 92)
  0x000000011ce426bb:   cmp    edi,eax
  0x000000011ce426bd:   data16 xchg ax,ax
  0x000000011ce426c0:   jl     0x000000011ce42680           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x000000011ce426c2:   mov    r10,QWORD PTR [r15+0x380]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
  0x000000011ce426c9:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@33 (line 92)
                                                            ;   {poll}
  0x000000011ce426cc:   cmp    edi,r9d
  0x000000011ce426cf:   jl     0x000000011ce42660
  0x000000011ce426d1:   cmp    edi,ebp
  0x000000011ce426d3:   jge    0x000000011ce426eb
  0x000000011ce426d5:   data16 xchg ax,ax                   ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@16 (line 92)
  0x000000011ce426d8:   mov    r11d,DWORD PTR [rsi+rdi*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@19 (line 92)
  0x000000011ce426dd:   data16 xchg ax,ax
  0x000000011ce426e0:   add    ecx,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x000000011ce42718
                                                            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@28 (line 93)
  0x000000011ce426e5:   inc    edi                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@30 (line 92)
  0x000000011ce426e7:   cmp    edi,ebp
  0x000000011ce426e9:   jl     0x000000011ce426d8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
  0x000000011ce426eb:   mov    esi,0xffffff45
  0x000000011ce426f0:   mov    DWORD PTR [rsp],ecx
  0x000000011ce426f3:   mov    DWORD PTR [rsp+0x4],edi
  0x000000011ce426f7:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce426fc:   mov    QWORD PTR [rsp],rsi
  0x000000011ce42700:   mov    esi,0xffffff76
  0x000000011ce42705:   xchg   ax,ax
  0x000000011ce42707:   call   0x000000011c906180           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce4270c:   mov    esi,0xffffff45
  0x000000011ce42711:   xchg   ax,ax
  0x000000011ce42713:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@13 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce42718:   mov    esi,0xfffffff6
  0x000000011ce4271d:   xchg   ax,ax
  0x000000011ce4271f:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*invokevirtual getNumber {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@25 (line 93)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce42724:   mov    esi,0xfffffff6
  0x000000011ce42729:   xchg   ax,ax
  0x000000011ce4272b:   call   0x000000011c906180           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - foo.rida.SimpleBenchmark::benchmarkVirtualGetterWrappers@5 (line 92)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ce42730:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x000000011ce42735:   jmp    0x000000011ce4261a
  0x000000011ce4273a:   hlt    
  0x000000011ce4273b:   hlt    
  0x000000011ce4273c:   hlt    
  0x000000011ce4273d:   hlt    
  0x000000011ce4273e:   hlt    
  0x000000011ce4273f:   hlt    
[Exception Handler]
  0x000000011ce42740:   jmp    0x000000011c9bc400           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ce42745:   call   0x000000011ce4274a
  0x000000011ce4274a:   sub    QWORD PTR [rsp],0x5
  0x000000011ce4274f:   jmp    0x000000011c906520           ;   {runtime_call DeoptimizationBlob}
  0x000000011ce42754:   hlt    
  0x000000011ce42755:   hlt    
  0x000000011ce42756:   hlt    
  0x000000011ce42757:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
</print_nmethod>
<writer thread='8707'/>
<uncommon_trap thread='8707' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='136' compile_kind='osr' compiler='c2' level='4' stamp='2.162'>
<jvms bci='13' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1450776' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='8707' compile_id='136' compile_kind='osr' compiler='c2' level='4' stamp='2.162'/>
<task_queued compile_id='138' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='280' count='256' iicount='256' level='3' stamp='2.163' comment='tiered' hot_count='256'/>
<task_queued compile_id='139' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='256' iicount='256' level='3' stamp='2.163' comment='tiered' hot_count='256'/>
<task_queued compile_id='140' method='sun.invoke.util.Wrapper forPrimitiveType (Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' bytes='122' count='296' iicount='296' level='3' stamp='2.163' comment='tiered' hot_count='296'/>
<statistics type='deoptimization'>
Deoptimization traps recorded:
    12 (100.0%) total
                       constraint/none/nop: 6 (50.0%)
         unstable_if/reinterpret/if_icmpge: 6 (50.0%)
</statistics>
<writer thread='19971'/>
<destroy_vm stamp='2.164'/>
<tty_done stamp='2.165'/>
</tty>
<compilation_log thread='23555'>
<start_compile_thread name='C1 CompilerThread0' thread='23555' process='13980' stamp='0.029'/>
<task compile_id='1' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='385' iicount='385' level='3' stamp='0.031'>
<phase name='setup' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='buildIR' stamp='0.031'>
<type id='1199' name='void'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1347' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' iicount='385'/>
<parse method='1347'  stamp='0.031'>
<phase name='parse_hir' stamp='0.031'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1204'/>
<phase_done stamp='0.031'/>
</phase>
<parse_done stamp='0.031'/>
</parse>
<phase name='optimize_blocks' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='gvn' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='optimize_null_checks' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase_done stamp='0.031'/>
</phase>
<phase name='emit_lir' stamp='0.031'>
<phase name='lirGeneration' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='linearScan' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase_done stamp='0.031'/>
</phase>
<phase name='codeemit' stamp='0.031'>
<phase_done stamp='0.031'/>
</phase>
<phase name='codeinstall' stamp='0.031'>
<dependency type='no_finalizable_subclasses' ctxk='1204'/>
<phase_done stamp='0.497'/>
</phase>
<code_cache total_blobs='293' nmethods='1' adapters='205' free_code_cache='250418304'/>
<task_done success='1' nmsize='264' count='522' stamp='0.497'/>
</task>
<task compile_id='4' method='java.lang.String length ()I' bytes='11' count='405' iicount='405' level='3' stamp='0.497'>
<phase name='setup' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='buildIR' stamp='0.497'>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='length' return='1197' flags='1' bytes='11' iicount='416'/>
<parse method='1347'  stamp='0.497'>
<phase name='parse_hir' stamp='0.497'>
<bc code='182' bci='6'/>
<type id='1195' name='byte'/>
<method id='1349' holder='1205' name='coder' return='1195' flags='0' bytes='15' iicount='764'/>
<call method='1349' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='0.497'/>
</parse>
<phase_done stamp='0.498'/>
</phase>
<parse_done stamp='0.498'/>
</parse>
<phase name='optimize_blocks' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase name='gvn' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase name='optimize_null_checks' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase_done stamp='0.498'/>
</phase>
<phase name='emit_lir' stamp='0.498'>
<phase name='lirGeneration' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase name='linearScan' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase_done stamp='0.498'/>
</phase>
<phase name='codeemit' stamp='0.498'>
<phase_done stamp='0.498'/>
</phase>
<phase name='codeinstall' stamp='0.498'>
<phase_done stamp='0.505'/>
</phase>
<code_cache total_blobs='294' nmethods='2' adapters='205' free_code_cache='250417152'/>
<task_done success='1' nmsize='416' count='700' inlined_bytes='15' stamp='0.505'/>
</task>
<task compile_id='2' method='java.lang.String coder ()B' bytes='15' count='1278' iicount='1278' level='3' stamp='0.505'>
<phase name='setup' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='buildIR' stamp='0.505'>
<type id='1195' name='byte'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='coder' return='1195' flags='0' bytes='15' iicount='1285'/>
<parse method='1347'  stamp='0.505'>
<phase name='parse_hir' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<parse_done stamp='0.505'/>
</parse>
<phase name='optimize_blocks' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='gvn' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='optimize_null_checks' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase_done stamp='0.505'/>
</phase>
<phase name='emit_lir' stamp='0.505'>
<phase name='lirGeneration' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='linearScan' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase_done stamp='0.505'/>
</phase>
<phase name='codeemit' stamp='0.505'>
<phase_done stamp='0.505'/>
</phase>
<phase name='codeinstall' stamp='0.505'>
<phase_done stamp='0.510'/>
</phase>
<code_cache total_blobs='295' nmethods='3' adapters='205' free_code_cache='250416256'/>
<task_done success='1' nmsize='304' count='2178' stamp='0.510'/>
</task>
<task compile_id='3' method='java.lang.String isLatin1 ()Z' bytes='19' count='1298' iicount='1298' level='3' stamp='0.510'>
<phase name='setup' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='buildIR' stamp='0.510'>
<type id='1191' name='boolean'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='isLatin1' return='1191' flags='0' bytes='19' iicount='1298'/>
<parse method='1347'  stamp='0.510'>
<phase name='parse_hir' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<parse_done stamp='0.510'/>
</parse>
<phase name='optimize_blocks' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='gvn' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='optimize_null_checks' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase_done stamp='0.510'/>
</phase>
<phase name='emit_lir' stamp='0.510'>
<phase name='lirGeneration' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='linearScan' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase_done stamp='0.510'/>
</phase>
<phase name='codeemit' stamp='0.510'>
<phase_done stamp='0.510'/>
</phase>
<phase name='codeinstall' stamp='0.510'>
<phase_done stamp='0.516'/>
</phase>
<code_cache total_blobs='296' nmethods='4' adapters='205' free_code_cache='250415232'/>
<task_done success='1' nmsize='376' count='1298' stamp='0.516'/>
</task>
<task compile_id='5' method='jdk.internal.util.Preconditions checkIndex (IILjava/util/function/BiFunction;)I' bytes='18' count='967' iicount='967' level='3' stamp='0.516'>
<phase name='setup' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='buildIR' stamp='0.516'>
<type id='1197' name='int'/>
<klass id='1348' name='java.util.function.BiFunction' flags='1537'/>
<klass id='1347' name='jdk.internal.util.Preconditions' flags='1'/>
<method id='1349' holder='1347' name='checkIndex' return='1197' arguments='1197 1197 1348' flags='9' bytes='18' iicount='967'/>
<parse method='1349'  stamp='0.516'>
<phase name='parse_hir' stamp='0.516'>
<bc code='184' bci='12'/>
<klass id='1214' name='java.lang.RuntimeException' flags='1'/>
<method id='1351' holder='1347' name='outOfBoundsCheckIndex' return='1214' arguments='1348 1197 1197' flags='10' bytes='25' iicount='1'/>
<call method='1351' instr='invokestatic'/>
<inline_fail reason='callee uses too much stack'/>
<phase_done stamp='0.516'/>
</phase>
<parse_done stamp='0.516'/>
</parse>
<phase name='optimize_blocks' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='gvn' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='optimize_null_checks' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase_done stamp='0.516'/>
</phase>
<phase name='emit_lir' stamp='0.516'>
<phase name='lirGeneration' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='linearScan' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase_done stamp='0.516'/>
</phase>
<phase name='codeemit' stamp='0.516'>
<phase_done stamp='0.516'/>
</phase>
<phase name='codeinstall' stamp='0.516'>
<phase_done stamp='0.523'/>
</phase>
<code_cache total_blobs='297' nmethods='5' adapters='205' free_code_cache='250414080'/>
<task_done success='1' nmsize='416' count='967' stamp='0.523'/>
</task>
<task compile_id='6' method='java.lang.String charAt (I)C' bytes='25' count='946' iicount='946' level='3' stamp='0.523'>
<phase name='setup' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='buildIR' stamp='0.523'>
<type id='1192' name='char'/>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='charAt' return='1192' arguments='1197' flags='1' bytes='25' iicount='946'/>
<parse method='1347'  stamp='0.523'>
<phase name='parse_hir' stamp='0.523'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<method id='1349' holder='1205' name='isLatin1' return='1191' flags='0' bytes='19' compile_id='3' compiler='c1' level='3' iicount='1298'/>
<call method='1349' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='0.523'/>
</parse>
<bc code='184' bci='12'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1352' name='java.lang.StringLatin1' flags='16'/>
<method id='1353' holder='1352' name='charAt' return='1192' arguments='1339 1197' flags='9' bytes='15' iicount='946'/>
<call method='1353' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1353'>
<bc code='184' bci='3'/>
<type id='1199' name='void'/>
<method id='1355' holder='1205' name='checkIndex' return='1199' arguments='1197 1197' flags='8' bytes='10' iicount='946'/>
<call method='1355' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1355'>
<bc code='184' bci='5'/>
<klass id='1357' name='java.util.function.BiFunction' flags='1537'/>
<klass id='1358' name='jdk.internal.util.Preconditions' flags='1'/>
<method id='1362' holder='1358' name='checkIndex' return='1197' arguments='1197 1197 1357' flags='9' bytes='18' compile_id='5' compiler='c1' level='3' iicount='967'/>
<call method='1362' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.523'/>
</parse>
<parse_done stamp='0.523'/>
</parse>
<bc code='184' bci='21'/>
<klass id='1364' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1365' holder='1364' name='charAt' return='1192' arguments='1339 1197' unloaded='1'/>
<call method='1365' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.523'/>
</phase>
<parse_done stamp='0.523'/>
</parse>
<phase name='optimize_blocks' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='gvn' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='optimize_null_checks' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase_done stamp='0.523'/>
</phase>
<phase name='emit_lir' stamp='0.523'>
<phase name='lirGeneration' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='linearScan' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase_done stamp='0.523'/>
</phase>
<phase name='codeemit' stamp='0.523'>
<phase_done stamp='0.523'/>
</phase>
<phase name='codeinstall' stamp='0.523'>
<phase_done stamp='0.538'/>
</phase>
<code_cache total_blobs='307' nmethods='6' adapters='214' free_code_cache='250401408'/>
<task_done success='1' nmsize='920' count='948' inlined_bytes='44' stamp='0.538'/>
</task>
<task compile_id='9' method='java.util.concurrent.atomic.AtomicLong get ()J' bytes='5' count='287' iicount='289' level='1' stamp='0.538'>
<phase name='setup' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='buildIR' stamp='0.538'>
<type id='1198' name='long'/>
<klass id='1347' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1348' holder='1347' name='get' return='1198' flags='17' bytes='5' iicount='295'/>
<parse method='1348'  stamp='0.538'>
<phase name='parse_hir' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<parse_done stamp='0.538'/>
</parse>
<phase name='optimize_blocks' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='gvn' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='optimize_null_checks' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase_done stamp='0.538'/>
</phase>
<phase name='emit_lir' stamp='0.538'>
<phase name='lirGeneration' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='linearScan' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase_done stamp='0.538'/>
</phase>
<phase name='codeemit' stamp='0.538'>
<phase_done stamp='0.538'/>
</phase>
<phase name='codeinstall' stamp='0.538'>
<phase_done stamp='0.554'/>
</phase>
<code_cache total_blobs='309' nmethods='8' adapters='214' free_code_cache='250399616'/>
<task_done success='1' nmsize='200' count='384' stamp='0.554'/>
</task>
<task compile_id='11' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='495' iicount='497' level='3' stamp='0.554'>
<phase name='setup' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='buildIR' stamp='0.554'>
<type id='1191' name='boolean'/>
<type id='1198' name='long'/>
<klass id='1347' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1348' holder='1347' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' iicount='512'/>
<parse method='1348'  stamp='0.554'>
<phase name='parse_hir' stamp='0.554'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1352' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1352' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<phase_done stamp='0.554'/>
</phase>
<parse_done stamp='0.554'/>
</parse>
<phase name='optimize_blocks' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='gvn' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='optimize_null_checks' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase_done stamp='0.554'/>
</phase>
<phase name='emit_lir' stamp='0.554'>
<phase name='lirGeneration' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='linearScan' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase_done stamp='0.554'/>
</phase>
<phase name='codeemit' stamp='0.554'>
<phase_done stamp='0.554'/>
</phase>
<phase name='codeinstall' stamp='0.554'>
<phase_done stamp='0.559'/>
</phase>
<code_cache total_blobs='312' nmethods='9' adapters='214' free_code_cache='250384896'/>
<task_done success='1' nmsize='296' count='30973' stamp='0.559'/>
</task>
<task compile_id='12' method='java.util.Random nextInt ()I' bytes='7' count='31051' iicount='31053' level='2' stamp='0.559'>
<phase name='setup' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='buildIR' stamp='0.559'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='nextInt' return='1197' flags='1' bytes='7' iicount='31112'/>
<parse method='1348'  stamp='0.559'>
<phase name='parse_hir' stamp='0.559'>
<bc code='182' bci='3'/>
<method id='1350' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' iicount='31231'/>
<call method='1350' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.559'/>
</phase>
<parse_done stamp='0.559'/>
</parse>
<phase name='optimize_blocks' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='gvn' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='optimize_null_checks' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase_done stamp='0.559'/>
</phase>
<phase name='emit_lir' stamp='0.559'>
<phase name='lirGeneration' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='linearScan' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase_done stamp='0.559'/>
</phase>
<phase name='codeemit' stamp='0.559'>
<phase_done stamp='0.559'/>
</phase>
<phase name='codeinstall' stamp='0.559'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='0.563'/>
</phase>
<code_cache total_blobs='314' nmethods='11' adapters='214' free_code_cache='250383232'/>
<task_done success='1' nmsize='288' count='59818' stamp='0.563'/>
</task>
<task compile_id='13' method='java.util.Random next (I)I' bytes='47' count='59977' iicount='59977' level='2' stamp='0.563'>
<phase name='setup' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase name='buildIR' stamp='0.563'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' iicount='59977'/>
<parse method='1348'  stamp='0.563'>
<phase name='parse_hir' stamp='0.563'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1350' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1351' holder='1350' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1351' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1350'/>
<inline_success reason='inline'/>
<parse method='1351'>
<parse_done stamp='0.563'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1352' holder='1350' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='11' compiler='c1' level='3' iicount='59978'/>
<call method='1352' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1350'/>
<inline_fail reason='callee uses too much stack'/>
<phase_done stamp='0.563'/>
</phase>
<parse_done stamp='0.563'/>
</parse>
<phase name='optimize_blocks' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase name='gvn' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase name='optimize_null_checks' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase_done stamp='0.563'/>
</phase>
<phase name='emit_lir' stamp='0.563'>
<phase name='lirGeneration' stamp='0.563'>
<phase_done stamp='0.563'/>
</phase>
<phase name='linearScan' stamp='0.563'>
<phase_done stamp='0.564'/>
</phase>
<phase_done stamp='0.564'/>
</phase>
<phase name='codeemit' stamp='0.564'>
<phase_done stamp='0.564'/>
</phase>
<phase name='codeinstall' stamp='0.564'>
<dependency type='leaf_type' ctxk='1350'/>
<phase_done stamp='0.573'/>
</phase>
<code_cache total_blobs='315' nmethods='12' adapters='214' free_code_cache='250381824'/>
<task_done success='1' nmsize='528' count='96256' inlined_bytes='5' stamp='0.573'/>
</task>
<task compile_id='18' compile_kind='osr' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='96567' iicount='1' osr_bci='15' level='3' stamp='0.573'>
<phase name='setup' stamp='0.573'>
<phase_done stamp='0.573'/>
</phase>
<phase name='buildIR' stamp='0.573'>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateRawWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350'  stamp='0.573'>
<phase name='parse_hir' stamp='0.573'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1353' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='1'/>
<call method='1353' instr='invokespecial'/>
<inline_fail reason='callee uses too much stack'/>
<bc code='182' bci='21'/>
<method id='1355' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='12' compiler='c1' level='2' iicount='96761'/>
<call method='1355' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse method='1355'>
<bc code='182' bci='3'/>
<method id='1357' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='13' compiler='c1' level='2' iicount='96761'/>
<call method='1357' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse_done stamp='0.573'/>
</parse>
<bc code='183' bci='32'/>
<klass id='1348' name='foo.rida.RawWrapper' flags='17'/>
<method id='1359' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' iicount='96760'/>
<call method='1359' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1359'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1361' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='60723'/>
<call method='1361' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1361'>
<parse_done stamp='0.573'/>
</parse>
<parse_done stamp='0.573'/>
</parse>
<phase_done stamp='0.573'/>
</phase>
<parse_done stamp='0.573'/>
</parse>
<phase name='optimize_blocks' stamp='0.573'>
<phase_done stamp='0.573'/>
</phase>
<phase name='gvn' stamp='0.573'>
<phase_done stamp='0.573'/>
</phase>
<phase name='optimize_null_checks' stamp='0.573'>
<phase_done stamp='0.574'/>
</phase>
<phase_done stamp='0.574'/>
</phase>
<phase name='emit_lir' stamp='0.574'>
<phase name='lirGeneration' stamp='0.574'>
<phase_done stamp='0.574'/>
</phase>
<phase name='linearScan' stamp='0.574'>
<phase_done stamp='0.574'/>
</phase>
<phase_done stamp='0.574'/>
</phase>
<phase name='codeemit' stamp='0.574'>
<phase_done stamp='0.574'/>
</phase>
<phase name='codeinstall' stamp='0.574'>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<phase_done stamp='0.595'/>
</phase>
<code_cache total_blobs='317' nmethods='14' adapters='214' free_code_cache='250377472'/>
<task_done success='1' nmsize='1832' count='1' backedge_count='768504' inlined_bytes='18' stamp='0.595'/>
</task>
<task compile_id='8' method='java.lang.String checkIndex (II)V' bytes='10' count='948' iicount='948' level='3' stamp='0.595'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='948' stamp='0.595'/>
</task>
<task compile_id='7' method='java.lang.StringLatin1 charAt ([BI)C' bytes='15' count='948' iicount='948' level='3' stamp='0.595'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='948' stamp='0.595'/>
</task>
<task compile_id='14' method='foo.rida.RawWrapper &lt;init&gt; (I)V' bytes='10' count='774082' iicount='774096' level='2' stamp='0.595'>
<phase name='setup' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='buildIR' stamp='0.595'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.RawWrapper' flags='17'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' iicount='774542'/>
<parse method='1348'  stamp='0.595'>
<phase name='parse_hir' stamp='0.595'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1350' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='737571'/>
<call method='1350' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1350'>
<parse_done stamp='0.595'/>
</parse>
<phase_done stamp='0.595'/>
</phase>
<parse_done stamp='0.595'/>
</parse>
<phase name='optimize_blocks' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='gvn' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='optimize_null_checks' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase_done stamp='0.595'/>
</phase>
<phase name='emit_lir' stamp='0.595'>
<phase name='lirGeneration' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='linearScan' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase_done stamp='0.595'/>
</phase>
<phase name='codeemit' stamp='0.595'>
<phase_done stamp='0.595'/>
</phase>
<phase name='codeinstall' stamp='0.595'>
<phase_done stamp='0.602'/>
</phase>
<code_cache total_blobs='319' nmethods='16' adapters='214' free_code_cache='250375552'/>
<task_done success='1' nmsize='256' count='1023025' inlined_bytes='1' stamp='0.602'/>
</task>
<task compile_id='22' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='62928' iicount='1' osr_bci='10' level='3' stamp='0.838'>
<phase name='setup' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='buildIR' stamp='0.838'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkRawWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350'  stamp='0.838'>
<phase name='parse_hir' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<parse_done stamp='0.838'/>
</parse>
<phase name='optimize_blocks' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='gvn' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='optimize_null_checks' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase_done stamp='0.838'/>
</phase>
<phase name='emit_lir' stamp='0.838'>
<phase name='lirGeneration' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='linearScan' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase_done stamp='0.838'/>
</phase>
<phase name='codeemit' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='codeinstall' stamp='0.838'>
<phase_done stamp='0.847'/>
</phase>
<code_cache total_blobs='321' nmethods='20' adapters='214' free_code_cache='250380800'/>
<task_done success='1' nmsize='600' count='1' backedge_count='2711966' stamp='0.847'/>
</task>
<task compile_id='29' method='java.lang.Enum ordinal ()I' bytes='5' count='130' iicount='130' level='1' stamp='0.881'>
<phase name='setup' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='buildIR' stamp='0.881'>
<type id='1197' name='int'/>
<klass id='1297' name='java.lang.Enum' flags='1025'/>
<method id='1347' holder='1297' name='ordinal' return='1197' flags='17' bytes='5' iicount='130'/>
<parse method='1347'  stamp='0.881'>
<phase name='parse_hir' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<parse_done stamp='0.881'/>
</parse>
<phase name='optimize_blocks' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='gvn' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='optimize_null_checks' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase_done stamp='0.881'/>
</phase>
<phase name='emit_lir' stamp='0.881'>
<phase name='lirGeneration' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='linearScan' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase_done stamp='0.881'/>
</phase>
<phase name='codeemit' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='codeinstall' stamp='0.881'>
<phase_done stamp='0.884'/>
</phase>
<code_cache total_blobs='362' nmethods='28' adapters='247' free_code_cache='250334336'/>
<task_done success='1' nmsize='192' count='130' stamp='0.884'/>
</task>
<task compile_id='30' method='java.lang.Math min (II)I' bytes='11' count='260' iicount='260' level='3' stamp='0.884'>
<phase name='setup' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='buildIR' stamp='0.884'>
<type id='1197' name='int'/>
<klass id='1347' name='java.lang.Math' flags='17'/>
<method id='1348' holder='1347' name='min' return='1197' arguments='1197 1197' flags='9' bytes='11' iicount='260'/>
<parse method='1348'  stamp='0.884'>
<phase name='parse_hir' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<parse_done stamp='0.884'/>
</parse>
<phase name='optimize_blocks' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='gvn' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='optimize_null_checks' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase_done stamp='0.884'/>
</phase>
<phase name='emit_lir' stamp='0.884'>
<phase name='lirGeneration' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='linearScan' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase_done stamp='0.884'/>
</phase>
<phase name='codeemit' stamp='0.884'>
<phase_done stamp='0.884'/>
</phase>
<phase name='codeinstall' stamp='0.884'>
<phase_done stamp='0.889'/>
</phase>
<code_cache total_blobs='363' nmethods='29' adapters='247' free_code_cache='250333440'/>
<task_done success='1' nmsize='312' count='263' stamp='0.890'/>
</task>
<task compile_id='32' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' level='3' stamp='0.890'>
<phase name='setup' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='buildIR' stamp='0.890'>
<klass id='1347' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1348' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<type id='1197' name='int'/>
<klass id='1305' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1349' holder='1305' name='tabAt' return='1347' arguments='1348 1197' flags='24' bytes='22' iicount='256'/>
<parse method='1349'  stamp='0.890'>
<phase name='parse_hir' stamp='0.890'>
<bc code='182' bci='15'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<type id='1198' name='long'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1353' holder='1291' name='getReferenceAcquire' return='1204' arguments='1204 1198' flags='17' bytes='7' iicount='263'/>
<call method='1353' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1353'>
<bc code='182' bci='3'/>
<method id='1355' holder='1291' name='getReferenceVolatile' return='1204' arguments='1204 1198' flags='257' bytes='0' iicount='268'/>
<call method='1355' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.890'/>
</parse>
<phase_done stamp='0.890'/>
</phase>
<parse_done stamp='0.890'/>
</parse>
<phase name='optimize_blocks' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='gvn' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='optimize_null_checks' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase_done stamp='0.890'/>
</phase>
<phase name='emit_lir' stamp='0.890'>
<phase name='lirGeneration' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='linearScan' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase_done stamp='0.890'/>
</phase>
<phase name='codeemit' stamp='0.890'>
<phase_done stamp='0.890'/>
</phase>
<phase name='codeinstall' stamp='0.890'>
<phase_done stamp='0.899'/>
</phase>
<code_cache total_blobs='365' nmethods='31' adapters='247' free_code_cache='250331008'/>
<task_done success='1' nmsize='744' count='277' inlined_bytes='7' stamp='0.899'/>
</task>
<task compile_id='33' method='jdk.internal.misc.Unsafe getReferenceAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='277' iicount='277' level='3' stamp='0.899'>
<phase name='setup' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='buildIR' stamp='0.899'>
<klass id='1204' name='java.lang.Object' flags='1'/>
<type id='1198' name='long'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1347' holder='1291' name='getReferenceAcquire' return='1204' arguments='1204 1198' flags='17' bytes='7' iicount='277'/>
<parse method='1347'  stamp='0.899'>
<phase name='parse_hir' stamp='0.899'>
<bc code='182' bci='3'/>
<method id='1351' holder='1291' name='getReferenceVolatile' return='1204' arguments='1204 1198' flags='257' bytes='0' iicount='277'/>
<call method='1351' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<phase_done stamp='0.899'/>
</phase>
<parse_done stamp='0.899'/>
</parse>
<phase name='optimize_blocks' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='gvn' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='optimize_null_checks' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase_done stamp='0.899'/>
</phase>
<phase name='emit_lir' stamp='0.899'>
<phase name='lirGeneration' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='linearScan' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase_done stamp='0.899'/>
</phase>
<phase name='codeemit' stamp='0.899'>
<phase_done stamp='0.899'/>
</phase>
<phase name='codeinstall' stamp='0.899'>
<phase_done stamp='0.909'/>
</phase>
<code_cache total_blobs='367' nmethods='33' adapters='247' free_code_cache='250329344'/>
<task_done success='1' nmsize='360' count='282' stamp='0.909'/>
</task>
<task compile_id='34' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='280' iicount='280' level='3' stamp='0.909'>
<phase name='setup' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='buildIR' stamp='0.909'>
<type id='1197' name='int'/>
<klass id='1305' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1347' holder='1305' name='spread' return='1197' arguments='1197' flags='24' bytes='10' iicount='280'/>
<parse method='1347'  stamp='0.909'>
<phase name='parse_hir' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<parse_done stamp='0.909'/>
</parse>
<phase name='optimize_blocks' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='gvn' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='optimize_null_checks' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase_done stamp='0.909'/>
</phase>
<phase name='emit_lir' stamp='0.909'>
<phase name='lirGeneration' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='linearScan' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase_done stamp='0.909'/>
</phase>
<phase name='codeemit' stamp='0.909'>
<phase_done stamp='0.909'/>
</phase>
<phase name='codeinstall' stamp='0.909'>
<phase_done stamp='0.914'/>
</phase>
<code_cache total_blobs='369' nmethods='35' adapters='247' free_code_cache='250327680'/>
<task_done success='1' nmsize='240' count='282' stamp='0.914'/>
</task>
<task compile_id='39' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='386' iicount='386' level='3' stamp='0.921'>
<phase name='setup' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='buildIR' stamp='0.921'>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1347' name='java.util.Objects' flags='17'/>
<method id='1348' holder='1347' name='requireNonNull' return='1204' arguments='1204' flags='9' bytes='14' iicount='386'/>
<parse method='1348'  stamp='0.921'>
<phase name='parse_hir' stamp='0.921'>
<bc code='183' bci='8'/>
<type id='1199' name='void'/>
<klass id='1343' name='java.lang.NullPointerException' flags='1'/>
<method id='1350' holder='1343' name='&lt;init&gt;' return='1199' flags='1' bytes='5' iicount='1'/>
<call method='1350' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<phase_done stamp='0.921'/>
</phase>
<parse_done stamp='0.921'/>
</parse>
<phase name='optimize_blocks' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='gvn' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='optimize_null_checks' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase_done stamp='0.921'/>
</phase>
<phase name='emit_lir' stamp='0.921'>
<phase name='lirGeneration' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='linearScan' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase_done stamp='0.921'/>
</phase>
<phase name='codeemit' stamp='0.921'>
<phase_done stamp='0.921'/>
</phase>
<phase name='codeinstall' stamp='0.921'>
<phase_done stamp='0.928'/>
</phase>
<code_cache total_blobs='374' nmethods='39' adapters='248' free_code_cache='250322944'/>
<task_done success='1' nmsize='496' count='399' stamp='0.928'/>
</task>
<task compile_id='42' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='130' iicount='130' level='1' stamp='0.930'>
<phase name='setup' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='buildIR' stamp='0.930'>
<klass id='1206' name='java.lang.Class' flags='17'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1347' holder='1275' name='returnType' return='1206' flags='1' bytes='5' iicount='130'/>
<parse method='1347'  stamp='0.930'>
<phase name='parse_hir' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<parse_done stamp='0.930'/>
</parse>
<phase name='optimize_blocks' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='gvn' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='optimize_null_checks' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase_done stamp='0.930'/>
</phase>
<phase name='emit_lir' stamp='0.930'>
<phase name='lirGeneration' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='linearScan' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase_done stamp='0.930'/>
</phase>
<phase name='codeemit' stamp='0.930'>
<phase_done stamp='0.930'/>
</phase>
<phase name='codeinstall' stamp='0.930'>
<phase_done stamp='0.933'/>
</phase>
<code_cache total_blobs='384' nmethods='40' adapters='257' free_code_cache='250311808'/>
<task_done success='1' nmsize='200' count='130' stamp='0.933'/>
</task>
<task compile_id='43' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='260' iicount='260' level='3' stamp='0.933'>
<phase name='setup' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='buildIR' stamp='0.933'>
<type id='1191' name='boolean'/>
<type id='1197' name='int'/>
<klass id='1347' name='java.lang.StringLatin1' flags='16'/>
<method id='1348' holder='1347' name='canEncode' return='1191' arguments='1197' flags='9' bytes='13' iicount='260'/>
<parse method='1348'  stamp='0.933'>
<phase name='parse_hir' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<parse_done stamp='0.933'/>
</parse>
<phase name='optimize_blocks' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='gvn' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='optimize_null_checks' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase_done stamp='0.933'/>
</phase>
<phase name='emit_lir' stamp='0.933'>
<phase name='lirGeneration' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='linearScan' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase_done stamp='0.933'/>
</phase>
<phase name='codeemit' stamp='0.933'>
<phase_done stamp='0.933'/>
</phase>
<phase name='codeinstall' stamp='0.933'>
<phase_done stamp='0.937'/>
</phase>
<code_cache total_blobs='396' nmethods='41' adapters='268' free_code_cache='250298112'/>
<task_done success='1' nmsize='328' count='275' stamp='0.937'/>
</task>
<task compile_id='44' method='java.lang.String hashCode ()I' bytes='60' count='385' iicount='385' level='3' stamp='0.937'>
<phase name='setup' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='buildIR' stamp='0.937'>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='hashCode' return='1197' flags='1' bytes='60' iicount='385'/>
<parse method='1347'  stamp='0.937'>
<phase name='parse_hir' stamp='0.937'>
<bc code='182' bci='17'/>
<type id='1191' name='boolean'/>
<method id='1349' holder='1205' name='isLatin1' return='1191' flags='0' bytes='19' compile_id='3' compiler='c1' level='3' iicount='2060'/>
<call method='1349' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='0.937'/>
</parse>
<bc code='184' bci='27'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1352' name='java.lang.StringLatin1' flags='16'/>
<method id='1353' holder='1352' name='hashCode' return='1197' arguments='1339' flags='9' bytes='42' iicount='87'/>
<call method='1353' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='37'/>
<klass id='1355' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1356' holder='1355' name='hashCode' return='1197' arguments='1339' unloaded='1'/>
<call method='1356' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.937'/>
</phase>
<parse_done stamp='0.937'/>
</parse>
<phase name='optimize_blocks' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='gvn' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='optimize_null_checks' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase_done stamp='0.937'/>
</phase>
<phase name='emit_lir' stamp='0.937'>
<phase name='lirGeneration' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='linearScan' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase_done stamp='0.937'/>
</phase>
<phase name='codeemit' stamp='0.937'>
<phase_done stamp='0.937'/>
</phase>
<phase name='codeinstall' stamp='0.937'>
<phase_done stamp='0.946'/>
</phase>
<code_cache total_blobs='397' nmethods='42' adapters='268' free_code_cache='250296064'/>
<task_done success='1' nmsize='864' count='389' inlined_bytes='19' stamp='0.946'/>
</task>
<task compile_id='45' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='74' count='260' iicount='260' level='3' stamp='0.946'>
<phase name='setup' stamp='0.946'>
<phase_done stamp='0.946'/>
</phase>
<phase name='buildIR' stamp='0.946'>
<klass id='1206' name='java.lang.Class' flags='17'/>
<type id='1197' name='int'/>
<klass id='1347' name='java.lang.invoke.MethodTypeForm' flags='16'/>
<method id='1348' holder='1347' name='canonicalize' return='1206' arguments='1206 1197' flags='8' bytes='74' iicount='260'/>
<parse method='1348'  stamp='0.946'>
<phase name='parse_hir' stamp='0.946'>
<bc code='182' bci='10'/>
<type id='1191' name='boolean'/>
<method id='1351' holder='1206' name='isPrimitive' return='1191' flags='257' bytes='0' compile_id='37' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1351' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='45'/>
<klass id='1353' name='sun.invoke.util.Wrapper' flags='16401'/>
<method id='1354' holder='1353' name='asPrimitiveType' return='1206' arguments='1206' flags='9' bytes='20' iicount='1'/>
<call method='1354' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1354'>
<bc code='184' bci='1'/>
<method id='1356' holder='1353' name='findWrapperType' return='1353' arguments='1206' flags='8' bytes='102' iicount='1'/>
<call method='1356' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<method id='1358' holder='1353' name='primitiveType' return='1206' flags='1' bytes='5' iicount='2'/>
<call method='1358' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1358'>
<parse_done stamp='0.946'/>
</parse>
<bc code='184' bci='14'/>
<method id='1360' holder='1353' name='forceType' return='1206' arguments='1206 1206' flags='8' bytes='72' iicount='1'/>
<call method='1360' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.947'/>
</parse>
<bc code='184' bci='68'/>
<method id='1362' holder='1353' name='asWrapperType' return='1206' arguments='1206' flags='9' bytes='18' iicount='1'/>
<call method='1362' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1362'>
<bc code='182' bci='1'/>
<call method='1351' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='8'/>
<method id='1364' holder='1353' name='forPrimitiveType' return='1353' arguments='1206' flags='9' bytes='122' iicount='40'/>
<call method='1364' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='12'/>
<method id='1366' holder='1353' name='wrapperType' return='1206' arguments='1206' flags='1' bytes='52' iicount='1'/>
<call method='1366' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.947'/>
</parse>
<phase_done stamp='0.947'/>
</phase>
<parse_done stamp='0.947'/>
</parse>
<phase name='optimize_blocks' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase name='gvn' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase name='optimize_null_checks' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase_done stamp='0.947'/>
</phase>
<phase name='emit_lir' stamp='0.947'>
<phase name='lirGeneration' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase name='linearScan' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase_done stamp='0.947'/>
</phase>
<phase name='codeemit' stamp='0.947'>
<phase_done stamp='0.947'/>
</phase>
<phase name='codeinstall' stamp='0.947'>
<phase_done stamp='0.963'/>
</phase>
<code_cache total_blobs='401' nmethods='44' adapters='270' free_code_cache='250290048'/>
<task_done success='1' nmsize='1488' count='302' inlined_bytes='43' stamp='0.963'/>
</task>
<task compile_id='46' method='java.lang.StringLatin1 indexOfChar ([BIII)I' bytes='33' count='142' backedge_count='4310' iicount='142' level='3' stamp='0.963'>
<phase name='setup' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='buildIR' stamp='0.963'>
<type id='1197' name='int'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1347' name='java.lang.StringLatin1' flags='16'/>
<method id='1348' holder='1347' name='indexOfChar' return='1197' arguments='1339 1197 1197 1197' flags='10' bytes='33' iicount='142'/>
<parse method='1348'  stamp='0.963'>
<phase name='parse_hir' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<parse_done stamp='0.963'/>
</parse>
<phase name='optimize_blocks' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='gvn' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='optimize_null_checks' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase_done stamp='0.963'/>
</phase>
<phase name='emit_lir' stamp='0.963'>
<phase name='lirGeneration' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='linearScan' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase_done stamp='0.963'/>
</phase>
<phase name='codeemit' stamp='0.963'>
<phase_done stamp='0.963'/>
</phase>
<phase name='codeinstall' stamp='0.963'>
<phase_done stamp='0.971'/>
</phase>
<code_cache total_blobs='403' nmethods='46' adapters='270' free_code_cache='250287872'/>
<task_done success='1' nmsize='552' count='142' backedge_count='4310' stamp='0.971'/>
</task>
<task compile_id='52' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='262' iicount='262' level='3' stamp='0.978'>
<phase name='setup' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='buildIR' stamp='0.978'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1347' holder='1287' name='ensureCapacityInternal' return='1199' arguments='1197' flags='2' bytes='39' iicount='265'/>
<parse method='1347'  stamp='0.978'>
<phase name='parse_hir' stamp='0.978'>
<bc code='182' bci='24'/>
<method id='1349' holder='1287' name='newCapacity' return='1197' arguments='1197' flags='2' bytes='59' iicount='84'/>
<call method='1349' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='32'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1351' name='java.util.Arrays' flags='1'/>
<method id='1352' holder='1351' name='copyOf' return='1339' arguments='1339 1197' flags='9' bytes='19' iicount='93'/>
<call method='1352' instr='invokestatic'/>
<inline_fail reason='callee uses too much stack'/>
<phase_done stamp='0.978'/>
</phase>
<parse_done stamp='0.978'/>
</parse>
<phase name='optimize_blocks' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='gvn' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='optimize_null_checks' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase_done stamp='0.978'/>
</phase>
<phase name='emit_lir' stamp='0.978'>
<phase name='lirGeneration' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='linearScan' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase_done stamp='0.978'/>
</phase>
<phase name='codeemit' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='codeinstall' stamp='0.978'>
<phase_done stamp='0.987'/>
</phase>
<code_cache total_blobs='411' nmethods='52' adapters='272' free_code_cache='250280320'/>
<task_done success='1' nmsize='552' count='267' stamp='0.987'/>
</task>
<task compile_id='55' method='jdk.internal.org.objectweb.asm.SymbolTable get (I)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='13' count='263' iicount='263' level='3' stamp='0.988'>
<phase name='setup' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='buildIR' stamp='0.988'>
<klass id='1348' name='jdk.internal.org.objectweb.asm.SymbolTable$Entry' flags='10'/>
<type id='1197' name='int'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.SymbolTable' flags='16'/>
<method id='1349' holder='1347' name='get' return='1348' arguments='1197' flags='2' bytes='13' iicount='263'/>
<parse method='1349'  stamp='0.988'>
<phase name='parse_hir' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<parse_done stamp='0.988'/>
</parse>
<phase name='optimize_blocks' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='gvn' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='optimize_null_checks' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase_done stamp='0.988'/>
</phase>
<phase name='emit_lir' stamp='0.988'>
<phase name='lirGeneration' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='linearScan' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase_done stamp='0.988'/>
</phase>
<phase name='codeemit' stamp='0.988'>
<phase_done stamp='0.988'/>
</phase>
<phase name='codeinstall' stamp='0.988'>
<phase_done stamp='0.995'/>
</phase>
<code_cache total_blobs='415' nmethods='55' adapters='273' free_code_cache='250276480'/>
<task_done success='1' nmsize='344' count='263' stamp='0.995'/>
</task>
<task compile_id='56' method='java.lang.invoke.MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='136' iicount='136' level='1' stamp='0.995'>
<phase name='setup' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='buildIR' stamp='0.995'>
<klass id='1347' name='[Ljava.lang.Class;' flags='1041'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1348' holder='1275' name='ptypes' return='1347' flags='0' bytes='5' iicount='136'/>
<parse method='1348'  stamp='0.995'>
<phase name='parse_hir' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<parse_done stamp='0.995'/>
</parse>
<phase name='optimize_blocks' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='gvn' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='optimize_null_checks' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase_done stamp='0.995'/>
</phase>
<phase name='emit_lir' stamp='0.995'>
<phase name='lirGeneration' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='linearScan' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase_done stamp='0.995'/>
</phase>
<phase name='codeemit' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='codeinstall' stamp='0.995'>
<phase_done stamp='0.999'/>
</phase>
<code_cache total_blobs='416' nmethods='56' adapters='273' free_code_cache='250275712'/>
<task_done success='1' nmsize='200' count='136' stamp='0.999'/>
</task>
<task compile_id='59' method='java.lang.invoke.MethodType checkSlotCount (I)V' bytes='33' count='260' iicount='260' level='3' stamp='0.999'>
<phase name='setup' stamp='0.999'>
<phase_done stamp='0.999'/>
</phase>
<phase name='buildIR' stamp='0.999'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1347' holder='1275' name='checkSlotCount' return='1199' arguments='1197' flags='8' bytes='33' iicount='260'/>
<parse method='1347'  stamp='0.999'>
<phase name='parse_hir' stamp='0.999'>
<bc code='183' bci='13'/>
<klass id='1289' name='java.lang.StringBuilder' flags='17'/>
<method id='1349' holder='1289' name='&lt;init&gt;' return='1199' flags='1' bytes='7' iicount='83'/>
<call method='1349' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1349'>
<bc code='183' bci='3'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1351' holder='1287' name='&lt;init&gt;' return='1199' arguments='1197' flags='0' bytes='39' iicount='83'/>
<call method='1351' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.999'/>
</parse>
<bc code='182' bci='18'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1354' holder='1289' name='append' return='1289' arguments='1205' flags='1' bytes='8' iicount='182'/>
<call method='1354' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1354'>
<bc code='183' bci='2'/>
<method id='1356' holder='1287' name='append' return='1287' arguments='1205' flags='1' bytes='45' iicount='182'/>
<call method='1356' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.000'/>
</parse>
<bc code='182' bci='22'/>
<method id='1358' holder='1289' name='append' return='1289' arguments='1197' flags='1' bytes='8' iicount='10'/>
<call method='1358' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1358'>
<bc code='183' bci='2'/>
<method id='1360' holder='1287' name='append' return='1287' arguments='1197' flags='1' bytes='55' iicount='10'/>
<call method='1360' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.000'/>
</parse>
<bc code='182' bci='25'/>
<method id='1362' holder='1289' name='toString' return='1205' flags='1' bytes='9' iicount='83'/>
<call method='1362' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1362'>
<bc code='183' bci='5'/>
<method id='1364' holder='1205' name='&lt;init&gt;' return='1199' arguments='1289' flags='1' bytes='7' iicount='83'/>
<call method='1364' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1364'>
<bc code='183' bci='3'/>
<klass id='1366' name='java.lang.Void' flags='17'/>
<method id='1367' holder='1205' name='&lt;init&gt;' return='1199' arguments='1287 1366' flags='0' bytes='99' iicount='83'/>
<call method='1367' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.000'/>
</parse>
<parse_done stamp='1.000'/>
</parse>
<bc code='184' bci='28'/>
<klass id='1214' name='java.lang.RuntimeException' flags='1'/>
<klass id='1369' name='java.lang.invoke.MethodHandleStatics' flags='0'/>
<method id='1370' holder='1369' name='newIllegalArgumentException' return='1214' arguments='1205' flags='8' bytes='9' iicount='1'/>
<call method='1370' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1370'>
<bc code='183' bci='5'/>
<klass id='1372' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1373' holder='1372' name='&lt;init&gt;' return='1199' arguments='1205' flags='1' bytes='6' iicount='1'/>
<call method='1373' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.000'/>
</parse>
<phase_done stamp='1.000'/>
</phase>
<parse_done stamp='1.000'/>
</parse>
<phase name='optimize_blocks' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='gvn' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='optimize_null_checks' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase_done stamp='1.000'/>
</phase>
<phase name='emit_lir' stamp='1.000'>
<phase name='lirGeneration' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='linearScan' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase_done stamp='1.000'/>
</phase>
<phase name='codeemit' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='codeinstall' stamp='1.000'>
<phase_done stamp='1.017'/>
</phase>
<code_cache total_blobs='419' nmethods='58' adapters='274' free_code_cache='250270848'/>
<task_done success='1' nmsize='1512' count='264' inlined_bytes='48' stamp='1.017'/>
</task>
<task compile_id='61' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='130' iicount='130' level='1' stamp='1.017'>
<phase name='setup' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='buildIR' stamp='1.017'>
<klass id='1206' name='java.lang.Class' flags='17'/>
<klass id='1271' name='java.lang.invoke.MemberName' flags='16'/>
<method id='1347' holder='1271' name='getDeclaringClass' return='1206' flags='1' bytes='5' iicount='130'/>
<parse method='1347'  stamp='1.017'>
<phase name='parse_hir' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<parse_done stamp='1.017'/>
</parse>
<phase name='optimize_blocks' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='gvn' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='optimize_null_checks' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase_done stamp='1.017'/>
</phase>
<phase name='emit_lir' stamp='1.017'>
<phase name='lirGeneration' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='linearScan' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase_done stamp='1.017'/>
</phase>
<phase name='codeemit' stamp='1.017'>
<phase_done stamp='1.017'/>
</phase>
<phase name='codeinstall' stamp='1.017'>
<phase_done stamp='1.019'/>
</phase>
<code_cache total_blobs='420' nmethods='59' adapters='274' free_code_cache='250270080'/>
<task_done success='1' nmsize='200' count='130' stamp='1.019'/>
</task>
<task compile_id='62' method='java.lang.ref.ReferenceQueue headIsNull ()Z' bytes='13' count='258' iicount='258' level='3' stamp='1.020'>
<phase name='setup' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='buildIR' stamp='1.020'>
<type id='1191' name='boolean'/>
<klass id='1347' name='java.lang.ref.ReferenceQueue' flags='1'/>
<method id='1348' holder='1347' name='headIsNull' return='1191' flags='16' bytes='13' iicount='258'/>
<parse method='1348'  stamp='1.020'>
<phase name='parse_hir' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<parse_done stamp='1.020'/>
</parse>
<phase name='optimize_blocks' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='gvn' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='optimize_null_checks' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase_done stamp='1.020'/>
</phase>
<phase name='emit_lir' stamp='1.020'>
<phase name='lirGeneration' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='linearScan' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase_done stamp='1.020'/>
</phase>
<phase name='codeemit' stamp='1.020'>
<phase_done stamp='1.020'/>
</phase>
<phase name='codeinstall' stamp='1.020'>
<phase_done stamp='1.023'/>
</phase>
<code_cache total_blobs='423' nmethods='61' adapters='275' free_code_cache='250267136'/>
<task_done success='1' nmsize='360' count='260' stamp='1.023'/>
</task>
<task compile_id='64' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='146' backedge_count='3070' iicount='146' level='3' stamp='1.023'>
<phase name='setup' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='buildIR' stamp='1.023'>
<type id='1197' name='int'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1347' name='java.lang.StringLatin1' flags='16'/>
<method id='1348' holder='1347' name='hashCode' return='1197' arguments='1339' flags='9' bytes='42' iicount='146'/>
<parse method='1348'  stamp='1.023'>
<phase name='parse_hir' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<parse_done stamp='1.023'/>
</parse>
<phase name='optimize_blocks' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='gvn' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='optimize_null_checks' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase_done stamp='1.023'/>
</phase>
<phase name='emit_lir' stamp='1.023'>
<phase name='lirGeneration' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='linearScan' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase_done stamp='1.023'/>
</phase>
<phase name='codeemit' stamp='1.023'>
<phase_done stamp='1.023'/>
</phase>
<phase name='codeinstall' stamp='1.023'>
<phase_done stamp='1.030'/>
</phase>
<code_cache total_blobs='424' nmethods='62' adapters='275' free_code_cache='250265856'/>
<task_done success='1' nmsize='440' count='146' backedge_count='3070' stamp='1.030'/>
</task>
<task compile_id='66' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='259' backedge_count='941' iicount='259' level='3' stamp='1.030'>
<phase name='setup' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='buildIR' stamp='1.030'>
<type id='1197' name='int'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1347' holder='1275' name='hashCode' return='1197' flags='1' bytes='53' iicount='259'/>
<parse method='1347'  stamp='1.030'>
<phase name='parse_hir' stamp='1.030'>
<bc code='182' bci='6'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1349' holder='1204' name='hashCode' return='1197' flags='257' bytes='0' compile_id='28' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1349' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='182' bci='40'/>
<call method='1349' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<phase_done stamp='1.030'/>
</phase>
<parse_done stamp='1.030'/>
</parse>
<phase name='optimize_blocks' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='gvn' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='optimize_null_checks' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase_done stamp='1.030'/>
</phase>
<phase name='emit_lir' stamp='1.030'>
<phase name='lirGeneration' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='linearScan' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase_done stamp='1.030'/>
</phase>
<phase name='codeemit' stamp='1.030'>
<phase_done stamp='1.030'/>
</phase>
<phase name='codeinstall' stamp='1.030'>
<phase_done stamp='1.040'/>
</phase>
<code_cache total_blobs='426' nmethods='64' adapters='275' free_code_cache='250263168'/>
<task_done success='1' nmsize='896' count='265' backedge_count='971' stamp='1.040'/>
</task>
<task compile_id='68' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='144' count='145' backedge_count='3111' iicount='145' level='3' stamp='1.040'>
<phase name='setup' stamp='1.040'>
<phase_done stamp='1.040'/>
</phase>
<phase name='buildIR' stamp='1.040'>
<klass id='1347' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1348' holder='1347' name='putUTF8' return='1347' arguments='1205' flags='1' bytes='144' iicount='147'/>
<parse method='1348'  stamp='1.040'>
<phase name='parse_hir' stamp='1.040'>
<bc code='182' bci='1'/>
<type id='1197' name='int'/>
<method id='1350' holder='1205' name='length' return='1197' flags='1' bytes='11' compile_id='4' compiler='c1' level='3' iicount='1682'/>
<call method='1350' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1350'>
<bc code='182' bci='6'/>
<type id='1195' name='byte'/>
<method id='1352' holder='1205' name='coder' return='1195' flags='0' bytes='15' compile_id='2' compiler='c1' level='3' iicount='2883'/>
<call method='1352' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1352'>
<parse_done stamp='1.040'/>
</parse>
<parse_done stamp='1.040'/>
</parse>
<bc code='183' bci='17'/>
<type id='1199' name='void'/>
<klass id='1355' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1357' holder='1355' name='&lt;init&gt;' return='1199' arguments='1205' flags='1' bytes='6' iicount='1'/>
<call method='1357' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='43'/>
<method id='1359' holder='1347' name='enlarge' return='1199' arguments='1197' flags='2' bytes='73' iicount='25'/>
<call method='1359' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='85'/>
<type id='1192' name='char'/>
<method id='1361' holder='1205' name='charAt' return='1192' arguments='1197' flags='1' bytes='25' compile_id='6' compiler='c1' level='3' iicount='4927'/>
<call method='1361' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1361'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<method id='1363' holder='1205' name='isLatin1' return='1191' flags='0' bytes='19' compile_id='3' compiler='c1' level='3' iicount='5575'/>
<call method='1363' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1363'>
<parse_done stamp='1.041'/>
</parse>
<bc code='184' bci='12'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1365' name='java.lang.StringLatin1' flags='16'/>
<method id='1366' holder='1365' name='charAt' return='1192' arguments='1339 1197' flags='9' bytes='15' iicount='5058'/>
<call method='1366' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1366'>
<bc code='184' bci='3'/>
<method id='1368' holder='1205' name='checkIndex' return='1199' arguments='1197 1197' flags='8' bytes='10' iicount='5089'/>
<call method='1368' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1368'>
<bc code='184' bci='5'/>
<klass id='1370' name='java.util.function.BiFunction' flags='1537'/>
<klass id='1371' name='jdk.internal.util.Preconditions' flags='1'/>
<method id='1375' holder='1371' name='checkIndex' return='1197' arguments='1197 1197 1370' flags='9' bytes='18' compile_id='5' compiler='c1' level='3' iicount='980'/>
<call method='1375' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.041'/>
</parse>
<parse_done stamp='1.041'/>
</parse>
<bc code='184' bci='21'/>
<klass id='1377' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1378' holder='1377' name='charAt' return='1192' arguments='1339 1197' unloaded='1'/>
<call method='1378' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.041'/>
</parse>
<bc code='182' bci='127'/>
<method id='1379' holder='1347' name='encodeUtf8' return='1347' arguments='1205 1197 1197' flags='16' bytes='337' iicount='1'/>
<call method='1379' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.041'/>
</phase>
<parse_done stamp='1.041'/>
</parse>
<phase name='optimize_blocks' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase name='gvn' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase name='optimize_null_checks' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase_done stamp='1.041'/>
</phase>
<phase name='emit_lir' stamp='1.041'>
<phase name='lirGeneration' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase name='linearScan' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase_done stamp='1.041'/>
</phase>
<phase name='codeemit' stamp='1.041'>
<phase_done stamp='1.041'/>
</phase>
<phase name='codeinstall' stamp='1.041'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.140'/>
</phase>
<code_cache total_blobs='430' nmethods='67' adapters='276' free_code_cache='250255488'/>
<task_done success='1' nmsize='2416' count='167' backedge_count='3598' inlined_bytes='95' stamp='1.140'/>
</task>
<task compile_id='69' method='jdk.internal.org.objectweb.asm.Symbol &lt;init&gt; (IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V' bytes='38' count='292' iicount='292' level='3' stamp='1.140'>
<phase name='setup' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='buildIR' stamp='1.140'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<type id='1198' name='long'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.Symbol' flags='1024'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197 1197 1205 1205 1205 1198' flags='0' bytes='38' iicount='292'/>
<parse method='1348'  stamp='1.140'>
<phase name='parse_hir' stamp='1.140'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1350' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1271091'/>
<call method='1350' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1350'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1347'/>
<parse_done stamp='1.140'/>
</parse>
<phase_done stamp='1.140'/>
</phase>
<parse_done stamp='1.140'/>
</parse>
<phase name='optimize_blocks' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='gvn' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='optimize_null_checks' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase_done stamp='1.140'/>
</phase>
<phase name='emit_lir' stamp='1.140'>
<phase name='lirGeneration' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='linearScan' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase_done stamp='1.140'/>
</phase>
<phase name='codeemit' stamp='1.140'>
<phase_done stamp='1.140'/>
</phase>
<phase name='codeinstall' stamp='1.140'>
<dependency type='no_finalizable_subclasses' ctxk='1347'/>
<phase_done stamp='1.153'/>
</phase>
<code_cache total_blobs='431' nmethods='68' adapters='276' free_code_cache='250253952'/>
<task_done success='1' nmsize='680' count='313' inlined_bytes='1' stamp='1.153'/>
</task>
<task compile_id='63' method='java.lang.String getBytes ([BIB)V' bytes='44' count='288' iicount='288' level='3' stamp='1.153'>
<phase name='setup' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='buildIR' stamp='1.153'>
<type id='1199' name='void'/>
<klass id='1339' name='[B' flags='1041'/>
<type id='1197' name='int'/>
<type id='1195' name='byte'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='getBytes' return='1199' arguments='1339 1197 1195' flags='0' bytes='44' iicount='288'/>
<parse method='1347'  stamp='1.153'>
<phase name='parse_hir' stamp='1.153'>
<bc code='182' bci='1'/>
<method id='1349' holder='1205' name='coder' return='1195' flags='0' bytes='15' compile_id='2' compiler='c1' level='3' iicount='3009'/>
<call method='1349' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='1.153'/>
</parse>
<bc code='184' bci='22'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1210' name='java.lang.System' flags='17'/>
<method id='1352' holder='1210' name='arraycopy' return='1199' arguments='1204 1197 1204 1197 1197' flags='265' bytes='0' compile_id='35' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1352' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='40'/>
<klass id='1354' name='java.lang.StringLatin1' flags='16'/>
<method id='1355' holder='1354' name='inflate' return='1199' arguments='1339 1197 1339 1197 1197' flags='9' bytes='10' iicount='1'/>
<call method='1355' instr='invokestatic'/>
<inline_fail reason='callee uses too much stack'/>
<phase_done stamp='1.153'/>
</phase>
<parse_done stamp='1.153'/>
</parse>
<phase name='optimize_blocks' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='gvn' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='optimize_null_checks' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase_done stamp='1.153'/>
</phase>
<phase name='emit_lir' stamp='1.153'>
<phase name='lirGeneration' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='linearScan' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase_done stamp='1.153'/>
</phase>
<phase name='codeemit' stamp='1.153'>
<phase_done stamp='1.153'/>
</phase>
<phase name='codeinstall' stamp='1.153'>
<phase_done stamp='1.166'/>
</phase>
<code_cache total_blobs='433' nmethods='69' adapters='277' free_code_cache='250251008'/>
<task_done success='1' nmsize='752' count='295' inlined_bytes='15' stamp='1.189'/>
</task>
<task compile_id='73' method='jdk.internal.org.objectweb.asm.SymbolTable hash (ILjava/lang/String;)I' bytes='10' count='399' iicount='399' level='3' stamp='1.189'>
<phase name='setup' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='buildIR' stamp='1.189'>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.SymbolTable' flags='16'/>
<method id='1348' holder='1347' name='hash' return='1197' arguments='1197 1205' flags='10' bytes='10' iicount='402'/>
<parse method='1348'  stamp='1.189'>
<phase name='parse_hir' stamp='1.189'>
<bc code='182' bci='4'/>
<method id='1350' holder='1205' name='hashCode' return='1197' flags='1' bytes='60' compile_id='44' compiler='c1' level='3' iicount='887'/>
<call method='1350' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.189'/>
</phase>
<parse_done stamp='1.189'/>
</parse>
<phase name='optimize_blocks' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='gvn' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='optimize_null_checks' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase_done stamp='1.189'/>
</phase>
<phase name='emit_lir' stamp='1.189'>
<phase name='lirGeneration' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='linearScan' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase_done stamp='1.189'/>
</phase>
<phase name='codeemit' stamp='1.189'>
<phase_done stamp='1.189'/>
</phase>
<phase name='codeinstall' stamp='1.189'>
<phase_done stamp='1.193'/>
</phase>
<code_cache total_blobs='434' nmethods='70' adapters='277' free_code_cache='250249984'/>
<task_done success='1' nmsize='296' count='444' stamp='1.193'/>
</task>
<task compile_id='72' method='jdk.internal.org.objectweb.asm.SymbolTable$Entry &lt;init&gt; (IILjava/lang/String;I)V' bytes='17' count='311' iicount='311' level='3' stamp='1.193'>
<phase name='setup' stamp='1.193'>
<phase_done stamp='1.193'/>
</phase>
<phase name='buildIR' stamp='1.193'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.SymbolTable$Entry' flags='10'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197 1197 1205 1197' flags='0' bytes='17' iicount='311'/>
<parse method='1348'  stamp='1.193'>
<phase name='parse_hir' stamp='1.193'>
<bc code='183' bci='7'/>
<type id='1198' name='long'/>
<klass id='1350' name='jdk.internal.org.objectweb.asm.Symbol' flags='1024'/>
<method id='1351' holder='1350' name='&lt;init&gt;' return='1199' arguments='1197 1197 1205 1205 1205 1198' flags='0' bytes='38' compile_id='69' compiler='c1' level='3' iicount='387'/>
<call method='1351' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.194'/>
</phase>
<parse_done stamp='1.194'/>
</parse>
<phase name='optimize_blocks' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase name='gvn' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase name='optimize_null_checks' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase_done stamp='1.194'/>
</phase>
<phase name='emit_lir' stamp='1.194'>
<phase name='lirGeneration' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase name='linearScan' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase_done stamp='1.194'/>
</phase>
<phase name='codeemit' stamp='1.194'>
<phase_done stamp='1.194'/>
</phase>
<phase name='codeinstall' stamp='1.194'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.200'/>
</phase>
<code_cache total_blobs='437' nmethods='73' adapters='277' free_code_cache='250247424'/>
<task_done success='1' nmsize='376' count='311' stamp='1.200'/>
</task>
<task compile_id='74' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='8' count='298' iicount='298' level='3' stamp='1.200'>
<phase name='setup' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='buildIR' stamp='1.200'>
<type id='1191' name='boolean'/>
<klass id='1271' name='java.lang.invoke.MemberName' flags='16'/>
<method id='1347' holder='1271' name='isInvocable' return='1191' flags='1' bytes='8' iicount='298'/>
<parse method='1347'  stamp='1.200'>
<phase name='parse_hir' stamp='1.200'>
<bc code='182' bci='4'/>
<type id='1197' name='int'/>
<method id='1349' holder='1271' name='anyFlagSet' return='1191' arguments='1197' flags='2' bytes='15' iicount='298'/>
<call method='1349' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='1.200'/>
</parse>
<phase_done stamp='1.200'/>
</phase>
<parse_done stamp='1.200'/>
</parse>
<phase name='optimize_blocks' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='gvn' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='optimize_null_checks' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase_done stamp='1.200'/>
</phase>
<phase name='emit_lir' stamp='1.200'>
<phase name='lirGeneration' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='linearScan' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase_done stamp='1.200'/>
</phase>
<phase name='codeemit' stamp='1.200'>
<phase_done stamp='1.200'/>
</phase>
<phase name='codeinstall' stamp='1.200'>
<phase_done stamp='1.206'/>
</phase>
<code_cache total_blobs='439' nmethods='75' adapters='277' free_code_cache='250245504'/>
<task_done success='1' nmsize='456' count='303' inlined_bytes='15' stamp='1.206'/>
</task>
<task compile_id='76' method='jdk.internal.org.objectweb.asm.SymbolTable put (Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;)Ljdk/internal/org/objectweb/asm/SymbolTable$Entry;' bytes='150' count='387' iicount='387' level='3' stamp='1.206'>
<phase name='setup' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='buildIR' stamp='1.206'>
<klass id='1348' name='jdk.internal.org.objectweb.asm.SymbolTable$Entry' flags='10'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.SymbolTable' flags='16'/>
<method id='1349' holder='1347' name='put' return='1348' arguments='1348' flags='2' bytes='150' iicount='387'/>
<parse method='1349'  stamp='1.206'>
<phase name='parse_hir' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<parse_done stamp='1.206'/>
</parse>
<phase name='optimize_blocks' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='gvn' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='optimize_null_checks' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase_done stamp='1.206'/>
</phase>
<phase name='emit_lir' stamp='1.206'>
<phase name='lirGeneration' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='linearScan' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase_done stamp='1.206'/>
</phase>
<phase name='codeemit' stamp='1.206'>
<phase_done stamp='1.206'/>
</phase>
<phase name='codeinstall' stamp='1.206'>
<phase_done stamp='1.233'/>
</phase>
<code_cache total_blobs='440' nmethods='76' adapters='277' free_code_cache='250241280'/>
<task_done success='1' nmsize='2240' count='387' stamp='1.233'/>
</task>
<task compile_id='75' method='sun.invoke.util.Wrapper basicTypeChar ()C' bytes='5' count='139' iicount='139' level='1' stamp='1.233'>
<phase name='setup' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='buildIR' stamp='1.233'>
<type id='1192' name='char'/>
<klass id='1347' name='sun.invoke.util.Wrapper' flags='16401'/>
<method id='1348' holder='1347' name='basicTypeChar' return='1192' flags='1' bytes='5' iicount='139'/>
<parse method='1348'  stamp='1.233'>
<phase name='parse_hir' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<parse_done stamp='1.233'/>
</parse>
<phase name='optimize_blocks' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='gvn' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='optimize_null_checks' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase_done stamp='1.233'/>
</phase>
<phase name='emit_lir' stamp='1.233'>
<phase name='lirGeneration' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='linearScan' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase_done stamp='1.233'/>
</phase>
<phase name='codeemit' stamp='1.233'>
<phase_done stamp='1.233'/>
</phase>
<phase name='codeinstall' stamp='1.233'>
<phase_done stamp='1.236'/>
</phase>
<code_cache total_blobs='441' nmethods='77' adapters='277' free_code_cache='250240512'/>
<task_done success='1' nmsize='200' count='139' stamp='1.236'/>
</task>
<task compile_id='82' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='400' iicount='400' level='3' stamp='1.236'>
<phase name='setup' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='buildIR' stamp='1.236'>
<klass id='1347' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<type id='1197' name='int'/>
<method id='1348' holder='1347' name='putShort' return='1347' arguments='1197' flags='1' bytes='52' iicount='400'/>
<parse method='1348'  stamp='1.236'>
<phase name='parse_hir' stamp='1.236'>
<bc code='182' bci='18'/>
<type id='1199' name='void'/>
<method id='1350' holder='1347' name='enlarge' return='1199' arguments='1197' flags='2' bytes='73' iicount='38'/>
<call method='1350' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.236'/>
</phase>
<parse_done stamp='1.236'/>
</parse>
<phase name='optimize_blocks' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='gvn' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='optimize_null_checks' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase_done stamp='1.236'/>
</phase>
<phase name='emit_lir' stamp='1.236'>
<phase name='lirGeneration' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='linearScan' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase_done stamp='1.236'/>
</phase>
<phase name='codeemit' stamp='1.236'>
<phase_done stamp='1.236'/>
</phase>
<phase name='codeinstall' stamp='1.236'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.245'/>
</phase>
<code_cache total_blobs='443' nmethods='79' adapters='277' free_code_cache='250238208'/>
<task_done success='1' nmsize='520' count='400' stamp='1.245'/>
</task>
<task compile_id='84' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='56' count='384' iicount='384' level='3' stamp='1.245'>
<phase name='setup' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='buildIR' stamp='1.245'>
<type id='1191' name='boolean'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='equals' return='1191' arguments='1204' flags='1' bytes='56' iicount='384'/>
<parse method='1347'  stamp='1.245'>
<phase name='parse_hir' stamp='1.245'>
<bc code='184' bci='44'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1350' name='java.lang.StringLatin1' flags='16'/>
<method id='1351' holder='1350' name='equals' return='1191' arguments='1339 1339' flags='9' bytes='36' iicount='238'/>
<call method='1351' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.245'/>
</phase>
<parse_done stamp='1.245'/>
</parse>
<phase name='optimize_blocks' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='gvn' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='optimize_null_checks' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase_done stamp='1.245'/>
</phase>
<phase name='emit_lir' stamp='1.245'>
<phase name='lirGeneration' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='linearScan' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase_done stamp='1.245'/>
</phase>
<phase name='codeemit' stamp='1.245'>
<phase_done stamp='1.245'/>
</phase>
<phase name='codeinstall' stamp='1.245'>
<phase_done stamp='1.257'/>
</phase>
<code_cache total_blobs='446' nmethods='82' adapters='277' free_code_cache='250234496'/>
<task_done success='1' nmsize='1144' count='385' stamp='1.257'/>
</task>
<task compile_id='81' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='276' iicount='276' level='3' stamp='1.257'>
<phase name='setup' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='buildIR' stamp='1.257'>
<type id='1191' name='boolean'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1347' name='java.util.Objects' flags='17'/>
<method id='1348' holder='1347' name='equals' return='1191' arguments='1204 1204' flags='9' bytes='23' iicount='276'/>
<parse method='1348'  stamp='1.257'>
<phase name='parse_hir' stamp='1.257'>
<bc code='182' bci='11'/>
<method id='1350' holder='1204' name='equals' return='1191' arguments='1204' flags='1' bytes='11' iicount='8'/>
<call method='1350' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='1.257'/>
</phase>
<parse_done stamp='1.257'/>
</parse>
<phase name='optimize_blocks' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='gvn' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='optimize_null_checks' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase_done stamp='1.257'/>
</phase>
<phase name='emit_lir' stamp='1.257'>
<phase name='lirGeneration' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='linearScan' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase_done stamp='1.257'/>
</phase>
<phase name='codeemit' stamp='1.257'>
<phase_done stamp='1.257'/>
</phase>
<phase name='codeinstall' stamp='1.257'>
<phase_done stamp='1.264'/>
</phase>
<code_cache total_blobs='447' nmethods='83' adapters='277' free_code_cache='250233088'/>
<task_done success='1' nmsize='624' count='276' stamp='1.264'/>
</task>
<task compile_id='80' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='138' iicount='138' level='1' stamp='1.264'>
<phase name='setup' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='buildIR' stamp='1.264'>
<klass id='1347' name='java.lang.invoke.MethodTypeForm' flags='16'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1348' holder='1275' name='form' return='1347' flags='0' bytes='5' iicount='138'/>
<parse method='1348'  stamp='1.264'>
<phase name='parse_hir' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<parse_done stamp='1.264'/>
</parse>
<phase name='optimize_blocks' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='gvn' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='optimize_null_checks' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase_done stamp='1.264'/>
</phase>
<phase name='emit_lir' stamp='1.264'>
<phase name='lirGeneration' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='linearScan' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase_done stamp='1.264'/>
</phase>
<phase name='codeemit' stamp='1.264'>
<phase_done stamp='1.264'/>
</phase>
<phase name='codeinstall' stamp='1.264'>
<phase_done stamp='1.267'/>
</phase>
<code_cache total_blobs='448' nmethods='84' adapters='277' free_code_cache='250232320'/>
<task_done success='1' nmsize='200' count='141' stamp='1.267'/>
</task>
<task compile_id='88' method='java.lang.invoke.LambdaForm$Name initIndex (I)Z' bytes='26' count='259' iicount='259' level='3' stamp='1.267'>
<phase name='setup' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='buildIR' stamp='1.267'>
<type id='1191' name='boolean'/>
<type id='1197' name='int'/>
<klass id='1347' name='java.lang.invoke.LambdaForm$Name' flags='24'/>
<method id='1348' holder='1347' name='initIndex' return='1191' arguments='1197' flags='0' bytes='26' iicount='259'/>
<parse method='1348'  stamp='1.267'>
<phase name='parse_hir' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<parse_done stamp='1.267'/>
</parse>
<phase name='optimize_blocks' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='gvn' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='optimize_null_checks' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase_done stamp='1.267'/>
</phase>
<phase name='emit_lir' stamp='1.267'>
<phase name='lirGeneration' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='linearScan' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase_done stamp='1.267'/>
</phase>
<phase name='codeemit' stamp='1.267'>
<phase_done stamp='1.267'/>
</phase>
<phase name='codeinstall' stamp='1.267'>
<phase_done stamp='1.272'/>
</phase>
<code_cache total_blobs='450' nmethods='86' adapters='277' free_code_cache='250230400'/>
<task_done success='1' nmsize='432' count='259' stamp='1.272'/>
</task>
<task compile_id='87' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='134' iicount='134' level='1' stamp='1.272'>
<phase name='setup' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='buildIR' stamp='1.272'>
<type id='1197' name='int'/>
<klass id='1347' name='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry' flags='10'/>
<method id='1348' holder='1347' name='hashCode' return='1197' flags='1' bytes='5' iicount='134'/>
<parse method='1348'  stamp='1.272'>
<phase name='parse_hir' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<parse_done stamp='1.272'/>
</parse>
<phase name='optimize_blocks' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='gvn' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='optimize_null_checks' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase_done stamp='1.272'/>
</phase>
<phase name='emit_lir' stamp='1.272'>
<phase name='lirGeneration' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='linearScan' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase_done stamp='1.272'/>
</phase>
<phase name='codeemit' stamp='1.272'>
<phase_done stamp='1.272'/>
</phase>
<phase name='codeinstall' stamp='1.272'>
<phase_done stamp='1.276'/>
</phase>
<code_cache total_blobs='452' nmethods='88' adapters='277' free_code_cache='250228864'/>
<task_done success='1' nmsize='192' count='136' stamp='1.276'/>
</task>
<task compile_id='89' method='java.lang.AbstractStringBuilder length ()I' bytes='5' count='132' iicount='132' level='1' stamp='1.276'>
<phase name='setup' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='buildIR' stamp='1.276'>
<type id='1197' name='int'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1347' holder='1287' name='length' return='1197' flags='1' bytes='5' iicount='132'/>
<parse method='1347'  stamp='1.276'>
<phase name='parse_hir' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<parse_done stamp='1.276'/>
</parse>
<phase name='optimize_blocks' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='gvn' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='optimize_null_checks' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase_done stamp='1.276'/>
</phase>
<phase name='emit_lir' stamp='1.276'>
<phase name='lirGeneration' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='linearScan' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase_done stamp='1.276'/>
</phase>
<phase name='codeemit' stamp='1.276'>
<phase_done stamp='1.276'/>
</phase>
<phase name='codeinstall' stamp='1.276'>
<phase_done stamp='1.280'/>
</phase>
<code_cache total_blobs='454' nmethods='90' adapters='277' free_code_cache='250226688'/>
<task_done success='1' nmsize='192' count='132' stamp='1.280'/>
</task>
<task compile_id='90' method='java.lang.AbstractStringBuilder getValue ()[B' bytes='5' count='129' iicount='129' level='1' stamp='1.280'>
<phase name='setup' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='buildIR' stamp='1.280'>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1347' holder='1287' name='getValue' return='1339' flags='16' bytes='5' iicount='129'/>
<parse method='1347'  stamp='1.280'>
<phase name='parse_hir' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<parse_done stamp='1.280'/>
</parse>
<phase name='optimize_blocks' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='gvn' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='optimize_null_checks' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase_done stamp='1.280'/>
</phase>
<phase name='emit_lir' stamp='1.280'>
<phase name='lirGeneration' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='linearScan' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase_done stamp='1.280'/>
</phase>
<phase name='codeemit' stamp='1.280'>
<phase_done stamp='1.280'/>
</phase>
<phase name='codeinstall' stamp='1.280'>
<phase_done stamp='1.294'/>
</phase>
<code_cache total_blobs='456' nmethods='92' adapters='277' free_code_cache='250225152'/>
<task_done success='1' nmsize='200' count='129' stamp='1.294'/>
</task>
<task compile_id='95' method='jdk.internal.org.objectweb.asm.SymbolTable addConstantUtf8 (Ljava/lang/String;)I' bytes='98' count='397' backedge_count='10' iicount='397' level='3' stamp='1.296'>
<phase name='setup' stamp='1.296'>
<phase_done stamp='1.296'/>
</phase>
<phase name='buildIR' stamp='1.296'>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<klass id='1347' name='jdk.internal.org.objectweb.asm.SymbolTable' flags='16'/>
<method id='1348' holder='1347' name='addConstantUtf8' return='1197' arguments='1205' flags='0' bytes='98' iicount='397'/>
<parse method='1348'  stamp='1.296'>
<phase name='parse_hir' stamp='1.296'>
<bc code='184' bci='2'/>
<method id='1350' holder='1347' name='hash' return='1197' arguments='1197 1205' flags='10' bytes='10' compile_id='73' compiler='c1' level='3' iicount='628'/>
<call method='1350' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1350'>
<bc code='182' bci='4'/>
<method id='1352' holder='1205' name='hashCode' return='1197' flags='1' bytes='60' compile_id='44' compiler='c1' level='3' iicount='1233'/>
<call method='1352' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.296'/>
</parse>
<bc code='182' bci='8'/>
<klass id='1354' name='jdk.internal.org.objectweb.asm.SymbolTable$Entry' flags='10'/>
<method id='1355' holder='1347' name='get' return='1354' arguments='1197' flags='2' bytes='13' compile_id='55' compiler='c1' level='3' iicount='740'/>
<call method='1355' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1355'>
<parse_done stamp='1.296'/>
</parse>
<bc code='182' bci='37'/>
<type id='1191' name='boolean'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1359' holder='1205' name='equals' return='1191' arguments='1204' flags='1' bytes='56' compile_id='84' compiler='c1' level='3' iicount='435'/>
<call method='1359' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='61'/>
<klass id='1361' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<method id='1362' holder='1361' name='putByte' return='1361' arguments='1197' flags='1' bytes='39' iicount='379'/>
<call method='1362' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1361'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1361'/>
<bc code='182' bci='65'/>
<method id='1364' holder='1361' name='putUTF8' return='1361' arguments='1205' flags='1' bytes='144' compile_id='68' compiler='c1' level='3' iicount='301'/>
<call method='1364' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1361'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1361'/>
<bc code='183' bci='88'/>
<type id='1199' name='void'/>
<method id='1366' holder='1354' name='&lt;init&gt;' return='1199' arguments='1197 1197 1205 1197' flags='0' bytes='17' compile_id='72' compiler='c1' level='3' iicount='425'/>
<call method='1366' instr='invokespecial'/>
<inline_fail reason='callee uses too much stack'/>
<bc code='182' bci='91'/>
<method id='1368' holder='1347' name='put' return='1354' arguments='1354' flags='2' bytes='150' compile_id='76' compiler='c1' level='3' iicount='537'/>
<call method='1368' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.297'/>
</phase>
<parse_done stamp='1.297'/>
</parse>
<phase name='optimize_blocks' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase name='gvn' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase name='optimize_null_checks' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase_done stamp='1.297'/>
</phase>
<phase name='emit_lir' stamp='1.297'>
<phase name='lirGeneration' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase name='linearScan' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase_done stamp='1.297'/>
</phase>
<phase name='codeemit' stamp='1.297'>
<phase_done stamp='1.297'/>
</phase>
<phase name='codeinstall' stamp='1.297'>
<dependency type='leaf_type' ctxk='1361'/>
<phase_done stamp='1.318'/>
</phase>
<code_cache total_blobs='458' nmethods='94' adapters='277' free_code_cache='250220800'/>
<task_done success='1' nmsize='1528' count='397' backedge_count='10' inlined_bytes='23' stamp='1.318'/>
</task>
<task compile_id='98' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet expungeStaleElements ()V' bytes='27' count='389' iicount='389' level='3' stamp='1.318'>
<phase name='setup' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='buildIR' stamp='1.318'>
<type id='1199' name='void'/>
<klass id='1347' name='java.lang.invoke.MethodType$ConcurrentWeakInternSet' flags='10'/>
<method id='1348' holder='1347' name='expungeStaleElements' return='1199' flags='2' bytes='27' iicount='390'/>
<parse method='1348'  stamp='1.318'>
<phase name='parse_hir' stamp='1.318'>
<bc code='182' bci='4'/>
<klass id='1232' name='java.lang.ref.Reference' flags='1025'/>
<klass id='1350' name='java.lang.ref.ReferenceQueue' flags='1'/>
<method id='1351' holder='1350' name='poll' return='1232' flags='1' bytes='40' iicount='9'/>
<call method='1351' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='17'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1352' name='java.util.concurrent.ConcurrentMap' flags='1537'/>
<method id='1353' holder='1352' name='remove' return='1204' arguments='1204' flags='4161' bytes='10' iicount='1'/>
<call method='1353' instr='invokeinterface'/>
<klass id='1305' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<dependency type='unique_implementor' ctxk='1352' x='1305'/>
<method id='1354' holder='1305' name='remove' return='1204' arguments='1204' flags='1' bytes='8' iicount='2'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1353'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1305'/>
<parse method='1354'>
<bc code='182' bci='4'/>
<method id='1356' holder='1305' name='replaceNode' return='1204' arguments='1204 1204 1204' flags='16' bytes='437' iicount='6'/>
<call method='1356' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.318'/>
</parse>
<phase_done stamp='1.318'/>
</phase>
<parse_done stamp='1.318'/>
</parse>
<phase name='optimize_blocks' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='gvn' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='optimize_null_checks' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase_done stamp='1.318'/>
</phase>
<phase name='emit_lir' stamp='1.318'>
<phase name='lirGeneration' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='linearScan' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase_done stamp='1.318'/>
</phase>
<phase name='codeemit' stamp='1.318'>
<phase_done stamp='1.318'/>
</phase>
<phase name='codeinstall' stamp='1.318'>
<dependency type='leaf_type' ctxk='1305'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1353'/>
<dependency type='unique_implementor' ctxk='1352' x='1305'/>
<phase_done stamp='1.329'/>
</phase>
<code_cache total_blobs='460' nmethods='96' adapters='277' free_code_cache='250218112'/>
<task_done success='1' nmsize='896' count='411' inlined_bytes='8' stamp='1.330'/>
</task>
<task compile_id='99' method='java.lang.ref.NativeReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='411' iicount='411' level='3' stamp='1.330'>
<phase name='setup' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='buildIR' stamp='1.330'>
<klass id='1232' name='java.lang.ref.Reference' flags='1025'/>
<klass id='1347' name='java.lang.ref.NativeReferenceQueue' flags='16'/>
<method id='1348' holder='1347' name='poll' return='1232' flags='1' bytes='28' iicount='411'/>
<parse method='1348'  stamp='1.330'>
<phase name='parse_hir' stamp='1.330'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<klass id='1350' name='java.lang.ref.ReferenceQueue' flags='1'/>
<method id='1351' holder='1350' name='headIsNull' return='1191' flags='16' bytes='13' compile_id='62' compiler='c1' level='3' iicount='421'/>
<call method='1351' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1351'>
<parse_done stamp='1.330'/>
</parse>
<bc code='182' bci='17'/>
<method id='1354' holder='1350' name='poll0' return='1232' flags='16' bytes='65' iicount='2'/>
<call method='1354' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.330'/>
</phase>
<parse_done stamp='1.330'/>
</parse>
<phase name='optimize_blocks' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='gvn' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='optimize_null_checks' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase_done stamp='1.330'/>
</phase>
<phase name='emit_lir' stamp='1.330'>
<phase name='lirGeneration' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='linearScan' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase_done stamp='1.330'/>
</phase>
<phase name='codeemit' stamp='1.330'>
<phase_done stamp='1.330'/>
</phase>
<phase name='codeinstall' stamp='1.330'>
<phase_done stamp='1.339'/>
</phase>
<code_cache total_blobs='462' nmethods='98' adapters='277' free_code_cache='250215424'/>
<task_done success='1' nmsize='864' count='416' inlined_bytes='13' stamp='1.339'/>
</task>
<task compile_id='101' method='java.lang.invoke.MethodType parameterType (I)Ljava/lang/Class;' bytes='7' count='407' iicount='407' level='3' stamp='1.339'>
<phase name='setup' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='buildIR' stamp='1.339'>
<klass id='1206' name='java.lang.Class' flags='17'/>
<type id='1197' name='int'/>
<klass id='1275' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1347' holder='1275' name='parameterType' return='1206' arguments='1197' flags='1' bytes='7' iicount='407'/>
<parse method='1347'  stamp='1.339'>
<phase name='parse_hir' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<parse_done stamp='1.339'/>
</parse>
<phase name='optimize_blocks' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='gvn' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='optimize_null_checks' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase_done stamp='1.339'/>
</phase>
<phase name='emit_lir' stamp='1.339'>
<phase name='lirGeneration' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='linearScan' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase_done stamp='1.339'/>
</phase>
<phase name='codeemit' stamp='1.339'>
<phase_done stamp='1.339'/>
</phase>
<phase name='codeinstall' stamp='1.339'>
<phase_done stamp='1.346'/>
</phase>
<code_cache total_blobs='463' nmethods='99' adapters='277' free_code_cache='250214400'/>
<task_done success='1' nmsize='312' count='421' stamp='1.346'/>
</task>
<task compile_id='105' method='java.lang.invoke.LambdaForm$BasicType basicType (C)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='187' count='386' iicount='386' level='3' stamp='1.346'>
<phase name='setup' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase name='buildIR' stamp='1.346'>
<klass id='1347' name='java.lang.invoke.LambdaForm$BasicType' flags='16408'/>
<type id='1192' name='char'/>
<method id='1348' holder='1347' name='basicType' return='1347' arguments='1192' flags='8' bytes='187' iicount='390'/>
<parse method='1348'  stamp='1.346'>
<phase name='parse_hir' stamp='1.346'>
<bc code='183' bci='162'/>
<type id='1199' name='void'/>
<klass id='1289' name='java.lang.StringBuilder' flags='17'/>
<method id='1357' holder='1289' name='&lt;init&gt;' return='1199' flags='1' bytes='7' iicount='157'/>
<call method='1357' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1357'>
<bc code='183' bci='3'/>
<type id='1197' name='int'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1359' holder='1287' name='&lt;init&gt;' return='1199' arguments='1197' flags='0' bytes='39' iicount='158'/>
<call method='1359' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.346'/>
</parse>
<bc code='182' bci='167'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1362' holder='1289' name='append' return='1289' arguments='1205' flags='1' bytes='8' iicount='317'/>
<call method='1362' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1362'>
<bc code='183' bci='2'/>
<method id='1364' holder='1287' name='append' return='1287' arguments='1205' flags='1' bytes='45' iicount='317'/>
<call method='1364' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.346'/>
</parse>
<bc code='182' bci='171'/>
<method id='1366' holder='1289' name='append' return='1289' arguments='1192' flags='1' bytes='8' iicount='167'/>
<call method='1366' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1366'>
<bc code='183' bci='2'/>
<method id='1368' holder='1287' name='append' return='1287' arguments='1192' flags='1' bytes='77' iicount='167'/>
<call method='1368' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.346'/>
</parse>
<bc code='182' bci='176'/>
<call method='1362' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1362'>
<bc code='183' bci='2'/>
<call method='1364' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.346'/>
</parse>
<bc code='182' bci='179'/>
<method id='1371' holder='1289' name='toString' return='1205' flags='1' bytes='9' iicount='158'/>
<call method='1371' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1371'>
<bc code='183' bci='5'/>
<method id='1373' holder='1205' name='&lt;init&gt;' return='1199' arguments='1289' flags='1' bytes='7' iicount='158'/>
<call method='1373' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1373'>
<bc code='183' bci='3'/>
<klass id='1375' name='java.lang.Void' flags='17'/>
<method id='1376' holder='1205' name='&lt;init&gt;' return='1199' arguments='1287 1375' flags='0' bytes='99' iicount='158'/>
<call method='1376' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.346'/>
</parse>
<parse_done stamp='1.346'/>
</parse>
<bc code='184' bci='182'/>
<klass id='1228' name='java.lang.InternalError' flags='1'/>
<klass id='1378' name='java.lang.invoke.MethodHandleStatics' flags='0'/>
<method id='1379' holder='1378' name='newInternalError' return='1228' arguments='1205' flags='8' bytes='9' iicount='1'/>
<call method='1379' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1379'>
<bc code='183' bci='5'/>
<method id='1381' holder='1228' name='&lt;init&gt;' return='1199' arguments='1205' flags='1' bytes='6' iicount='1'/>
<call method='1381' instr='invokespecial'/>
<inline_fail reason='callee&apos;s klass not linked yet'/>
<parse_done stamp='1.346'/>
</parse>
<phase_done stamp='1.346'/>
</phase>
<parse_done stamp='1.346'/>
</parse>
<phase name='optimize_blocks' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase name='gvn' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase name='optimize_null_checks' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase_done stamp='1.346'/>
</phase>
<phase name='emit_lir' stamp='1.346'>
<phase name='lirGeneration' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase name='linearScan' stamp='1.346'>
<phase_done stamp='1.346'/>
</phase>
<phase_done stamp='1.346'/>
</phase>
<phase name='codeemit' stamp='1.346'>
<phase_done stamp='1.347'/>
</phase>
<phase name='codeinstall' stamp='1.347'>
<phase_done stamp='1.374'/>
</phase>
<code_cache total_blobs='465' nmethods='101' adapters='277' free_code_cache='250209152'/>
<task_done success='1' nmsize='2672' count='396' inlined_bytes='56' stamp='1.374'/>
</task>
<task compile_id='107' method='java.lang.invoke.LambdaForm$BasicType basicType (Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' bytes='8' count='384' iicount='384' level='3' stamp='1.374'>
<phase name='setup' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='buildIR' stamp='1.374'>
<klass id='1347' name='java.lang.invoke.LambdaForm$BasicType' flags='16408'/>
<klass id='1206' name='java.lang.Class' flags='17'/>
<method id='1348' holder='1347' name='basicType' return='1347' arguments='1206' flags='8' bytes='8' iicount='385'/>
<parse method='1348'  stamp='1.374'>
<phase name='parse_hir' stamp='1.374'>
<bc code='184' bci='1'/>
<type id='1192' name='char'/>
<klass id='1350' name='sun.invoke.util.Wrapper' flags='16401'/>
<method id='1351' holder='1350' name='basicTypeChar' return='1192' arguments='1206' flags='9' bytes='18' iicount='390'/>
<call method='1351' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1351'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<method id='1353' holder='1206' name='isPrimitive' return='1191' flags='257' bytes='0' compile_id='37' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1353' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='11'/>
<method id='1355' holder='1350' name='forPrimitiveType' return='1350' arguments='1206' flags='9' bytes='122' iicount='275'/>
<call method='1355' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='14'/>
<method id='1357' holder='1350' name='basicTypeChar' return='1192' flags='1' bytes='5' compile_id='75' compiler='c1' level='1' iicount='139'/>
<call method='1357' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1357'>
<parse_done stamp='1.374'/>
</parse>
<parse_done stamp='1.374'/>
</parse>
<bc code='184' bci='4'/>
<method id='1359' holder='1347' name='basicType' return='1347' arguments='1192' flags='8' bytes='187' compile_id='105' compiler='c1' level='3' iicount='405'/>
<call method='1359' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.374'/>
</phase>
<parse_done stamp='1.374'/>
</parse>
<phase name='optimize_blocks' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='gvn' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='optimize_null_checks' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase_done stamp='1.374'/>
</phase>
<phase name='emit_lir' stamp='1.374'>
<phase name='lirGeneration' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='linearScan' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase_done stamp='1.374'/>
</phase>
<phase name='codeemit' stamp='1.374'>
<phase_done stamp='1.374'/>
</phase>
<phase name='codeinstall' stamp='1.374'>
<phase_done stamp='1.381'/>
</phase>
<code_cache total_blobs='469' nmethods='103' adapters='277' free_code_cache='250193024'/>
<task_done success='1' nmsize='560' count='397' inlined_bytes='23' stamp='1.381'/>
</task>
<task compile_id='108' method='sun.invoke.util.Wrapper basicTypeChar (Ljava/lang/Class;)C' bytes='18' count='397' iicount='397' level='3' stamp='1.381'>
<phase name='setup' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='buildIR' stamp='1.381'>
<type id='1192' name='char'/>
<klass id='1206' name='java.lang.Class' flags='17'/>
<klass id='1347' name='sun.invoke.util.Wrapper' flags='16401'/>
<method id='1348' holder='1347' name='basicTypeChar' return='1192' arguments='1206' flags='9' bytes='18' iicount='397'/>
<parse method='1348'  stamp='1.381'>
<phase name='parse_hir' stamp='1.381'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<method id='1350' holder='1206' name='isPrimitive' return='1191' flags='257' bytes='0' compile_id='37' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1350' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='11'/>
<method id='1352' holder='1347' name='forPrimitiveType' return='1347' arguments='1206' flags='9' bytes='122' iicount='280'/>
<call method='1352' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='14'/>
<method id='1354' holder='1347' name='basicTypeChar' return='1192' flags='1' bytes='5' compile_id='75' compiler='c1' level='1' iicount='139'/>
<call method='1354' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1354'>
<parse_done stamp='1.381'/>
</parse>
<phase_done stamp='1.381'/>
</phase>
<parse_done stamp='1.381'/>
</parse>
<phase name='optimize_blocks' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='gvn' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='optimize_null_checks' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase_done stamp='1.381'/>
</phase>
<phase name='emit_lir' stamp='1.381'>
<phase name='lirGeneration' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='linearScan' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase_done stamp='1.381'/>
</phase>
<phase name='codeemit' stamp='1.381'>
<phase_done stamp='1.381'/>
</phase>
<phase name='codeinstall' stamp='1.381'>
<phase_done stamp='1.388'/>
</phase>
<code_cache total_blobs='472' nmethods='106' adapters='277' free_code_cache='250189824'/>
<task_done success='1' nmsize='472' count='397' inlined_bytes='5' stamp='1.388'/>
</task>
<task compile_id='96' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='283' iicount='283' level='3' stamp='1.395'>
<phase name='setup' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='buildIR' stamp='1.395'>
<type id='1199' name='void'/>
<klass id='1339' name='[B' flags='1041'/>
<type id='1195' name='byte'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='&lt;init&gt;' return='1199' arguments='1339 1195' flags='0' bytes='15' iicount='283'/>
<parse method='1347'  stamp='1.395'>
<phase name='parse_hir' stamp='1.395'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1349' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1271452'/>
<call method='1349' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1349'>
<parse_done stamp='1.395'/>
</parse>
<phase_done stamp='1.395'/>
</phase>
<parse_done stamp='1.395'/>
</parse>
<phase name='optimize_blocks' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='gvn' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='optimize_null_checks' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase_done stamp='1.395'/>
</phase>
<phase name='emit_lir' stamp='1.395'>
<phase name='lirGeneration' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='linearScan' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase_done stamp='1.395'/>
</phase>
<phase name='codeemit' stamp='1.395'>
<phase_done stamp='1.395'/>
</phase>
<phase name='codeinstall' stamp='1.395'>
<phase_done stamp='1.404'/>
</phase>
<code_cache total_blobs='472' nmethods='108' adapters='277' free_code_cache='250201728'/>
<task_done success='1' nmsize='456' count='285' inlined_bytes='1' stamp='1.404'/>
</task>
<task compile_id='114' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='385' backedge_count='2' iicount='385' level='3' stamp='1.404'>
<phase name='setup' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase name='buildIR' stamp='1.404'>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1305' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1347' holder='1305' name='get' return='1204' arguments='1204' flags='1' bytes='162' iicount='385'/>
<parse method='1347'  stamp='1.404'>
<phase name='parse_hir' stamp='1.404'>
<bc code='182' bci='1'/>
<type id='1197' name='int'/>
<method id='1349' holder='1204' name='hashCode' return='1197' flags='257' bytes='0' compile_id='28' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1349' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='4'/>
<method id='1350' holder='1305' name='spread' return='1197' arguments='1197' flags='24' bytes='10' compile_id='34' compiler='c1' level='3' iicount='649'/>
<call method='1350' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1350'>
<parse_done stamp='1.404'/>
</parse>
<bc code='184' bci='34'/>
<klass id='1352' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1353' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1354' holder='1305' name='tabAt' return='1352' arguments='1353 1197' flags='24' bytes='22' compile_id='32' compiler='c1' level='3' iicount='668'/>
<call method='1354' instr='invokestatic'/>
<inline_fail reason='callee uses too much stack'/>
<bc code='182' bci='73'/>
<type id='1191' name='boolean'/>
<method id='1356' holder='1204' name='equals' return='1191' arguments='1204' flags='1' bytes='11' iicount='8'/>
<call method='1356' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='93'/>
<method id='1357' holder='1352' name='find' return='1352' arguments='1197 1204' flags='0' bytes='52' iicount='1'/>
<call method='1357' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='149'/>
<call method='1356' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='1.404'/>
</phase>
<parse_done stamp='1.404'/>
</parse>
<phase name='optimize_blocks' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase name='gvn' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase name='optimize_null_checks' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase_done stamp='1.404'/>
</phase>
<phase name='emit_lir' stamp='1.404'>
<phase name='lirGeneration' stamp='1.404'>
<phase_done stamp='1.404'/>
</phase>
<phase name='linearScan' stamp='1.404'>
<phase_done stamp='1.405'/>
</phase>
<phase_done stamp='1.405'/>
</phase>
<phase name='codeemit' stamp='1.405'>
<phase_done stamp='1.405'/>
</phase>
<phase name='codeinstall' stamp='1.405'>
<phase_done stamp='1.432'/>
</phase>
<code_cache total_blobs='473' nmethods='109' adapters='277' free_code_cache='250196608'/>
<task_done success='1' nmsize='2800' count='388' backedge_count='2' inlined_bytes='10' stamp='1.432'/>
</task>
<task compile_id='118' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='944' iicount='949' level='3' stamp='1.432'>
<phase name='setup' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='buildIR' stamp='1.432'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' iicount='1208'/>
<parse method='1348'  stamp='1.432'>
<phase name='parse_hir' stamp='1.432'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1350' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1271560'/>
<call method='1350' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1350'>
<parse_done stamp='1.432'/>
</parse>
<phase_done stamp='1.432'/>
</phase>
<parse_done stamp='1.432'/>
</parse>
<phase name='optimize_blocks' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='gvn' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='optimize_null_checks' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase_done stamp='1.432'/>
</phase>
<phase name='emit_lir' stamp='1.432'>
<phase name='lirGeneration' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='linearScan' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase_done stamp='1.432'/>
</phase>
<phase name='codeemit' stamp='1.432'>
<phase_done stamp='1.432'/>
</phase>
<phase name='codeinstall' stamp='1.432'>
<phase_done stamp='1.436'/>
</phase>
<code_cache total_blobs='474' nmethods='110' adapters='277' free_code_cache='250195584'/>
<task_done success='1' nmsize='352' count='105791' inlined_bytes='1' stamp='1.436'/>
</task>
<task compile_id='115' method='java.util.Arrays copyOfRange ([BII)[B' bytes='64' count='416' iicount='416' level='3' stamp='1.436'>
<phase name='setup' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='buildIR' stamp='1.436'>
<klass id='1339' name='[B' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Arrays' flags='1'/>
<method id='1348' holder='1347' name='copyOfRange' return='1339' arguments='1339 1197 1197' flags='9' bytes='64' iicount='416'/>
<parse method='1348'  stamp='1.436'>
<phase name='parse_hir' stamp='1.436'>
<bc code='183' bci='16'/>
<type id='1199' name='void'/>
<klass id='1289' name='java.lang.StringBuilder' flags='17'/>
<method id='1351' holder='1289' name='&lt;init&gt;' return='1199' flags='1' bytes='7' iicount='174'/>
<call method='1351' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1351'>
<bc code='183' bci='3'/>
<klass id='1287' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1353' holder='1287' name='&lt;init&gt;' return='1199' arguments='1197' flags='0' bytes='39' iicount='176'/>
<call method='1353' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.436'/>
</parse>
<bc code='182' bci='20'/>
<method id='1355' holder='1289' name='append' return='1289' arguments='1197' flags='1' bytes='8' iicount='31'/>
<call method='1355' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1355'>
<bc code='183' bci='2'/>
<method id='1357' holder='1287' name='append' return='1287' arguments='1197' flags='1' bytes='55' iicount='31'/>
<call method='1357' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.436'/>
</parse>
<bc code='182' bci='26'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1360' holder='1289' name='append' return='1289' arguments='1205' flags='1' bytes='8' iicount='353'/>
<call method='1360' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1360'>
<bc code='183' bci='2'/>
<method id='1362' holder='1287' name='append' return='1287' arguments='1205' flags='1' bytes='45' iicount='353'/>
<call method='1362' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.436'/>
</parse>
<bc code='182' bci='30'/>
<call method='1355' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1355'>
<bc code='183' bci='2'/>
<call method='1357' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.436'/>
</parse>
<bc code='182' bci='33'/>
<method id='1364' holder='1289' name='toString' return='1205' flags='1' bytes='9' iicount='176'/>
<call method='1364' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1364'>
<bc code='183' bci='5'/>
<method id='1366' holder='1205' name='&lt;init&gt;' return='1199' arguments='1289' flags='1' bytes='7' iicount='176'/>
<call method='1366' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1366'>
<bc code='183' bci='3'/>
<klass id='1368' name='java.lang.Void' flags='17'/>
<method id='1369' holder='1205' name='&lt;init&gt;' return='1199' arguments='1287 1368' flags='0' bytes='99' iicount='176'/>
<call method='1369' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.436'/>
</parse>
<parse_done stamp='1.436'/>
</parse>
<bc code='183' bci='36'/>
<klass id='1350' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1371' holder='1350' name='&lt;init&gt;' return='1199' arguments='1205' flags='1' bytes='6' iicount='1'/>
<call method='1371' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='55'/>
<klass id='1373' name='java.lang.Math' flags='17'/>
<method id='1374' holder='1373' name='min' return='1197' arguments='1197 1197' flags='9' bytes='11' compile_id='30' compiler='c1' level='3' iicount='910'/>
<call method='1374' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1374'>
<parse_done stamp='1.436'/>
</parse>
<bc code='184' bci='58'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1210' name='java.lang.System' flags='17'/>
<method id='1376' holder='1210' name='arraycopy' return='1199' arguments='1204 1197 1204 1197 1197' flags='265' bytes='0' compile_id='35' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1376' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<phase_done stamp='1.436'/>
</phase>
<parse_done stamp='1.436'/>
</parse>
<phase name='optimize_blocks' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='gvn' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='optimize_null_checks' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase_done stamp='1.436'/>
</phase>
<phase name='emit_lir' stamp='1.436'>
<phase name='lirGeneration' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='linearScan' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase_done stamp='1.436'/>
</phase>
<phase name='codeemit' stamp='1.436'>
<phase_done stamp='1.436'/>
</phase>
<phase name='codeinstall' stamp='1.436'>
<phase_done stamp='1.460'/>
</phase>
<code_cache total_blobs='476' nmethods='112' adapters='277' free_code_cache='250190720'/>
<task_done success='1' nmsize='2136' count='416' inlined_bytes='58' stamp='1.460'/>
</task>
<task compile_id='120' compile_kind='osr' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='121455' iicount='1' osr_bci='15' level='3' stamp='1.460'>
<phase name='setup' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase name='buildIR' stamp='1.460'>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateGetterWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350'  stamp='1.460'>
<phase name='parse_hir' stamp='1.460'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1353' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='2'/>
<call method='1353' instr='invokespecial'/>
<inline_fail reason='callee uses too much stack'/>
<bc code='182' bci='21'/>
<method id='1355' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='1309176'/>
<call method='1355' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse method='1355'>
<bc code='182' bci='3'/>
<method id='1357' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<call method='1357' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse_done stamp='1.460'/>
</parse>
<bc code='183' bci='32'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1359' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='119' compiler='c2' level='4' iicount='114601'/>
<call method='1359' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1359'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1361' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1382039'/>
<call method='1361' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1361'>
<parse_done stamp='1.460'/>
</parse>
<parse_done stamp='1.460'/>
</parse>
<phase_done stamp='1.460'/>
</phase>
<parse_done stamp='1.460'/>
</parse>
<phase name='optimize_blocks' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase name='gvn' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase name='optimize_null_checks' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase_done stamp='1.460'/>
</phase>
<phase name='emit_lir' stamp='1.460'>
<phase name='lirGeneration' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase name='linearScan' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase_done stamp='1.460'/>
</phase>
<phase name='codeemit' stamp='1.460'>
<phase_done stamp='1.460'/>
</phase>
<phase name='codeinstall' stamp='1.460'>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<phase_done stamp='1.479'/>
</phase>
<code_cache total_blobs='477' nmethods='113' adapters='277' free_code_cache='250187392'/>
<task_done success='1' nmsize='1816' count='1' backedge_count='1098337' inlined_bytes='18' stamp='1.479'/>
</task>
<task compile_id='117' method='jdk.internal.org.objectweb.asm.ByteVector putByte (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='39' count='518' iicount='518' level='3' stamp='1.479'>
<phase name='setup' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='buildIR' stamp='1.479'>
<klass id='1347' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<type id='1197' name='int'/>
<method id='1348' holder='1347' name='putByte' return='1347' arguments='1197' flags='1' bytes='39' iicount='518'/>
<parse method='1348'  stamp='1.479'>
<phase name='parse_hir' stamp='1.479'>
<bc code='182' bci='18'/>
<type id='1199' name='void'/>
<method id='1350' holder='1347' name='enlarge' return='1199' arguments='1197' flags='2' bytes='73' iicount='63'/>
<call method='1350' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='1.479'/>
</phase>
<parse_done stamp='1.479'/>
</parse>
<phase name='optimize_blocks' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='gvn' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='optimize_null_checks' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase_done stamp='1.479'/>
</phase>
<phase name='emit_lir' stamp='1.479'>
<phase name='lirGeneration' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='linearScan' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase_done stamp='1.479'/>
</phase>
<phase name='codeemit' stamp='1.479'>
<phase_done stamp='1.479'/>
</phase>
<phase name='codeinstall' stamp='1.479'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.486'/>
</phase>
<code_cache total_blobs='480' nmethods='114' adapters='277' free_code_cache='250170752'/>
<task_done success='1' nmsize='480' count='518' stamp='1.486'/>
</task>
<task compile_id='116' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='396' iicount='396' level='3' stamp='1.486'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='396' stamp='1.486'/>
</task>
<task compile_id='110' method='java.lang.invoke.LambdaForm$BasicType basicTypeClass ()Ljava/lang/Class;' bytes='5' count='138' iicount='138' level='1' stamp='1.486'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='138' stamp='1.486'/>
</task>
<task compile_id='103' method='java.lang.invoke.LambdaForm$Name index ()I' bytes='5' count='171' iicount='171' level='1' stamp='1.486'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='171' stamp='1.486'/>
</task>
<task compile_id='97' method='java.lang.invoke.MethodTypeForm parameterSlotCount ()I' bytes='5' count='158' iicount='158' level='1' stamp='1.486'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='158' stamp='1.486'/>
</task>
<task compile_id='123' method='foo.rida.GetterWrapper getNumber ()I' bytes='5' count='816' iicount='827' level='1' stamp='1.676'>
<phase name='setup' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='buildIR' stamp='1.676'>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1348' holder='1347' name='getNumber' return='1197' flags='1' bytes='5' iicount='1401'/>
<parse method='1348'  stamp='1.676'>
<phase name='parse_hir' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<parse_done stamp='1.676'/>
</parse>
<phase name='optimize_blocks' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='gvn' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='optimize_null_checks' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase_done stamp='1.676'/>
</phase>
<phase name='emit_lir' stamp='1.676'>
<phase name='lirGeneration' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='linearScan' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase_done stamp='1.676'/>
</phase>
<phase name='codeemit' stamp='1.676'>
<phase_done stamp='1.676'/>
</phase>
<phase name='codeinstall' stamp='1.676'>
<phase_done stamp='1.679'/>
</phase>
<code_cache total_blobs='481' nmethods='117' adapters='277' free_code_cache='250179072'/>
<task_done success='1' nmsize='192' count='6266' stamp='1.679'/>
</task>
<task compile_id='124' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='62969' iicount='1' osr_bci='10' level='3' stamp='1.679'>
<phase name='setup' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase name='buildIR' stamp='1.679'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350'  stamp='1.679'>
<phase name='parse_hir' stamp='1.679'>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1352' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='123' compiler='c1' level='1' iicount='6266'/>
<call method='1352' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1352'>
<parse_done stamp='1.679'/>
</parse>
<phase_done stamp='1.679'/>
</phase>
<parse_done stamp='1.679'/>
</parse>
<phase name='optimize_blocks' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase name='gvn' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase name='optimize_null_checks' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase_done stamp='1.679'/>
</phase>
<phase name='emit_lir' stamp='1.679'>
<phase name='lirGeneration' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase name='linearScan' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase_done stamp='1.679'/>
</phase>
<phase name='codeemit' stamp='1.679'>
<phase_done stamp='1.679'/>
</phase>
<phase name='codeinstall' stamp='1.679'>
<phase_done stamp='1.688'/>
</phase>
<code_cache total_blobs='482' nmethods='118' adapters='277' free_code_cache='250177408'/>
<task_done success='1' nmsize='624' count='1' backedge_count='2448384' inlined_bytes='5' stamp='1.688'/>
</task>
<task compile_id='127' method='java.util.Random nextInt (I)I' bytes='74' count='453' iicount='455' level='3' stamp='1.747'>
<phase name='setup' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='buildIR' stamp='1.747'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='nextInt' return='1197' arguments='1197' flags='1' bytes='74' iicount='496'/>
<parse method='1348'  stamp='1.747'>
<phase name='parse_hir' stamp='1.747'>
<bc code='183' bci='10'/>
<type id='1199' name='void'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<klass id='1350' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1352' holder='1350' name='&lt;init&gt;' return='1199' arguments='1205' flags='1' bytes='6' iicount='1'/>
<call method='1352' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='17'/>
<method id='1354' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<call method='1354' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1347'/>
<bc code='182' bci='64'/>
<call method='1354' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.747'/>
</phase>
<parse_done stamp='1.747'/>
</parse>
<phase name='optimize_blocks' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='gvn' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='optimize_null_checks' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase_done stamp='1.747'/>
</phase>
<phase name='emit_lir' stamp='1.747'>
<phase name='lirGeneration' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='linearScan' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase_done stamp='1.747'/>
</phase>
<phase name='codeemit' stamp='1.747'>
<phase_done stamp='1.747'/>
</phase>
<phase name='codeinstall' stamp='1.747'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.758'/>
</phase>
<code_cache total_blobs='486' nmethods='121' adapters='277' free_code_cache='250169216'/>
<task_done success='1' nmsize='1008' count='84992' stamp='1.758'/>
</task>
<task compile_id='130' compile_kind='osr' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='85503' iicount='1' osr_bci='15' level='3' stamp='1.759'>
<phase name='setup' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase name='buildIR' stamp='1.759'>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateVirtualGetterWrappers' return='1349' arguments='1197' flags='9' bytes='76' iicount='1'/>
<parse method='1350'  stamp='1.759'>
<phase name='parse_hir' stamp='1.759'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1353' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='3'/>
<call method='1353' instr='invokespecial'/>
<inline_fail reason='callee uses too much stack'/>
<bc code='182' bci='21'/>
<method id='1355' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='2635256'/>
<call method='1355' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse method='1355'>
<bc code='182' bci='3'/>
<method id='1357' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<call method='1357' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1352'/>
<parse_done stamp='1.759'/>
</parse>
<bc code='182' bci='28'/>
<method id='1359' holder='1352' name='nextInt' return='1197' arguments='1197' flags='1' bytes='74' compile_id='127' compiler='c1' level='3' iicount='86803'/>
<call method='1359' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1359' x2='1352' x3='1359'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1352'/>
<bc code='183' bci='44'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1361' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' iicount='86962'/>
<call method='1361' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1361'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1363' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='2708120'/>
<call method='1363' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1363'>
<parse_done stamp='1.759'/>
</parse>
<parse_done stamp='1.759'/>
</parse>
<bc code='183' bci='58'/>
<klass id='1365' name='foo.rida.ChildGetterWrapper' flags='1'/>
<method id='1366' holder='1365' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='6' iicount='43577'/>
<call method='1366' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1366'>
<bc code='183' bci='2'/>
<call method='1361' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1361'>
<bc code='183' bci='1'/>
<call method='1363' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1363'>
<parse_done stamp='1.759'/>
</parse>
<parse_done stamp='1.759'/>
</parse>
<parse_done stamp='1.759'/>
</parse>
<phase_done stamp='1.759'/>
</phase>
<parse_done stamp='1.759'/>
</parse>
<phase name='optimize_blocks' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase name='gvn' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase name='optimize_null_checks' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase_done stamp='1.759'/>
</phase>
<phase name='emit_lir' stamp='1.759'>
<phase name='lirGeneration' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase name='linearScan' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase_done stamp='1.759'/>
</phase>
<phase name='codeemit' stamp='1.759'>
<phase_done stamp='1.759'/>
</phase>
<phase name='codeinstall' stamp='1.759'>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1357' x2='1352' x3='1357'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1359' x2='1352' x3='1359'/>
<phase_done stamp='1.784'/>
</phase>
<code_cache total_blobs='489' nmethods='122' adapters='277' free_code_cache='250150784'/>
<task_done success='1' nmsize='2400' count='1' backedge_count='777549' inlined_bytes='35' stamp='1.784'/>
</task>
<task compile_id='128' method='foo.rida.ParentGetterWrapper &lt;init&gt; (I)V' bytes='10' count='777948' iicount='777967' level='2' stamp='1.784'>
<phase name='setup' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='buildIR' stamp='1.784'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' iicount='778299'/>
<parse method='1348'  stamp='1.784'>
<phase name='parse_hir' stamp='1.784'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1350' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='3395300'/>
<call method='1350' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1350'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1347'/>
<parse_done stamp='1.784'/>
</parse>
<phase_done stamp='1.784'/>
</phase>
<parse_done stamp='1.784'/>
</parse>
<phase name='optimize_blocks' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='gvn' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='optimize_null_checks' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase_done stamp='1.784'/>
</phase>
<phase name='emit_lir' stamp='1.784'>
<phase name='lirGeneration' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='linearScan' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase_done stamp='1.784'/>
</phase>
<phase name='codeemit' stamp='1.784'>
<phase_done stamp='1.784'/>
</phase>
<phase name='codeinstall' stamp='1.784'>
<dependency type='no_finalizable_subclasses' ctxk='1347'/>
<phase_done stamp='1.793'/>
</phase>
<code_cache total_blobs='489' nmethods='124' adapters='277' free_code_cache='250162688'/>
<task_done success='1' nmsize='256' count='782047' inlined_bytes='1' stamp='1.793'/>
</task>
<task compile_id='129' method='foo.rida.ChildGetterWrapper &lt;init&gt; (I)V' bytes='6' count='392112' iicount='392116' level='2' stamp='1.793'>
<phase name='setup' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='buildIR' stamp='1.793'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.ChildGetterWrapper' flags='1'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='6' iicount='392247'/>
<parse method='1348'  stamp='1.793'>
<phase name='parse_hir' stamp='1.793'>
<bc code='183' bci='2'/>
<klass id='1350' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1351' holder='1350' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='128' compiler='c1' level='2' iicount='785239'/>
<call method='1351' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_success reason='inline'/>
<parse method='1351'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1353' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='3401939'/>
<call method='1353' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='1347'/>
<inline_success reason='inline'/>
<parse method='1353'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='1347'/>
<parse_done stamp='1.793'/>
</parse>
<parse_done stamp='1.793'/>
</parse>
<phase_done stamp='1.793'/>
</phase>
<parse_done stamp='1.793'/>
</parse>
<phase name='optimize_blocks' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='gvn' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='optimize_null_checks' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase_done stamp='1.793'/>
</phase>
<phase name='emit_lir' stamp='1.793'>
<phase name='lirGeneration' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='linearScan' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase_done stamp='1.793'/>
</phase>
<phase name='codeemit' stamp='1.793'>
<phase_done stamp='1.793'/>
</phase>
<phase name='codeinstall' stamp='1.793'>
<dependency type='leaf_type' ctxk='1347'/>
<phase_done stamp='1.797'/>
</phase>
<code_cache total_blobs='490' nmethods='125' adapters='277' free_code_cache='250161792'/>
<task_done success='1' nmsize='256' count='441806' inlined_bytes='11' stamp='1.797'/>
</task>
<task compile_id='134' method='foo.rida.ParentGetterWrapper getNumber ()I' bytes='5' count='1930' iicount='1944' level='1' stamp='2.131'>
<phase name='setup' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='buildIR' stamp='2.131'>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1348' holder='1347' name='getNumber' return='1197' flags='1' bytes='5' iicount='2545'/>
<parse method='1348'  stamp='2.131'>
<phase name='parse_hir' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<parse_done stamp='2.131'/>
</parse>
<phase name='optimize_blocks' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='gvn' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='optimize_null_checks' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase_done stamp='2.131'/>
</phase>
<phase name='emit_lir' stamp='2.131'>
<phase name='lirGeneration' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='linearScan' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase_done stamp='2.131'/>
</phase>
<phase name='codeemit' stamp='2.131'>
<phase_done stamp='2.131'/>
</phase>
<phase name='codeinstall' stamp='2.131'>
<phase_done stamp='2.133'/>
</phase>
<code_cache total_blobs='488' nmethods='123' adapters='277' free_code_cache='250160640'/>
<task_done success='1' nmsize='192' count='7029' stamp='2.133'/>
</task>
<task compile_id='135' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='63281' iicount='1' osr_bci='10' level='3' stamp='2.133'>
<phase name='setup' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase name='buildIR' stamp='2.133'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkVirtualGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350'  stamp='2.133'>
<phase name='parse_hir' stamp='2.133'>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1352' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='134' compiler='c1' level='1' iicount='7029'/>
<call method='1352' instr='invokevirtual'/>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1352' x2='1348' x3='1352'/>
<inline_success reason='inline'/>
<parse method='1352'>
<parse_done stamp='2.133'/>
</parse>
<phase_done stamp='2.133'/>
</phase>
<parse_done stamp='2.133'/>
</parse>
<phase name='optimize_blocks' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase name='gvn' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase name='optimize_null_checks' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase_done stamp='2.133'/>
</phase>
<phase name='emit_lir' stamp='2.133'>
<phase name='lirGeneration' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase name='linearScan' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase_done stamp='2.133'/>
</phase>
<phase name='codeemit' stamp='2.133'>
<phase_done stamp='2.133'/>
</phase>
<phase name='codeinstall' stamp='2.133'>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1352' x2='1348' x3='1352'/>
<phase_done stamp='2.142'/>
</phase>
<code_cache total_blobs='489' nmethods='124' adapters='277' free_code_cache='250158848'/>
<task_done success='1' nmsize='752' count='1' backedge_count='1164611' inlined_bytes='5' stamp='2.142'/>
</task>
<fragment>
<![CDATA[
<task compile_id='138' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='280' count='270' iicount='270' level='3' stamp='2.163'>
<phase name='setup' stamp='2.163'>
<phase_done stamp='2.163'/>
</phase>
<phase name='buildIR' stamp='2.163'>
<type id='1199' name='void'/>
<type id='1198' name='long'/>
<type id='1197' name='int'/>
<klass id='1305' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1347' holder='1305' name='addCount' return='1199' arguments='1198 1197' flags='18' bytes='280' iicount='270'/>
<parse method='1347'  stamp='2.163'>
<phase name='parse_hir' stamp='2.163'>
<bc code='182' bci='31'/>
<type id='1191' name='boolean'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1353' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1353' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='58'/>
<klass id='1354' name='java.util.concurrent.ThreadLocalRandom' unloaded='1'/>
<method id='1355' holder='1354' name='getProbe' return='1197' unloaded='1'/>
<call method='1355' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='91'/>
<call method='1353' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='115'/>
<method id='1356' holder='1305' name='sumCount' return='1198' flags='16' bytes='60' iicount='1'/>
<call method='1356' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='161'/>
<method id='1360' holder='1305' name='resizeStamp' return='1197' arguments='1197' flags='24' bytes='9' iicount='1'/>
<call method='1360' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1360'>
<bc code='184' bci='1'/>
<klass id='1323' name='java.lang.Integer' flags='17'/>
<method id='1362' holder='1323' name='numberOfLeadingZeros' return='1197' arguments='1197' flags='9' bytes='79' iicount='10'/>
<call method='1362' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.163'/>
</parse>
<bc code='182' bci='227'/>
<method id='1364' holder='1291' name='compareAndSetInt' return='1191' arguments='1204 1198 1197 1197' flags='273' bytes='0' iicount='55'/>
<call method='1364' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='238'/>
<klass id='1359' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1365' holder='1305' name='transfer' return='1199' arguments='1359 1359' flags='18' bytes='849' iicount='1'/>
<call method='1365' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='257'/>
<call method='1364' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='267'/>
<call method='1365' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='271'/>
<call method='1356' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='104'/>
<method id='1367' holder='1305' name='fullAddCount' return='1199' arguments='1198 1191' flags='18' bytes='462' iicount='1'/>
<call method='1367' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='2.164'/>
</phase>
<parse_done stamp='2.164'/>
</parse>
<phase name='optimize_blocks' stamp='2.164'>
<phase_done stamp='2.164'/>
</phase>
<phase name='gvn' stamp='2.164'>
<phase_done stamp='2.164'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.164'>
<phase_done stamp='2.164'/>
</phase>
<phase name='optimize_null_checks' stamp='2.164'>
<phase_done stamp='2.164'/>
</phase>
<phase_done stamp='2.164'/>
</phase>
<phase name='emit_lir' stamp='2.164'>
<phase name='lirGeneration' stamp='2.164'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='30467'>
<start_compile_thread name='C2 CompilerThread0' thread='30467' process='13980' stamp='0.029'/>
<task compile_id='15' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1658' iicount='1660' stamp='0.554'>
<type id='1199' name='void'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1347' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='1' compiler='c1' level='3' iicount='1752'/>
<parse method='1347' uses='1752.000000' stamp='0.554'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1204'/>
<parse_done stamp='0.554'/>
</parse>
<regalloc attempts='0' success='1'/>
<dependency type='no_finalizable_subclasses' ctxk='1204'/>
<code_cache total_blobs='313' nmethods='11' adapters='214' free_code_cache='250390272'/>
<task_done success='1' nmsize='136' count='60723' stamp='0.565'/>
</task>
<task compile_id='16' method='java.util.concurrent.atomic.AtomicLong compareAndSet (JJ)Z' bytes='13' count='59996' iicount='59999' stamp='0.565'>
<type id='1191' name='boolean'/>
<type id='1198' name='long'/>
<klass id='1347' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1348' holder='1347' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='11' compiler='c1' level='3' iicount='60052'/>
<parse method='1348' uses='60052.000000' stamp='0.565'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1350' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1350' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='22'/>
<parse_done stamp='0.566'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='315' nmethods='13' adapters='214' free_code_cache='250388096'/>
<task_done success='1' nmsize='160' count='96761' stamp='0.576'/>
</task>
<task compile_id='17' method='java.util.Random nextInt ()I' bytes='7' count='98646' iicount='98651' stamp='0.576'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='nextInt' return='1197' flags='1' bytes='7' compile_id='12' compiler='c1' level='2' iicount='98781'/>
<parse method='1348' uses='98781.000000' stamp='0.576'>
<bc code='182' bci='3'/>
<method id='1350' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='13' compiler='c1' level='2' iicount='99013'/>
<dependency type='unique_concrete_method_4' ctxk='1347' x='1350' x2='1347' x3='1350'/>
<call method='1350' count='31308' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1347'/>
<parse method='1350' uses='98784.000000' stamp='0.576'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1351' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1352' holder='1351' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1352' count='59898' prof_factor='0.997687' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1351'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1352' uses='98786.000000' stamp='0.576'>
<parse_done stamp='0.576'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1353' holder='1351' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1353' count='59898' prof_factor='0.997687' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1351'/>
<parse method='1353' uses='98786.000000' stamp='0.576'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1356' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1356' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='0.576'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='99015' cnt='99015.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.576'/>
</parse>
<parse_done stamp='0.576'/>
</parse>
<regalloc attempts='0' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1347' x='1350' x2='1347' x3='1350'/>
<code_cache total_blobs='318' nmethods='16' adapters='214' free_code_cache='250382720'/>
<task_done success='1' nmsize='240' count='908447' inlined_bytes='65' stamp='0.599'/>
</task>
<task compile_id='19' method='java.util.Random next (I)I' bytes='47' count='910355' iicount='910366' stamp='0.599'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='13' compiler='c1' level='2' iicount='910672'/>
<parse method='1348' uses='910672.000000' stamp='0.599'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1350' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1351' holder='1350' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1351' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1350'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1351' uses='910687.000000' stamp='0.599'>
<parse_done stamp='0.599'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1352' holder='1350' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1352' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1350'/>
<parse method='1352' uses='910687.000000' stamp='0.599'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1354' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1354' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='0.599'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='910687' cnt='910687.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.599'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='319' nmethods='17' adapters='214' free_code_cache='250381696'/>
<task_done success='1' nmsize='248' count='1024230' inlined_bytes='18' stamp='0.606'/>
</task>
<task compile_id='20' compile_kind='osr' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1169113' iicount='1' osr_bci='15' stamp='0.606'>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateRawWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='15' stamp='0.606'>
<klass id='1352' name='java.util.Random' flags='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='leaf_type' ctxk='1352'/>
<uncommon_trap bci='15' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='1071074' cnt='1071074.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='182' bci='21'/>
<method id='1354' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='1170429'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<call method='1354' count='1071074' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1354' uses='1071074.000000' stamp='0.606'>
<bc code='182' bci='3'/>
<method id='1356' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<call method='1356' count='1108854' prof_factor='0.915112' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1356' uses='1071053.000000' stamp='0.606'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1358' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1359' holder='1358' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1359' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1358'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1359' uses='1024247.000000' stamp='0.606'>
<parse_done stamp='0.606'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1360' holder='1358' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1360' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1358'/>
<parse method='1360' uses='1024247.000000' stamp='0.606'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1363' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1363' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='0.606'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.606'/>
</parse>
<parse_done stamp='0.606'/>
</parse>
<bc code='183' bci='32'/>
<type id='1199' name='void'/>
<klass id='1348' name='foo.rida.RawWrapper' flags='17'/>
<method id='1355' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='14' compiler='c1' level='2' iicount='1170486'/>
<call method='1355' count='1071073' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1355' uses='1071073.000000' stamp='0.606'>
<bc code='183' bci='1'/>
<method id='1367' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1148327'/>
<call method='1367' count='1186163' prof_factor='0.915067' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1367' uses='1085418.000000' stamp='0.606'>
<parse_done stamp='0.606'/>
</parse>
<parse_done stamp='0.606'/>
</parse>
<bc code='83' bci='41'/>
<uncommon_trap bci='41' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='41' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<parse_done stamp='0.606'/>
</parse>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<regalloc attempts='0' success='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<code_cache total_blobs='320' nmethods='18' adapters='214' free_code_cache='250379264'/>
<task_done success='1' nmsize='904' count='1' backedge_count='1309176' inlined_bytes='83' stamp='0.622'/>
</task>
<task compile_id='21' method='foo.rida.SimpleBenchmark generateRawWrappers (I)[Lfoo/rida/RawWrapper;' bytes='50' count='1' backedge_count='1310200' iicount='1' stamp='0.622'>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateRawWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='0.622'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1353' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='1'/>
<call method='1353' count='0' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1353' uses='0.000000' stamp='0.622'>
<bc code='184' bci='1'/>
<type id='1198' name='long'/>
<method id='1356' holder='1352' name='seedUniquifier' return='1198' flags='10' bytes='29' iicount='1'/>
<call method='1356' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1356' uses='-1.000000' stamp='0.622'>
<bc code='182' bci='3'/>
<klass id='1360' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1361' holder='1360' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1361' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1360'/>
<parse method='1361' uses='-1.000000' stamp='0.622'>
<parse_done stamp='0.622'/>
</parse>
<bc code='182' bci='18'/>
<type id='1191' name='boolean'/>
<method id='1362' holder='1360' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1362' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1360'/>
<direct_call bci='18'/>
<bc code='153' bci='21'/>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='3'/>
<call method='1361' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1360'/>
<parse method='1361' uses='-1.000000' stamp='0.622'>
<parse_done stamp='0.622'/>
</parse>
<bc code='182' bci='18'/>
<call method='1362' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1360'/>
<direct_call bci='18'/>
<parse_done stamp='0.622'/>
</parse>
<bc code='184' bci='4'/>
<klass id='1210' name='java.lang.System' flags='17'/>
<method id='1357' holder='1210' name='nanoTime' return='1198' flags='265' bytes='0' iicount='5'/>
<call method='1357' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_nanoTime' nodes='4'/>
<bc code='183' bci='8'/>
<method id='1358' holder='1352' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='53' iicount='1'/>
<call method='1358' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='-1.000000' stamp='0.623'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1368' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1271091'/>
<call method='1368' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='-1.000000' stamp='0.623'>
<parse_done stamp='0.623'/>
</parse>
<bc code='182' bci='10'/>
<klass id='1206' name='java.lang.Class' flags='17'/>
<method id='1369' holder='1204' name='getClass' return='1206' flags='273' bytes='0' iicount='60'/>
<call method='1369' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_getClass' nodes='4'/>
<bc code='184' bci='24'/>
<method id='1372' holder='1352' name='initialScramble' return='1198' arguments='1198' flags='10' bytes='10' iicount='1'/>
<call method='1372' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1372' uses='-1.000000' stamp='0.623'>
<parse_done stamp='0.623'/>
</parse>
<bc code='183' bci='27'/>
<method id='1373' holder='1360' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='10' iicount='2'/>
<call method='1373' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1373' uses='-1.000000' stamp='0.623'>
<bc code='183' bci='1'/>
<klass id='1318' name='java.lang.Number' flags='1025'/>
<method id='1377' holder='1318' name='&lt;init&gt;' return='1199' flags='1' bytes='5' iicount='3'/>
<call method='1377' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1377' uses='-1.000000' stamp='0.623'>
<bc code='183' bci='1'/>
<call method='1368' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='-1.000000' stamp='0.623'>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='1211391' cnt='1211391.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='17' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='21'/>
<method id='1354' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='1309176'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<call method='1354' count='1211391' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<parse method='1354' uses='1211391.000000' stamp='0.623'>
<bc code='182' bci='3'/>
<method id='1383' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1383' x2='1352' x3='1383'/>
<call method='1383' count='1241675' prof_factor='0.925308' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1383' uses='1211392.000000' stamp='0.623'>
<bc code='182' bci='8'/>
<call method='1361' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1360'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1361' uses='1024247.000000' stamp='0.623'>
<parse_done stamp='0.623'/>
</parse>
<bc code='182' bci='32'/>
<call method='1362' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1360'/>
<parse method='1362' uses='1024247.000000' stamp='0.623'>
<bc code='182' bci='9'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1367' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1367' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='0.623'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<bc code='183' bci='32'/>
<klass id='1348' name='foo.rida.RawWrapper' flags='17'/>
<method id='1355' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='14' compiler='c1' level='2' iicount='1310199'/>
<call method='1355' count='1211391' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1355' uses='1211391.000000' stamp='0.623'>
<bc code='183' bci='1'/>
<call method='1368' count='1308665' prof_factor='0.924586' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='1211392.000000' stamp='0.623'>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<bc code='83' bci='41'/>
<uncommon_trap bci='41' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='1211391' cnt='1211391.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.623'/>
</parse>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' >
</loop>
</loop>
</loop_tree>
<eliminate_allocation type='1352'>
<jvms bci='5' method='1350'/>
</eliminate_allocation>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1383' x2='1352' x3='1383'/>
<code_cache total_blobs='321' nmethods='19' adapters='214' free_code_cache='250375552'/>
<task_done success='1' nmsize='1384' count='1' backedge_count='1310200' inlined_bytes='214' stamp='0.668'/>
</task>
<task compile_id='23' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='2718796' iicount='1' osr_bci='10' stamp='0.847'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkRawWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='10' stamp='0.847'>
<uncommon_trap bci='10' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='2646092' cnt='2646092.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='180' bci='25'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse_done stamp='0.847'/>
</parse>
<loop_tree>
<loop idx='205' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='205' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='268' >
<loop idx='472' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='335' inner_loop='1' >
</loop>
<loop idx='268' >
<loop idx='472' inner_loop='1' >
</loop>
</loop>
<loop idx='288' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='335' inner_loop='1' >
</loop>
<loop idx='268' >
<loop idx='575' inner_loop='1' >
</loop>
</loop>
<loop idx='288' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='335' inner_loop='1' >
</loop>
<loop idx='268' >
<loop idx='575' inner_loop='1' >
</loop>
</loop>
<loop idx='288' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='323' nmethods='21' adapters='214' free_code_cache='250372352'/>
<task_done success='1' nmsize='496' count='1' backedge_count='3457438' stamp='0.857'/>
</task>
<task compile_id='24' method='foo.rida.SimpleBenchmark benchmarkRawWrappers ([Lfoo/rida/RawWrapper;)I' bytes='38' count='1' backedge_count='3458462' iicount='1' stamp='0.858'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.RawWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkRawWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='0.858'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='3375103' cnt='3375103.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='180' bci='25'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='3375103' cnt='3375103.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.858'/>
</parse>
<loop_tree>
<loop idx='179' >
<loop idx='180' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='179' >
<loop idx='398' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='276' inner_loop='1' >
</loop>
<loop idx='179' >
<loop idx='483' inner_loop='1' >
</loop>
</loop>
<loop idx='240' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='276' inner_loop='1' >
</loop>
<loop idx='179' >
<loop idx='483' inner_loop='1' >
</loop>
</loop>
<loop idx='240' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='276' inner_loop='1' >
</loop>
<loop idx='179' >
<loop idx='483' inner_loop='1' >
</loop>
</loop>
<loop idx='240' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='276' inner_loop='1' >
</loop>
<loop idx='179' >
<loop idx='483' inner_loop='1' >
</loop>
</loop>
<loop idx='240' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='324' nmethods='22' adapters='214' free_code_cache='250370816'/>
<task_done success='1' nmsize='344' count='1' backedge_count='3458462' stamp='0.866'/>
</task>
<task compile_id='109' method='java.lang.String charAt (I)C' bytes='25' count='9782' iicount='9793' stamp='1.374'>
<type id='1192' name='char'/>
<type id='1197' name='int'/>
<klass id='1205' name='java.lang.String' flags='17'/>
<method id='1347' holder='1205' name='charAt' return='1192' arguments='1197' flags='1' bytes='25' compile_id='6' compiler='c1' level='3' iicount='9809'/>
<klass id='1350' name='java.lang.StringUTF16' unloaded='1'/>
<uncommon_trap method='1347' bci='21' reason='unloaded' action='reinterpret' index='48' debug_id='0' klass='1350'/>
<parse method='1347' uses='9809.000000' stamp='1.374'>
<bc code='182' bci='1'/>
<type id='1191' name='boolean'/>
<method id='1349' holder='1205' name='isLatin1' return='1191' flags='0' bytes='19' compile_id='3' compiler='c1' level='3' iicount='10859'/>
<call method='1349' count='9357' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='1' exact='0' klass='1205'/>
<parse method='1349' uses='9802.000000' stamp='1.375'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='10860' cnt='10860.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='10860' cnt='10860.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.375'/>
</parse>
<bc code='153' bci='4'/>
<branch target_bci='16' taken='0' not_taken='9802' cnt='9802.000000' prob='never'/>
<bc code='184' bci='12'/>
<klass id='1339' name='[B' flags='1041'/>
<klass id='1352' name='java.lang.StringLatin1' flags='16'/>
<method id='1353' holder='1352' name='charAt' return='1192' arguments='1339 1197' flags='9' bytes='15' iicount='10040'/>
<call method='1353' count='9357' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1353' uses='9802.000000' stamp='1.375'>
<bc code='190' bci='2'/>
<uncommon_trap bci='2' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='184' bci='3'/>
<type id='1199' name='void'/>
<method id='1356' holder='1205' name='checkIndex' return='1199' arguments='1197 1197' flags='8' bytes='10' iicount='10040'/>
<call method='1356' count='9529' prof_factor='0.976295' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1356' uses='9803.000000' stamp='1.375'>
<bc code='184' bci='5'/>
<klass id='1358' name='java.util.function.BiFunction' flags='1537'/>
<klass id='1359' name='jdk.internal.util.Preconditions' flags='1'/>
<method id='1360' holder='1359' name='checkIndex' return='1197' arguments='1197 1197 1358' flags='9' bytes='18' compile_id='5' compiler='c1' level='3' iicount='995'/>
<call method='1360' count='9529' prof_factor='0.976394' inline='1'/>
<uncommon_trap bci='5' reason='range_check' action='make_not_entrant' debug_id='0'/>
<intrinsic id='_Preconditions_checkIndex' nodes='22'/>
<parse_done stamp='1.375'/>
</parse>
<bc code='51' bci='8'/>
<uncommon_trap bci='8' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<parse_done stamp='1.375'/>
</parse>
<parse_done stamp='1.375'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='472' nmethods='107' adapters='277' free_code_cache='250196096'/>
<task_done success='1' nmsize='248' count='10040' inlined_bytes='62' stamp='1.399'/>
</task>
<task compile_id='119' method='foo.rida.GetterWrapper &lt;init&gt; (I)V' bytes='10' count='107188' iicount='107196' stamp='1.436'>
<type id='1199' name='void'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1348' holder='1347' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='118' compiler='c1' level='3' iicount='107469'/>
<parse method='1348' uses='107469.000000' stamp='1.436'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1350' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='1375487'/>
<call method='1350' count='107102' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1350' uses='107455.000000' stamp='1.436'>
<parse_done stamp='1.436'/>
</parse>
<parse_done stamp='1.436'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='477' nmethods='112' adapters='277' free_code_cache='250183936'/>
<task_done success='1' nmsize='136' count='114601' inlined_bytes='1' stamp='1.438'/>
</task>
<task compile_id='121' compile_kind='osr' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1106164' iicount='1' osr_bci='15' stamp='1.479'>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateGetterWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='15' stamp='1.479'>
<klass id='1352' name='java.util.Random' flags='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='leaf_type' ctxk='1352'/>
<uncommon_trap bci='15' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='987233' cnt='987233.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='182' bci='21'/>
<method id='1354' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='2288028'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<call method='1354' count='987233' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1354' uses='987233.000000' stamp='1.479'>
<bc code='182' bci='3'/>
<method id='1356' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<call method='1356' count='2227420' prof_factor='0.431478' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1356' uses='987223.000000' stamp='1.479'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1358' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1359' holder='1358' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1359' count='59898' prof_factor='0.963868' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1358'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1359' uses='987239.000000' stamp='1.479'>
<parse_done stamp='1.479'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1360' holder='1358' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1360' count='59898' prof_factor='0.963868' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1358'/>
<parse method='1360' uses='987239.000000' stamp='1.479'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1363' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1363' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.480'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.480'/>
</parse>
<parse_done stamp='1.480'/>
</parse>
<bc code='183' bci='32'/>
<type id='1199' name='void'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1355' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='119' compiler='c2' level='4' iicount='1093507'/>
<call method='1355' count='987233' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1355' uses='987233.000000' stamp='1.480'>
<bc code='183' bci='1'/>
<method id='1367' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='2380439'/>
<call method='1367' count='1112811' prof_factor='0.902814' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1367' uses='1004661.000000' stamp='1.480'>
<parse_done stamp='1.480'/>
</parse>
<parse_done stamp='1.480'/>
</parse>
<bc code='83' bci='41'/>
<uncommon_trap bci='41' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='41' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<parse_done stamp='1.480'/>
</parse>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='598' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<regalloc attempts='0' success='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<code_cache total_blobs='480' nmethods='115' adapters='277' free_code_cache='250176768'/>
<task_done success='1' nmsize='904' count='1' backedge_count='1456128' inlined_bytes='83' stamp='1.501'/>
</task>
<task compile_id='122' method='foo.rida.SimpleBenchmark generateGetterWrappers (I)[Lfoo/rida/GetterWrapper;' bytes='50' count='1' backedge_count='1457152' iicount='1' stamp='1.501'>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateGetterWrappers' return='1349' arguments='1197' flags='9' bytes='50' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='1.501'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1353' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='2'/>
<call method='1353' count='0' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1353' uses='0.000000' stamp='1.501'>
<bc code='184' bci='1'/>
<type id='1198' name='long'/>
<method id='1356' holder='1352' name='seedUniquifier' return='1198' flags='10' bytes='29' iicount='2'/>
<call method='1356' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1356' uses='-1.000000' stamp='1.501'>
<bc code='182' bci='3'/>
<klass id='1360' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1361' holder='1360' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1361' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1360'/>
<parse method='1361' uses='-1.000000' stamp='1.501'>
<parse_done stamp='1.501'/>
</parse>
<bc code='182' bci='18'/>
<type id='1191' name='boolean'/>
<method id='1362' holder='1360' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1362' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1360'/>
<direct_call bci='18'/>
<bc code='153' bci='21'/>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='3'/>
<call method='1361' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1360'/>
<parse method='1361' uses='-1.000000' stamp='1.501'>
<parse_done stamp='1.501'/>
</parse>
<bc code='182' bci='18'/>
<call method='1362' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1360'/>
<direct_call bci='18'/>
<parse_done stamp='1.501'/>
</parse>
<bc code='184' bci='4'/>
<klass id='1210' name='java.lang.System' flags='17'/>
<method id='1357' holder='1210' name='nanoTime' return='1198' flags='265' bytes='0' iicount='6'/>
<call method='1357' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_nanoTime' nodes='4'/>
<bc code='183' bci='8'/>
<method id='1358' holder='1352' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='53' iicount='2'/>
<call method='1358' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='-1.000000' stamp='1.502'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1368' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='2708119'/>
<call method='1368' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='-1.000000' stamp='1.502'>
<parse_done stamp='1.502'/>
</parse>
<bc code='182' bci='10'/>
<klass id='1206' name='java.lang.Class' flags='17'/>
<method id='1369' holder='1204' name='getClass' return='1206' flags='273' bytes='0' iicount='151'/>
<call method='1369' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_getClass' nodes='4'/>
<bc code='184' bci='24'/>
<method id='1372' holder='1352' name='initialScramble' return='1198' arguments='1198' flags='10' bytes='10' iicount='2'/>
<call method='1372' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1372' uses='-1.000000' stamp='1.502'>
<parse_done stamp='1.502'/>
</parse>
<bc code='183' bci='27'/>
<method id='1373' holder='1360' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='10' iicount='3'/>
<call method='1373' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1373' uses='-1.000000' stamp='1.502'>
<bc code='183' bci='1'/>
<klass id='1318' name='java.lang.Number' flags='1025'/>
<method id='1377' holder='1318' name='&lt;init&gt;' return='1199' flags='1' bytes='5' iicount='13'/>
<call method='1377' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1377' uses='-1.000000' stamp='1.502'>
<bc code='183' bci='1'/>
<call method='1368' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='-1.000000' stamp='1.502'>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='1336319' cnt='1336319.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='17' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='21'/>
<method id='1354' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='2635256'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<call method='1354' count='1336319' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<parse method='1354' uses='1336319.000000' stamp='1.502'>
<bc code='182' bci='3'/>
<method id='1383' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1383' x2='1352' x3='1383'/>
<call method='1383' count='2567755' prof_factor='0.507093' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1383' uses='1336319.000000' stamp='1.502'>
<bc code='182' bci='8'/>
<call method='1361' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1360'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1361' uses='1024247.000000' stamp='1.502'>
<parse_done stamp='1.502'/>
</parse>
<bc code='182' bci='32'/>
<call method='1362' count='59898' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1360'/>
<parse method='1362' uses='1024247.000000' stamp='1.502'>
<bc code='182' bci='9'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1367' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1367' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.502'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<bc code='183' bci='32'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1355' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='119' compiler='c2' level='4' iicount='1440681'/>
<call method='1355' count='1336319' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1355' uses='1336319.000000' stamp='1.502'>
<bc code='183' bci='1'/>
<call method='1368' count='1440170' prof_factor='0.927561' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1368' uses='1336320.000000' stamp='1.502'>
<parse_done stamp='1.502'/>
</parse>
<parse_done stamp='1.502'/>
</parse>
<bc code='83' bci='41'/>
<uncommon_trap bci='41' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='17'/>
<branch target_bci='48' taken='0' not_taken='1336319' cnt='1336319.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.502'/>
</parse>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' >
</loop>
</loop>
</loop_tree>
<eliminate_allocation type='1352'>
<jvms bci='5' method='1350'/>
</eliminate_allocation>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1100' inner_loop='1' >
</loop>
<loop idx='1109' >
<loop idx='1110' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1354' x2='1352' x3='1354'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1383' x2='1352' x3='1383'/>
<code_cache total_blobs='481' nmethods='116' adapters='277' free_code_cache='250173056'/>
<task_done success='1' nmsize='1384' count='1' backedge_count='1457152' inlined_bytes='214' stamp='1.531'/>
</task>
<task compile_id='125' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='2451839' iicount='1' osr_bci='10' stamp='1.688'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='10' stamp='1.688'>
<uncommon_trap bci='10' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='2381484' cnt='2381484.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1352' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='123' compiler='c1' level='1' iicount='6266'/>
<call method='1352' count='2381483' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='25' exact='0' klass='1348'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1352' uses='2381483.000000' stamp='1.688'>
<parse_done stamp='1.688'/>
</parse>
<parse_done stamp='1.688'/>
</parse>
<loop_tree>
<loop idx='225' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='225' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='288' >
<loop idx='492' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='492' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='595' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='595' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='484' nmethods='119' adapters='277' free_code_cache='250168960'/>
<task_done success='1' nmsize='496' count='1' backedge_count='3095552' inlined_bytes='5' stamp='1.698'/>
</task>
<task compile_id='126' method='foo.rida.SimpleBenchmark benchmarkGetterWrappers ([Lfoo/rida/GetterWrapper;)I' bytes='38' count='1' backedge_count='3096576' iicount='1' stamp='1.698'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.GetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='1.698'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='3020799' cnt='3020799.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.GetterWrapper' flags='17'/>
<method id='1352' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='123' compiler='c1' level='1' iicount='6266'/>
<call method='1352' count='3020799' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='25' exact='0' klass='1348'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1352' uses='3020799.000000' stamp='1.698'>
<parse_done stamp='1.698'/>
</parse>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='3020799' cnt='3020799.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.698'/>
</parse>
<loop_tree>
<loop idx='198' >
<loop idx='199' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='198' >
<loop idx='417' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='485' nmethods='120' adapters='277' free_code_cache='250167424'/>
<task_done success='1' nmsize='344' count='1' backedge_count='3096576' inlined_bytes='5' stamp='1.707'/>
</task>
<task compile_id='131' method='java.util.Random nextInt (I)I' bytes='74' count='85738' iicount='85742' stamp='1.759'>
<type id='1197' name='int'/>
<klass id='1347' name='java.util.Random' flags='1'/>
<method id='1348' holder='1347' name='nextInt' return='1197' arguments='1197' flags='1' bytes='74' compile_id='127' compiler='c1' level='3' iicount='85859'/>
<klass id='1351' name='java.lang.IllegalArgumentException' flags='1'/>
<uncommon_trap method='1348' bci='4' reason='unloaded' action='reinterpret' index='95' debug_id='0' klass='1351'/>
<parse method='1348' uses='85859.000000' stamp='1.759'>
<bc code='157' bci='1'/>
<branch target_bci='14' taken='85845' not_taken='0' cnt='85845.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='182' bci='17'/>
<method id='1350' holder='1347' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1347' x='1350' x2='1347' x3='1350'/>
<call method='1350' count='85419' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='17' exact='0' klass='1347'/>
<parse method='1350' uses='85845.000000' stamp='1.759'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1352' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1353' holder='1352' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1353' count='59898' prof_factor='0.083814' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1352'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1353' uses='85846.000000' stamp='1.759'>
<parse_done stamp='1.759'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1354' holder='1352' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1354' count='59898' prof_factor='0.083814' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1352'/>
<parse method='1354' uses='85846.000000' stamp='1.759'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1357' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1357' count='794' prof_factor='0.887196' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.759'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.759'/>
</parse>
<bc code='154' bci='28'/>
<branch target_bci='44' taken='0' not_taken='85844' cnt='85844.000000' prob='never'/>
<uncommon_trap bci='28' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.759'/>
</parse>
<regalloc attempts='2' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1347' x='1350' x2='1347' x3='1350'/>
<code_cache total_blobs='490' nmethods='124' adapters='277' free_code_cache='250155904'/>
<task_done success='1' nmsize='344' count='779120' inlined_bytes='65' stamp='1.790'/>
</task>
<task compile_id='132' compile_kind='osr' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='783952' iicount='1' osr_bci='15' stamp='1.793'>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateVirtualGetterWrappers' return='1349' arguments='1197' flags='9' bytes='76' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='15' stamp='1.793'>
<klass id='1352' name='java.util.Random' flags='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='leaf_type' ctxk='1352'/>
<uncommon_trap bci='15' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='17'/>
<branch target_bci='74' taken='0' not_taken='692699' cnt='692699.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='182' bci='21'/>
<method id='1355' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='3328516'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<call method='1355' count='692699' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1355' uses='692699.000000' stamp='1.793'>
<bc code='182' bci='3'/>
<method id='1359' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1359' x2='1352' x3='1359'/>
<call method='1359' count='3265433' prof_factor='0.208110' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1359' uses='692696.000000' stamp='1.794'>
<bc code='182' bci='8'/>
<type id='1198' name='long'/>
<klass id='1361' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1362' holder='1361' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1362' count='59898' prof_factor='0.676309' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1361'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1362' uses='692708.000000' stamp='1.794'>
<parse_done stamp='1.794'/>
</parse>
<bc code='182' bci='32'/>
<type id='1191' name='boolean'/>
<method id='1363' holder='1361' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1363' count='59898' prof_factor='0.676309' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1361'/>
<parse method='1363' uses='692708.000000' stamp='1.794'>
<bc code='182' bci='9'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1366' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1366' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.794'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.794'/>
</parse>
<parse_done stamp='1.794'/>
</parse>
<bc code='182' bci='28'/>
<method id='1356' holder='1352' name='nextInt' return='1197' arguments='1197' flags='1' bytes='74' compile_id='131' compiler='c2' level='4' iicount='779120'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<call method='1356' count='692699' prof_factor='1.000000' inline='1'/>
<klass id='1370' name='java.lang.IllegalArgumentException' flags='1'/>
<uncommon_trap method='1356' bci='4' reason='unloaded' action='reinterpret' index='95' debug_id='0' klass='1370'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='28' exact='0' klass='1352'/>
<parse method='1356' uses='692699.000000' stamp='1.794'>
<bc code='157' bci='1'/>
<branch target_bci='14' taken='779121' not_taken='0' cnt='779121.000000' prob='always'/>
<bc code='182' bci='17'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1359' x2='1352' x3='1359'/>
<call method='1359' count='778609' prof_factor='0.889079' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='17' exact='0' klass='1352'/>
<parse method='1359' uses='692700.000000' stamp='1.794'>
<bc code='182' bci='8'/>
<call method='1362' count='59898' prof_factor='0.676313' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1361'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1362' uses='692712.000000' stamp='1.794'>
<parse_done stamp='1.794'/>
</parse>
<bc code='182' bci='32'/>
<call method='1363' count='59898' prof_factor='0.676313' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1361'/>
<parse method='1363' uses='692712.000000' stamp='1.794'>
<bc code='182' bci='9'/>
<call method='1366' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.794'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.794'/>
</parse>
<bc code='154' bci='28'/>
<branch target_bci='44' taken='0' not_taken='779121' cnt='779121.000000' prob='never'/>
<parse_done stamp='1.794'/>
</parse>
<bc code='154' bci='35'/>
<branch target_bci='52' taken='346408' not_taken='346291' cnt='692699.000000' prob='                0.50'/>
<bc code='183' bci='44'/>
<type id='1199' name='void'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1358' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='128' compiler='c1' level='2' iicount='785242'/>
<call method='1358' count='346291' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='346291.000000' stamp='1.794'>
<bc code='183' bci='1'/>
<method id='1372' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='3418660'/>
<call method='1372' count='802090' prof_factor='0.440999' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1372' uses='353721.000000' stamp='1.794'>
<parse_done stamp='1.794'/>
</parse>
<parse_done stamp='1.794'/>
</parse>
<bc code='183' bci='58'/>
<klass id='1353' name='foo.rida.ChildGetterWrapper' flags='1'/>
<method id='1357' holder='1353' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='6' compile_id='129' compiler='c1' level='2' iicount='392545'/>
<call method='1357' count='346408' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1357' uses='346408.000000' stamp='1.794'>
<bc code='183' bci='2'/>
<call method='1358' count='401947' prof_factor='0.882467' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='354705.000000' stamp='1.794'>
<bc code='183' bci='1'/>
<call method='1372' count='802090' prof_factor='0.451714' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1372' uses='362315.000000' stamp='1.794'>
<parse_done stamp='1.794'/>
</parse>
<parse_done stamp='1.794'/>
</parse>
<parse_done stamp='1.794'/>
</parse>
<bc code='83' bci='67'/>
<uncommon_trap bci='67' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='67' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<uncommon_trap bci='67' reason='array_check' action='maybe_recompile' debug_id='0' klass='1349'/>
<cast_up reason='monomorphic_array' from='1349' to='(exact)'/>
<uncommon_trap bci='67' reason='array_check' action='maybe_recompile' debug_id='0'/>
<parse_done stamp='1.794'/>
</parse>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='899' inner_loop='1' >
</loop>
</loop_tree>
<dependency type='leaf_type' ctxk='1352'/>
<regalloc attempts='0' success='1'/>
<dependency type='leaf_type' ctxk='1352'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1359' x2='1352' x3='1359'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<code_cache total_blobs='492' nmethods='126' adapters='277' free_code_cache='250151680'/>
<task_done success='1' nmsize='1312' count='1' backedge_count='913119' inlined_bytes='239' stamp='1.817'/>
</task>
<task compile_id='133' method='foo.rida.SimpleBenchmark generateVirtualGetterWrappers (I)[Lfoo/rida/ParentGetterWrapper;' bytes='76' count='1' backedge_count='914143' iicount='1' stamp='1.817'>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<type id='1197' name='int'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='generateVirtualGetterWrappers' return='1349' arguments='1197' flags='9' bytes='76' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='1.817'>
<bc code='183' bci='9'/>
<type id='1199' name='void'/>
<klass id='1352' name='java.util.Random' flags='1'/>
<method id='1354' holder='1352' name='&lt;init&gt;' return='1199' flags='1' bytes='12' iicount='3'/>
<call method='1354' count='0' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1354' uses='0.000000' stamp='1.817'>
<bc code='184' bci='1'/>
<type id='1198' name='long'/>
<method id='1359' holder='1352' name='seedUniquifier' return='1198' flags='10' bytes='29' iicount='3'/>
<call method='1359' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1359' uses='-1.000000' stamp='1.817'>
<bc code='182' bci='3'/>
<klass id='1363' name='java.util.concurrent.atomic.AtomicLong' flags='1'/>
<method id='1364' holder='1363' name='get' return='1198' flags='17' bytes='5' compile_id='9' compiler='c1' level='1' iicount='384'/>
<call method='1364' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1363'/>
<parse method='1364' uses='-1.000000' stamp='1.817'>
<parse_done stamp='1.817'/>
</parse>
<bc code='182' bci='18'/>
<type id='1191' name='boolean'/>
<method id='1365' holder='1363' name='compareAndSet' return='1191' arguments='1198 1198' flags='17' bytes='13' compile_id='16' compiler='c2' level='4' iicount='96761'/>
<call method='1365' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1363'/>
<direct_call bci='18'/>
<bc code='153' bci='21'/>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='3'/>
<call method='1364' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='3' exact='0' klass='1363'/>
<parse method='1364' uses='-1.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<bc code='182' bci='18'/>
<call method='1365' count='-1' prof_factor='1.000000' inline='1'/>
<inline_fail reason='low call site frequency'/>
<predicted_call bci='18' exact='0' klass='1363'/>
<direct_call bci='18'/>
<parse_done stamp='1.818'/>
</parse>
<bc code='184' bci='4'/>
<klass id='1210' name='java.lang.System' flags='17'/>
<method id='1360' holder='1210' name='nanoTime' return='1198' flags='265' bytes='0' iicount='10'/>
<call method='1360' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_nanoTime' nodes='4'/>
<bc code='183' bci='8'/>
<method id='1361' holder='1352' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='53' iicount='3'/>
<call method='1361' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1361' uses='-1.000000' stamp='1.818'>
<bc code='183' bci='1'/>
<klass id='1204' name='java.lang.Object' flags='1'/>
<method id='1371' holder='1204' name='&lt;init&gt;' return='1199' flags='1' bytes='1' compile_id='15' compiler='c2' level='4' iicount='3529368'/>
<call method='1371' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1371' uses='-1.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<bc code='182' bci='10'/>
<klass id='1206' name='java.lang.Class' flags='17'/>
<method id='1372' holder='1204' name='getClass' return='1206' flags='273' bytes='0' iicount='159'/>
<call method='1372' count='-1' prof_factor='1.000000' inline='1'/>
<intrinsic id='_getClass' nodes='4'/>
<bc code='184' bci='24'/>
<method id='1375' holder='1352' name='initialScramble' return='1198' arguments='1198' flags='10' bytes='10' iicount='3'/>
<call method='1375' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1375' uses='-1.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<bc code='183' bci='27'/>
<method id='1376' holder='1363' name='&lt;init&gt;' return='1199' arguments='1198' flags='1' bytes='10' iicount='4'/>
<call method='1376' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1376' uses='-1.000000' stamp='1.818'>
<bc code='183' bci='1'/>
<klass id='1318' name='java.lang.Number' flags='1025'/>
<method id='1380' holder='1318' name='&lt;init&gt;' return='1199' flags='1' bytes='5' iicount='14'/>
<call method='1380' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1380' uses='-1.000000' stamp='1.818'>
<bc code='183' bci='1'/>
<call method='1371' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1371' uses='-1.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<bc code='162' bci='17'/>
<branch target_bci='74' taken='0' not_taken='822271' cnt='822271.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='17' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='17' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='21'/>
<method id='1355' holder='1352' name='nextInt' return='1197' flags='1' bytes='7' compile_id='17' compiler='c2' level='4' iicount='3456504'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<call method='1355' count='822271' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='21' exact='0' klass='1352'/>
<parse method='1355' uses='822271.000000' stamp='1.818'>
<bc code='182' bci='3'/>
<method id='1386' holder='1352' name='next' return='1197' arguments='1197' flags='4' bytes='47' compile_id='19' compiler='c2' level='4' iicount='1024230'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1386' x2='1352' x3='1386'/>
<call method='1386' count='3389003' prof_factor='0.237891' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='3' exact='0' klass='1352'/>
<parse method='1386' uses='822271.000000' stamp='1.818'>
<bc code='182' bci='8'/>
<call method='1364' count='59898' prof_factor='0.802819' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1363'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1364' uses='822285.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<bc code='182' bci='32'/>
<call method='1365' count='59898' prof_factor='0.802819' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1363'/>
<parse method='1365' uses='822285.000000' stamp='1.818'>
<bc code='182' bci='9'/>
<klass id='1291' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1370' holder='1291' name='compareAndSetLong' return='1191' arguments='1204 1198 1198 1198' flags='273' bytes='0' compile_id='10' compile_kind='c2n' compiler='' level='0' iicount='384'/>
<call method='1370' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.818'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<bc code='182' bci='28'/>
<method id='1356' holder='1352' name='nextInt' return='1197' arguments='1197' flags='1' bytes='74' compile_id='131' compiler='c2' level='4' iicount='779120'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<call method='1356' count='822271' prof_factor='1.000000' inline='1'/>
<klass id='1392' name='java.lang.IllegalArgumentException' flags='1'/>
<uncommon_trap method='1356' bci='4' reason='unloaded' action='reinterpret' index='95' debug_id='0' klass='1392'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='28' exact='0' klass='1352'/>
<parse method='1356' uses='822271.000000' stamp='1.818'>
<bc code='157' bci='1'/>
<branch target_bci='14' taken='779121' not_taken='0' cnt='779121.000000' prob='always'/>
<bc code='182' bci='17'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1386' x2='1352' x3='1386'/>
<call method='1386' count='778609' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='17' exact='0' klass='1352'/>
<parse method='1386' uses='779121.000000' stamp='1.818'>
<bc code='182' bci='8'/>
<call method='1364' count='59898' prof_factor='0.760689' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='8' exact='0' klass='1363'/>
<uncommon_trap bci='8' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1364' uses='779134.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<bc code='182' bci='32'/>
<call method='1365' count='59898' prof_factor='0.760689' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='32' exact='0' klass='1363'/>
<parse method='1365' uses='779134.000000' stamp='1.818'>
<bc code='182' bci='9'/>
<call method='1370' count='794' prof_factor='1.000000' inline='1'/>
<intrinsic id='_compareAndSetLong' nodes='21'/>
<parse_done stamp='1.818'/>
</parse>
<bc code='153' bci='35'/>
<branch target_bci='6' taken='0' not_taken='1024247' cnt='1024247.000000' prob='never'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.818'/>
</parse>
<bc code='154' bci='28'/>
<branch target_bci='44' taken='0' not_taken='779121' cnt='779121.000000' prob='never'/>
<parse_done stamp='1.818'/>
</parse>
<bc code='154' bci='35'/>
<branch target_bci='52' taken='411447' not_taken='410824' cnt='822271.000000' prob='                0.50'/>
<bc code='183' bci='44'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1358' holder='1348' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='10' compile_id='128' compiler='c1' level='2' iicount='913622'/>
<call method='1358' count='410824' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='410824.000000' stamp='1.818'>
<bc code='183' bci='1'/>
<call method='1371' count='912608' prof_factor='0.449665' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1371' uses='410824.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<bc code='183' bci='58'/>
<klass id='1353' name='foo.rida.ChildGetterWrapper' flags='1'/>
<method id='1357' holder='1353' name='&lt;init&gt;' return='1199' arguments='1197' flags='1' bytes='6' compile_id='129' compiler='c1' level='2' iicount='457273'/>
<call method='1357' count='411447' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1357' uses='411447.000000' stamp='1.818'>
<bc code='183' bci='2'/>
<call method='1358' count='456242' prof_factor='0.899784' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1358' uses='411448.000000' stamp='1.818'>
<bc code='183' bci='1'/>
<call method='1371' count='912608' prof_factor='0.450348' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1371' uses='411448.000000' stamp='1.818'>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<parse_done stamp='1.818'/>
</parse>
<bc code='83' bci='67'/>
<uncommon_trap bci='67' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<uncommon_trap bci='67' reason='array_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='17'/>
<branch target_bci='74' taken='0' not_taken='822271' cnt='822271.000000' prob='never'/>
<uncommon_trap bci='17' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.818'/>
</parse>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' >
</loop>
</loop>
</loop_tree>
<eliminate_allocation type='1352'>
<jvms bci='5' method='1350'/>
</eliminate_allocation>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='1380' inner_loop='1' >
</loop>
<loop idx='1389' >
<loop idx='1390' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1355' x2='1352' x3='1355'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1386' x2='1352' x3='1386'/>
<dependency type='unique_concrete_method_4' ctxk='1352' x='1356' x2='1352' x3='1356'/>
<code_cache total_blobs='493' nmethods='127' adapters='277' free_code_cache='250147072'/>
<task_done success='1' nmsize='1792' count='1' backedge_count='914143' inlined_bytes='370' stamp='1.850'/>
</task>
<task compile_id='136' compile_kind='osr' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1176241' iicount='1' osr_bci='10' stamp='2.142'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkVirtualGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' osr_bci='10' stamp='2.142'>
<uncommon_trap bci='10' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='1101190' cnt='1101190.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1353' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='134' compiler='c1' level='1' iicount='7029'/>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1353' x2='1348' x3='1353'/>
<call method='1353' count='1101190' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='25' exact='0' klass='1348'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1353' uses='1101190.000000' stamp='2.143'>
<parse_done stamp='2.143'/>
</parse>
<parse_done stamp='2.143'/>
</parse>
<loop_tree>
<loop idx='225' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='225' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='288' >
<loop idx='492' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='492' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='595' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='355' inner_loop='1' >
</loop>
<loop idx='288' >
<loop idx='595' inner_loop='1' >
</loop>
</loop>
<loop idx='308' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='0' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1353' x2='1348' x3='1353'/>
<code_cache total_blobs='491' nmethods='125' adapters='277' free_code_cache='250150400'/>
<task_done success='1' nmsize='512' count='1' backedge_count='1449752' inlined_bytes='5' stamp='2.153'/>
</task>
<task compile_id='137' method='foo.rida.SimpleBenchmark benchmarkVirtualGetterWrappers ([Lfoo/rida/ParentGetterWrapper;)I' bytes='38' count='1' backedge_count='1450776' iicount='1' stamp='2.153'>
<type id='1197' name='int'/>
<klass id='1349' name='[Lfoo.rida.ParentGetterWrapper;' flags='1041'/>
<klass id='1347' name='foo.rida.SimpleBenchmark' flags='1'/>
<method id='1350' holder='1347' name='benchmarkVirtualGetterWrappers' return='1197' arguments='1349' flags='9' bytes='38' iicount='1'/>
<parse method='1350' uses='1.000000' stamp='2.153'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='1373183' cnt='1373183.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='50' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='182' bci='25'/>
<klass id='1348' name='foo.rida.ParentGetterWrapper' flags='1'/>
<method id='1353' holder='1348' name='getNumber' return='1197' flags='1' bytes='5' compile_id='134' compiler='c1' level='1' iicount='7029'/>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1353' x2='1348' x3='1353'/>
<call method='1353' count='1373183' prof_factor='1.000000' inline='1'/>
<inline_success reason='accessor'/>
<predicted_call bci='25' exact='0' klass='1348'/>
<uncommon_trap bci='25' reason='null_check' action='maybe_recompile' debug_id='0'/>
<parse method='1353' uses='1373183.000000' stamp='2.153'>
<parse_done stamp='2.153'/>
</parse>
<bc code='162' bci='13'/>
<branch target_bci='36' taken='0' not_taken='1373183' cnt='1373183.000000' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='2.153'/>
</parse>
<loop_tree>
<loop idx='198' >
<loop idx='199' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='198' >
<loop idx='417' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='295' inner_loop='1' >
</loop>
<loop idx='198' >
<loop idx='501' inner_loop='1' >
</loop>
</loop>
<loop idx='259' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<dependency type='unique_concrete_method_4' ctxk='1348' x='1353' x2='1348' x3='1353'/>
<code_cache total_blobs='492' nmethods='126' adapters='277' free_code_cache='250148864'/>
<task_done success='1' nmsize='344' count='1' backedge_count='1450776' inlined_bytes='5' stamp='2.161'/>
</task>
</compilation_log>
<hotspot_log_done stamp='2.167'/>
</hotspot_log>
